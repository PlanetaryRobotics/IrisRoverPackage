// megafunction wizard: %FIFO%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: dcfifo 

// ============================================================
// File Name: FIFO.v
// Megafunction Name(s):
// 			dcfifo
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 22.1std.2 Build 922 07/20/2023 SC Standard Edition
// ************************************************************


//Copyright (C) 2023  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and any partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details, at
//https://fpgasoftware.intel.com/eula.


//dcfifo_mixed_widths ADD_USEDW_MSB_BIT="ON" DEVICE_FAMILY="Cyclone 10 LP" LPM_NUMWORDS=32768 LPM_SHOWAHEAD="ON" LPM_WIDTH=8 LPM_WIDTH_R=8 LPM_WIDTHU=16 LPM_WIDTHU_R=16 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=5 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRSYNC_DELAYPIPE=5 data q rdclk rdempty rdreq wrclk wrfull wrreq wrusedw INTENDED_DEVICE_FAMILY="Cyclone 10 LP" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 22.1 cbx_a_gray2bin 2023:07:20:14:03:03:SC cbx_a_graycounter 2023:07:20:14:03:03:SC cbx_altdpram 2023:07:20:14:03:03:SC cbx_altera_counter 2023:07:20:14:03:03:SC cbx_altera_gray_counter 2023:07:20:14:03:03:SC cbx_altera_syncram 2023:07:20:14:03:03:SC cbx_altera_syncram_nd_impl 2023:07:20:14:03:03:SC cbx_altsyncram 2023:07:20:14:03:03:SC cbx_cycloneii 2023:07:20:14:03:03:SC cbx_dcfifo 2023:07:20:14:03:03:SC cbx_fifo_common 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_lpm_compare 2023:07:20:14:03:03:SC cbx_lpm_counter 2023:07:20:14:03:03:SC cbx_lpm_decode 2023:07:20:14:03:02:SC cbx_lpm_mux 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_scfifo 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC cbx_stratixiii 2023:07:20:14:03:03:SC cbx_stratixv 2023:07:20:14:03:03:SC cbx_util_mgl 2023:07:20:14:03:03:SC  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//a_gray2bin device_family="Cyclone 10 LP" WIDTH=16 bin gray
//VERSION_BEGIN 22.1 cbx_a_gray2bin 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  FIFO_a_gray2bin
	( 
	bin,
	gray) /* synthesis synthesis_clearbox=1 */;
	output   [15:0]  bin;
	input   [15:0]  gray;

	wire  xor0;
	wire  xor1;
	wire  xor10;
	wire  xor11;
	wire  xor12;
	wire  xor13;
	wire  xor14;
	wire  xor2;
	wire  xor3;
	wire  xor4;
	wire  xor5;
	wire  xor6;
	wire  xor7;
	wire  xor8;
	wire  xor9;

	assign
		bin = {gray[15], xor14, xor13, xor12, xor11, xor10, xor9, xor8, xor7, xor6, xor5, xor4, xor3, xor2, xor1, xor0},
		xor0 = (gray[0] ^ xor1),
		xor1 = (gray[1] ^ xor2),
		xor10 = (gray[10] ^ xor11),
		xor11 = (gray[11] ^ xor12),
		xor12 = (gray[12] ^ xor13),
		xor13 = (gray[13] ^ xor14),
		xor14 = (gray[15] ^ gray[14]),
		xor2 = (gray[2] ^ xor3),
		xor3 = (gray[3] ^ xor4),
		xor4 = (gray[4] ^ xor5),
		xor5 = (gray[5] ^ xor6),
		xor6 = (gray[6] ^ xor7),
		xor7 = (gray[7] ^ xor8),
		xor8 = (gray[8] ^ xor9),
		xor9 = (gray[9] ^ xor10);
endmodule //FIFO_a_gray2bin


//a_graycounter DEVICE_FAMILY="Cyclone 10 LP" PVALUE=1 WIDTH=16 clock cnt_en q
//VERSION_BEGIN 22.1 cbx_a_gray2bin 2023:07:20:14:03:03:SC cbx_a_graycounter 2023:07:20:14:03:03:SC cbx_cycloneii 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = reg 21 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"{-to counter5a[0]} POWER_UP_LEVEL=HIGH"} *)
module  FIFO_a_graycounter
	( 
	clock,
	cnt_en,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   cnt_en;
	output   [15:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[15:0]	counter5a;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	parity6;
	reg	[3:0]	sub_parity7a;
	wire  [15:0]  cntr_cout;
	wire  parity_cout;
	wire sclr;
	wire updown;

	// synopsys translate_off
	initial
		counter5a[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[0:0] <= 1'b0;
			else  counter5a[0:0] <= ((cnt_en & (counter5a[0:0] ^ (~ parity_cout))) | ((~ cnt_en) & counter5a[0:0]));
	// synopsys translate_off
	initial
		counter5a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[1:1] <= 1'b0;
			else  counter5a[1:1] <= (counter5a[1:1] ^ (counter5a[0:0] & cntr_cout[0]));
	// synopsys translate_off
	initial
		counter5a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[2:2] <= 1'b0;
			else  counter5a[2:2] <= (counter5a[2:2] ^ (counter5a[1:1] & cntr_cout[1]));
	// synopsys translate_off
	initial
		counter5a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[3:3] <= 1'b0;
			else  counter5a[3:3] <= (counter5a[3:3] ^ (counter5a[2:2] & cntr_cout[2]));
	// synopsys translate_off
	initial
		counter5a[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[4:4] <= 1'b0;
			else  counter5a[4:4] <= (counter5a[4:4] ^ (counter5a[3:3] & cntr_cout[3]));
	// synopsys translate_off
	initial
		counter5a[5:5] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[5:5] <= 1'b0;
			else  counter5a[5:5] <= (counter5a[5:5] ^ (counter5a[4:4] & cntr_cout[4]));
	// synopsys translate_off
	initial
		counter5a[6:6] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[6:6] <= 1'b0;
			else  counter5a[6:6] <= (counter5a[6:6] ^ (counter5a[5:5] & cntr_cout[5]));
	// synopsys translate_off
	initial
		counter5a[7:7] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[7:7] <= 1'b0;
			else  counter5a[7:7] <= (counter5a[7:7] ^ (counter5a[6:6] & cntr_cout[6]));
	// synopsys translate_off
	initial
		counter5a[8:8] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[8:8] <= 1'b0;
			else  counter5a[8:8] <= (counter5a[8:8] ^ (counter5a[7:7] & cntr_cout[7]));
	// synopsys translate_off
	initial
		counter5a[9:9] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[9:9] <= 1'b0;
			else  counter5a[9:9] <= (counter5a[9:9] ^ (counter5a[8:8] & cntr_cout[8]));
	// synopsys translate_off
	initial
		counter5a[10:10] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[10:10] <= 1'b0;
			else  counter5a[10:10] <= (counter5a[10:10] ^ (counter5a[9:9] & cntr_cout[9]));
	// synopsys translate_off
	initial
		counter5a[11:11] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[11:11] <= 1'b0;
			else  counter5a[11:11] <= (counter5a[11:11] ^ (counter5a[10:10] & cntr_cout[10]));
	// synopsys translate_off
	initial
		counter5a[12:12] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[12:12] <= 1'b0;
			else  counter5a[12:12] <= (counter5a[12:12] ^ (counter5a[11:11] & cntr_cout[11]));
	// synopsys translate_off
	initial
		counter5a[13:13] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[13:13] <= 1'b0;
			else  counter5a[13:13] <= (counter5a[13:13] ^ (counter5a[12:12] & cntr_cout[12]));
	// synopsys translate_off
	initial
		counter5a[14:14] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[14:14] <= 1'b0;
			else  counter5a[14:14] <= (counter5a[14:14] ^ (counter5a[13:13] & cntr_cout[13]));
	// synopsys translate_off
	initial
		counter5a[15:15] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[15:15] <= 1'b0;
			else  counter5a[15:15] <= (counter5a[15:15] ^ cntr_cout[14]);
	// synopsys translate_off
	initial
		parity6 = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) parity6 <= 1'b0;
			else  parity6 <= ((cnt_en & (((sub_parity7a[0] ^ sub_parity7a[1]) ^ sub_parity7a[2]) ^ sub_parity7a[3])) | ((~ cnt_en) & parity6));
	// synopsys translate_off
	initial
		sub_parity7a[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity7a[0:0] <= 1'b0;
			else  sub_parity7a[0:0] <= ((cnt_en & (((counter5a[0] ^ counter5a[1]) ^ counter5a[2]) ^ counter5a[3])) | ((~ cnt_en) & sub_parity7a[0:0]));
	// synopsys translate_off
	initial
		sub_parity7a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity7a[1:1] <= 1'b0;
			else  sub_parity7a[1:1] <= ((cnt_en & (((counter5a[4] ^ counter5a[5]) ^ counter5a[6]) ^ counter5a[7])) | ((~ cnt_en) & sub_parity7a[1:1]));
	// synopsys translate_off
	initial
		sub_parity7a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity7a[2:2] <= 1'b0;
			else  sub_parity7a[2:2] <= ((cnt_en & (((counter5a[8] ^ counter5a[9]) ^ counter5a[10]) ^ counter5a[11])) | ((~ cnt_en) & sub_parity7a[2:2]));
	// synopsys translate_off
	initial
		sub_parity7a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity7a[3:3] <= 1'b0;
			else  sub_parity7a[3:3] <= ((cnt_en & (((counter5a[12] ^ counter5a[13]) ^ counter5a[14]) ^ counter5a[15])) | ((~ cnt_en) & sub_parity7a[3:3]));
	assign
		cntr_cout = {1'b0, (cntr_cout[13] & (~ counter5a[13:13])), (cntr_cout[12] & (~ counter5a[12:12])), (cntr_cout[11] & (~ counter5a[11:11])), (cntr_cout[10] & (~ counter5a[10:10])), (cntr_cout[9] & (~ counter5a[9:9])), (cntr_cout[8] & (~ counter5a[8:8])), (cntr_cout[7] & (~ counter5a[7:7])), (cntr_cout[6] & (~ counter5a[6:6])), (cntr_cout[5] & (~ counter5a[5:5])), (cntr_cout[4] & (~ counter5a[4:4])), (cntr_cout[3] & (~ counter5a[3:3])), (cntr_cout[2] & (~ counter5a[2:2])), (cntr_cout[1] & (~ counter5a[1:1])), (cntr_cout[0] & (~ counter5a[0:0])), (cnt_en & parity_cout)},
		parity_cout = (((~ parity6) ^ updown) & cnt_en),
		q = counter5a,
		sclr = 1'b0,
		updown = 1'b1;
endmodule //FIFO_a_graycounter


//a_graycounter DEVICE_FAMILY="Cyclone 10 LP" PVALUE=1 WIDTH=16 clock cnt_en q ALTERA_INTERNAL_OPTIONS=suppress_da_rule_internal=S102
//VERSION_BEGIN 22.1 cbx_a_gray2bin 2023:07:20:14:03:03:SC cbx_a_graycounter 2023:07:20:14:03:03:SC cbx_cycloneii 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = reg 21 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"suppress_da_rule_internal=S102;{-to counter8a[0]} POWER_UP_LEVEL=HIGH"} *)
module  FIFO_a_graycounter1
	( 
	clock,
	cnt_en,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   cnt_en;
	output   [15:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[15:0]	counter8a;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	parity9;
	reg	[3:0]	sub_parity10a;
	wire  [15:0]  cntr_cout;
	wire  parity_cout;
	wire sclr;
	wire updown;

	// synopsys translate_off
	initial
		counter8a[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[0:0] <= 1'b0;
			else  counter8a[0:0] <= ((cnt_en & (counter8a[0:0] ^ (~ parity_cout))) | ((~ cnt_en) & counter8a[0:0]));
	// synopsys translate_off
	initial
		counter8a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[1:1] <= 1'b0;
			else  counter8a[1:1] <= (counter8a[1:1] ^ (counter8a[0:0] & cntr_cout[0]));
	// synopsys translate_off
	initial
		counter8a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[2:2] <= 1'b0;
			else  counter8a[2:2] <= (counter8a[2:2] ^ (counter8a[1:1] & cntr_cout[1]));
	// synopsys translate_off
	initial
		counter8a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[3:3] <= 1'b0;
			else  counter8a[3:3] <= (counter8a[3:3] ^ (counter8a[2:2] & cntr_cout[2]));
	// synopsys translate_off
	initial
		counter8a[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[4:4] <= 1'b0;
			else  counter8a[4:4] <= (counter8a[4:4] ^ (counter8a[3:3] & cntr_cout[3]));
	// synopsys translate_off
	initial
		counter8a[5:5] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[5:5] <= 1'b0;
			else  counter8a[5:5] <= (counter8a[5:5] ^ (counter8a[4:4] & cntr_cout[4]));
	// synopsys translate_off
	initial
		counter8a[6:6] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[6:6] <= 1'b0;
			else  counter8a[6:6] <= (counter8a[6:6] ^ (counter8a[5:5] & cntr_cout[5]));
	// synopsys translate_off
	initial
		counter8a[7:7] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[7:7] <= 1'b0;
			else  counter8a[7:7] <= (counter8a[7:7] ^ (counter8a[6:6] & cntr_cout[6]));
	// synopsys translate_off
	initial
		counter8a[8:8] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[8:8] <= 1'b0;
			else  counter8a[8:8] <= (counter8a[8:8] ^ (counter8a[7:7] & cntr_cout[7]));
	// synopsys translate_off
	initial
		counter8a[9:9] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[9:9] <= 1'b0;
			else  counter8a[9:9] <= (counter8a[9:9] ^ (counter8a[8:8] & cntr_cout[8]));
	// synopsys translate_off
	initial
		counter8a[10:10] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[10:10] <= 1'b0;
			else  counter8a[10:10] <= (counter8a[10:10] ^ (counter8a[9:9] & cntr_cout[9]));
	// synopsys translate_off
	initial
		counter8a[11:11] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[11:11] <= 1'b0;
			else  counter8a[11:11] <= (counter8a[11:11] ^ (counter8a[10:10] & cntr_cout[10]));
	// synopsys translate_off
	initial
		counter8a[12:12] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[12:12] <= 1'b0;
			else  counter8a[12:12] <= (counter8a[12:12] ^ (counter8a[11:11] & cntr_cout[11]));
	// synopsys translate_off
	initial
		counter8a[13:13] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[13:13] <= 1'b0;
			else  counter8a[13:13] <= (counter8a[13:13] ^ (counter8a[12:12] & cntr_cout[12]));
	// synopsys translate_off
	initial
		counter8a[14:14] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[14:14] <= 1'b0;
			else  counter8a[14:14] <= (counter8a[14:14] ^ (counter8a[13:13] & cntr_cout[13]));
	// synopsys translate_off
	initial
		counter8a[15:15] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[15:15] <= 1'b0;
			else  counter8a[15:15] <= (counter8a[15:15] ^ cntr_cout[14]);
	// synopsys translate_off
	initial
		parity9 = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) parity9 <= 1'b0;
			else  parity9 <= ((cnt_en & (((sub_parity10a[0] ^ sub_parity10a[1]) ^ sub_parity10a[2]) ^ sub_parity10a[3])) | ((~ cnt_en) & parity9));
	// synopsys translate_off
	initial
		sub_parity10a[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity10a[0:0] <= 1'b0;
			else  sub_parity10a[0:0] <= ((cnt_en & (((counter8a[0] ^ counter8a[1]) ^ counter8a[2]) ^ counter8a[3])) | ((~ cnt_en) & sub_parity10a[0:0]));
	// synopsys translate_off
	initial
		sub_parity10a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity10a[1:1] <= 1'b0;
			else  sub_parity10a[1:1] <= ((cnt_en & (((counter8a[4] ^ counter8a[5]) ^ counter8a[6]) ^ counter8a[7])) | ((~ cnt_en) & sub_parity10a[1:1]));
	// synopsys translate_off
	initial
		sub_parity10a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity10a[2:2] <= 1'b0;
			else  sub_parity10a[2:2] <= ((cnt_en & (((counter8a[8] ^ counter8a[9]) ^ counter8a[10]) ^ counter8a[11])) | ((~ cnt_en) & sub_parity10a[2:2]));
	// synopsys translate_off
	initial
		sub_parity10a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity10a[3:3] <= 1'b0;
			else  sub_parity10a[3:3] <= ((cnt_en & (((counter8a[12] ^ counter8a[13]) ^ counter8a[14]) ^ counter8a[15])) | ((~ cnt_en) & sub_parity10a[3:3]));
	assign
		cntr_cout = {1'b0, (cntr_cout[13] & (~ counter8a[13:13])), (cntr_cout[12] & (~ counter8a[12:12])), (cntr_cout[11] & (~ counter8a[11:11])), (cntr_cout[10] & (~ counter8a[10:10])), (cntr_cout[9] & (~ counter8a[9:9])), (cntr_cout[8] & (~ counter8a[8:8])), (cntr_cout[7] & (~ counter8a[7:7])), (cntr_cout[6] & (~ counter8a[6:6])), (cntr_cout[5] & (~ counter8a[5:5])), (cntr_cout[4] & (~ counter8a[4:4])), (cntr_cout[3] & (~ counter8a[3:3])), (cntr_cout[2] & (~ counter8a[2:2])), (cntr_cout[1] & (~ counter8a[1:1])), (cntr_cout[0] & (~ counter8a[0:0])), (cnt_en & parity_cout)},
		parity_cout = (((~ parity9) ^ updown) & cnt_en),
		q = counter8a,
		sclr = 1'b0,
		updown = 1'b1;
endmodule //FIFO_a_graycounter1


//altsyncram ADDRESS_REG_B="CLOCK1" CLOCK_ENABLE_INPUT_B="BYPASS" DEVICE_FAMILY="Cyclone 10 LP" ENABLE_ECC="FALSE" OPERATION_MODE="DUAL_PORT" OUTDATA_REG_B="UNREGISTERED" WIDTH_A=8 WIDTH_B=8 WIDTH_BYTEENA_A=1 WIDTH_ECCSTATUS=2 WIDTHAD_A=15 WIDTHAD_B=15 address_a address_b addressstall_b clock0 clock1 data_a q_b wren_a
//VERSION_BEGIN 22.1 cbx_altera_syncram_nd_impl 2023:07:20:14:03:03:SC cbx_altsyncram 2023:07:20:14:03:03:SC cbx_cycloneii 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_lpm_compare 2023:07:20:14:03:03:SC cbx_lpm_decode 2023:07:20:14:03:02:SC cbx_lpm_mux 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC cbx_stratixiii 2023:07:20:14:03:03:SC cbx_stratixv 2023:07:20:14:03:03:SC cbx_util_mgl 2023:07:20:14:03:03:SC  VERSION_END


//lpm_decode DEVICE_FAMILY="Cyclone 10 LP" LPM_DECODES=4 LPM_WIDTH=2 data enable eq
//VERSION_BEGIN 22.1 cbx_cycloneii 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_lpm_compare 2023:07:20:14:03:03:SC cbx_lpm_decode 2023:07:20:14:03:02:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = lut 4 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  FIFO_decode
	( 
	data,
	enable,
	eq) /* synthesis synthesis_clearbox=1 */;
	input   [1:0]  data;
	input   enable;
	output   [3:0]  eq;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [1:0]  data;
	tri1   enable;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [1:0]  data_wire;
	wire  enable_wire;
	wire  [3:0]  eq_node;
	wire  [3:0]  eq_wire;
	wire  [2:0]  w_anode683w;
	wire  [2:0]  w_anode696w;
	wire  [2:0]  w_anode704w;
	wire  [2:0]  w_anode712w;

	assign
		data_wire = data,
		enable_wire = enable,
		eq = eq_node,
		eq_node = eq_wire[3:0],
		eq_wire = {w_anode712w[2], w_anode704w[2], w_anode696w[2], w_anode683w[2]},
		w_anode683w = {(w_anode683w[1] & (~ data_wire[1])), (w_anode683w[0] & (~ data_wire[0])), enable_wire},
		w_anode696w = {(w_anode696w[1] & (~ data_wire[1])), (w_anode696w[0] & data_wire[0]), enable_wire},
		w_anode704w = {(w_anode704w[1] & data_wire[1]), (w_anode704w[0] & (~ data_wire[0])), enable_wire},
		w_anode712w = {(w_anode712w[1] & data_wire[1]), (w_anode712w[0] & data_wire[0]), enable_wire};
endmodule //FIFO_decode


//lpm_decode DEVICE_FAMILY="Cyclone 10 LP" LPM_DECODES=4 LPM_WIDTH=2 data eq
//VERSION_BEGIN 22.1 cbx_cycloneii 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_lpm_compare 2023:07:20:14:03:03:SC cbx_lpm_decode 2023:07:20:14:03:02:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = lut 4 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  FIFO_decode1
	( 
	data,
	eq) /* synthesis synthesis_clearbox=1 */;
	input   [1:0]  data;
	output   [3:0]  eq;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [1:0]  data;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [1:0]  data_wire;
	wire  [3:0]  eq_node;
	wire  [3:0]  eq_wire;
	wire  [2:0]  w_anode721w;
	wire  [2:0]  w_anode735w;
	wire  [2:0]  w_anode744w;
	wire  [2:0]  w_anode753w;

	assign
		data_wire = data,
		eq = eq_node,
		eq_node = eq_wire[3:0],
		eq_wire = {w_anode753w[2], w_anode744w[2], w_anode735w[2], w_anode721w[2]},
		w_anode721w = {(w_anode721w[1] & (~ data_wire[1])), (w_anode721w[0] & (~ data_wire[0])), 1'b1},
		w_anode735w = {(w_anode735w[1] & (~ data_wire[1])), (w_anode735w[0] & data_wire[0]), 1'b1},
		w_anode744w = {(w_anode744w[1] & data_wire[1]), (w_anode744w[0] & (~ data_wire[0])), 1'b1},
		w_anode753w = {(w_anode753w[1] & data_wire[1]), (w_anode753w[0] & data_wire[0]), 1'b1};
endmodule //FIFO_decode1


//lpm_mux DEVICE_FAMILY="Cyclone 10 LP" LPM_SIZE=4 LPM_WIDTH=8 LPM_WIDTHS=2 data result sel
//VERSION_BEGIN 22.1 cbx_lpm_mux 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC  VERSION_END

//synthesis_resources = lut 16 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  FIFO_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  data;
	output   [7:0]  result;
	input   [1:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [31:0]  data;
	tri0   [1:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [7:0]  result_node;
	wire  [1:0]  sel_node;
	wire  [3:0]  w_data766w;
	wire  [3:0]  w_data796w;
	wire  [3:0]  w_data821w;
	wire  [3:0]  w_data846w;
	wire  [3:0]  w_data871w;
	wire  [3:0]  w_data896w;
	wire  [3:0]  w_data921w;
	wire  [3:0]  w_data946w;

	assign
		result = result_node,
		result_node = {(((w_data946w[1] & sel_node[0]) & (~ (((w_data946w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data946w[2]))))) | ((((w_data946w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data946w[2]))) & (w_data946w[3] | (~ sel_node[0])))), (((w_data921w[1] & sel_node[0]) & (~ (((w_data921w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data921w[2]))))) | ((((w_data921w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data921w[2]))) & (w_data921w[3] | (~ sel_node[0])))), (((w_data896w[1] & sel_node[0]) & (~ (((w_data896w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data896w[2]))))) | ((((w_data896w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data896w[2]))) & (w_data896w[3] | (~ sel_node[0])))), (((w_data871w[1] & sel_node[0]) & (~ (((w_data871w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data871w[2]))))) | ((((w_data871w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data871w[2]))) & (w_data871w[3] | (~ sel_node[0])))), (((w_data846w[1] & sel_node[0]) & (~ (((w_data846w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data846w[2]))))) | ((((w_data846w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data846w[2]))) & (w_data846w[3] | (~ sel_node[0])))), (((w_data821w[1] & sel_node[0]) & (~ (((w_data821w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data821w[2]))))) | ((((w_data821w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data821w[2]))) & (w_data821w[3] | (~ sel_node[0])))), (((w_data796w[1] & sel_node[0]) & (~ (((w_data796w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data796w[2]))))) | ((((w_data796w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data796w[2]))) & (w_data796w[3] | (~ sel_node[0])))), (((w_data766w[1]
 & sel_node[0]) & (~ (((w_data766w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data766w[2]))))) | ((((w_data766w[0] & (~ sel_node[1])) & (~ sel_node[0])) | (sel_node[1] & (sel_node[0] | w_data766w[2]))) & (w_data766w[3] | (~ sel_node[0]))))},
		sel_node = {sel[1:0]},
		w_data766w = {data[24], data[16], data[8], data[0]},
		w_data796w = {data[25], data[17], data[9], data[1]},
		w_data821w = {data[26], data[18], data[10], data[2]},
		w_data846w = {data[27], data[19], data[11], data[3]},
		w_data871w = {data[28], data[20], data[12], data[4]},
		w_data896w = {data[29], data[21], data[13], data[5]},
		w_data921w = {data[30], data[22], data[14], data[6]},
		w_data946w = {data[31], data[23], data[15], data[7]};
endmodule //FIFO_mux

//synthesis_resources = lut 28 M9K 32 reg 6 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  FIFO_altsyncram
	( 
	address_a,
	address_b,
	addressstall_b,
	clock0,
	clock1,
	data_a,
	q_b,
	wren_a) /* synthesis synthesis_clearbox=1 */;
	input   [14:0]  address_a;
	input   [14:0]  address_b;
	input   addressstall_b;
	input   clock0;
	input   clock1;
	input   [7:0]  data_a;
	output   [7:0]  q_b;
	input   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   [14:0]  address_b;
	tri0   addressstall_b;
	tri1   clock0;
	tri1   clock1;
	tri1   [7:0]  data_a;
	tri0   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[1:0]	addr_store_b;
	reg	[1:0]	address_reg_b;
	reg	[1:0]	addrstall_reg_b;
	wire  [3:0]   wire_decode12_eq;
	wire  [3:0]   wire_rden_decode_b_eq;
	wire  [3:0]   wire_wren_decode_a_eq;
	wire  [7:0]   wire_mux13_result;
	wire  [0:0]   wire_ram_block11a_0portbdataout;
	wire  [0:0]   wire_ram_block11a_1portbdataout;
	wire  [0:0]   wire_ram_block11a_2portbdataout;
	wire  [0:0]   wire_ram_block11a_3portbdataout;
	wire  [0:0]   wire_ram_block11a_4portbdataout;
	wire  [0:0]   wire_ram_block11a_5portbdataout;
	wire  [0:0]   wire_ram_block11a_6portbdataout;
	wire  [0:0]   wire_ram_block11a_7portbdataout;
	wire  [0:0]   wire_ram_block11a_8portbdataout;
	wire  [0:0]   wire_ram_block11a_9portbdataout;
	wire  [0:0]   wire_ram_block11a_10portbdataout;
	wire  [0:0]   wire_ram_block11a_11portbdataout;
	wire  [0:0]   wire_ram_block11a_12portbdataout;
	wire  [0:0]   wire_ram_block11a_13portbdataout;
	wire  [0:0]   wire_ram_block11a_14portbdataout;
	wire  [0:0]   wire_ram_block11a_15portbdataout;
	wire  [0:0]   wire_ram_block11a_16portbdataout;
	wire  [0:0]   wire_ram_block11a_17portbdataout;
	wire  [0:0]   wire_ram_block11a_18portbdataout;
	wire  [0:0]   wire_ram_block11a_19portbdataout;
	wire  [0:0]   wire_ram_block11a_20portbdataout;
	wire  [0:0]   wire_ram_block11a_21portbdataout;
	wire  [0:0]   wire_ram_block11a_22portbdataout;
	wire  [0:0]   wire_ram_block11a_23portbdataout;
	wire  [0:0]   wire_ram_block11a_24portbdataout;
	wire  [0:0]   wire_ram_block11a_25portbdataout;
	wire  [0:0]   wire_ram_block11a_26portbdataout;
	wire  [0:0]   wire_ram_block11a_27portbdataout;
	wire  [0:0]   wire_ram_block11a_28portbdataout;
	wire  [0:0]   wire_ram_block11a_29portbdataout;
	wire  [0:0]   wire_ram_block11a_30portbdataout;
	wire  [0:0]   wire_ram_block11a_31portbdataout;
	wire  [14:0]  address_a_wire;
	wire  [1:0]  address_b_sel;
	wire  [14:0]  address_b_wire;
	wire  [1:0]  rden_decode_addr_sel_b;
	wire  [1:0]  w_addr_val_a395w;
	wire  [1:0]  wren_decode_addr_sel_a;

	// synopsys translate_off
	initial
		addr_store_b = 0;
	// synopsys translate_on
	always @ ( posedge clock1)
		if (addressstall_b == 1'b0)   addr_store_b <= address_b_sel;
	// synopsys translate_off
	initial
		address_reg_b = 0;
	// synopsys translate_on
	always @ ( posedge clock1)
		  address_reg_b <= ((address_b_sel & {2{(~ addressstall_b)}}) | ({2{addressstall_b}} & addr_store_b));
	// synopsys translate_off
	initial
		addrstall_reg_b = 0;
	// synopsys translate_on
	always @ ( posedge clock1)
		if (addressstall_b == 1'b0)   addrstall_reg_b <= rden_decode_addr_sel_b;
	FIFO_decode   decode12
	( 
	.data(address_a_wire[14:13]),
	.enable(wren_a),
	.eq(wire_decode12_eq));
	FIFO_decode1   rden_decode_b
	( 
	.data(((rden_decode_addr_sel_b & {2{(~ addressstall_b)}}) | ({2{addressstall_b}} & addrstall_reg_b))),
	.eq(wire_rden_decode_b_eq));
	FIFO_decode   wren_decode_a
	( 
	.data(w_addr_val_a395w),
	.enable(wren_a),
	.eq(wire_wren_decode_a_eq));
	FIFO_mux   mux13
	( 
	.data({wire_ram_block11a_31portbdataout[0], wire_ram_block11a_30portbdataout[0], wire_ram_block11a_29portbdataout[0], wire_ram_block11a_28portbdataout[0], wire_ram_block11a_27portbdataout[0], wire_ram_block11a_26portbdataout[0], wire_ram_block11a_25portbdataout[0], wire_ram_block11a_24portbdataout[0], wire_ram_block11a_23portbdataout[0], wire_ram_block11a_22portbdataout[0], wire_ram_block11a_21portbdataout[0], wire_ram_block11a_20portbdataout[0], wire_ram_block11a_19portbdataout[0], wire_ram_block11a_18portbdataout[0], wire_ram_block11a_17portbdataout[0], wire_ram_block11a_16portbdataout[0], wire_ram_block11a_15portbdataout[0], wire_ram_block11a_14portbdataout[0], wire_ram_block11a_13portbdataout[0], wire_ram_block11a_12portbdataout[0], wire_ram_block11a_11portbdataout[0], wire_ram_block11a_10portbdataout[0], wire_ram_block11a_9portbdataout[0], wire_ram_block11a_8portbdataout[0], wire_ram_block11a_7portbdataout[0], wire_ram_block11a_6portbdataout[0], wire_ram_block11a_5portbdataout[0], wire_ram_block11a_4portbdataout[0], wire_ram_block11a_3portbdataout[0], wire_ram_block11a_2portbdataout[0], wire_ram_block11a_1portbdataout[0], wire_ram_block11a_0portbdataout[0]}),
	.result(wire_mux13_result),
	.sel(address_reg_b));
	cyclone10lp_ram_block   ram_block11a_0
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[0]),
	.ena1(wire_rden_decode_b_eq[0]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[0]}),
	.portadataout(),
	.portawe(wire_decode12_eq[0]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_0portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_0.clk0_core_clock_enable = "ena0",
		ram_block11a_0.clk0_input_clock_enable = "none",
		ram_block11a_0.clk1_core_clock_enable = "ena1",
		ram_block11a_0.clk1_input_clock_enable = "none",
		ram_block11a_0.connectivity_checking = "OFF",
		ram_block11a_0.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_0.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_0.operation_mode = "dual_port",
		ram_block11a_0.port_a_address_width = 13,
		ram_block11a_0.port_a_data_width = 1,
		ram_block11a_0.port_a_first_address = 0,
		ram_block11a_0.port_a_first_bit_number = 0,
		ram_block11a_0.port_a_last_address = 8191,
		ram_block11a_0.port_a_logical_ram_depth = 32768,
		ram_block11a_0.port_a_logical_ram_width = 8,
		ram_block11a_0.port_b_address_clear = "none",
		ram_block11a_0.port_b_address_clock = "clock1",
		ram_block11a_0.port_b_address_width = 13,
		ram_block11a_0.port_b_data_out_clear = "none",
		ram_block11a_0.port_b_data_width = 1,
		ram_block11a_0.port_b_first_address = 0,
		ram_block11a_0.port_b_first_bit_number = 0,
		ram_block11a_0.port_b_last_address = 8191,
		ram_block11a_0.port_b_logical_ram_depth = 32768,
		ram_block11a_0.port_b_logical_ram_width = 8,
		ram_block11a_0.port_b_read_enable_clock = "clock1",
		ram_block11a_0.ram_block_type = "AUTO",
		ram_block11a_0.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_1
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[0]),
	.ena1(wire_rden_decode_b_eq[0]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[1]}),
	.portadataout(),
	.portawe(wire_decode12_eq[0]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_1portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_1.clk0_core_clock_enable = "ena0",
		ram_block11a_1.clk0_input_clock_enable = "none",
		ram_block11a_1.clk1_core_clock_enable = "ena1",
		ram_block11a_1.clk1_input_clock_enable = "none",
		ram_block11a_1.connectivity_checking = "OFF",
		ram_block11a_1.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_1.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_1.operation_mode = "dual_port",
		ram_block11a_1.port_a_address_width = 13,
		ram_block11a_1.port_a_data_width = 1,
		ram_block11a_1.port_a_first_address = 0,
		ram_block11a_1.port_a_first_bit_number = 1,
		ram_block11a_1.port_a_last_address = 8191,
		ram_block11a_1.port_a_logical_ram_depth = 32768,
		ram_block11a_1.port_a_logical_ram_width = 8,
		ram_block11a_1.port_b_address_clear = "none",
		ram_block11a_1.port_b_address_clock = "clock1",
		ram_block11a_1.port_b_address_width = 13,
		ram_block11a_1.port_b_data_out_clear = "none",
		ram_block11a_1.port_b_data_width = 1,
		ram_block11a_1.port_b_first_address = 0,
		ram_block11a_1.port_b_first_bit_number = 1,
		ram_block11a_1.port_b_last_address = 8191,
		ram_block11a_1.port_b_logical_ram_depth = 32768,
		ram_block11a_1.port_b_logical_ram_width = 8,
		ram_block11a_1.port_b_read_enable_clock = "clock1",
		ram_block11a_1.ram_block_type = "AUTO",
		ram_block11a_1.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_2
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[0]),
	.ena1(wire_rden_decode_b_eq[0]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[2]}),
	.portadataout(),
	.portawe(wire_decode12_eq[0]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_2portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_2.clk0_core_clock_enable = "ena0",
		ram_block11a_2.clk0_input_clock_enable = "none",
		ram_block11a_2.clk1_core_clock_enable = "ena1",
		ram_block11a_2.clk1_input_clock_enable = "none",
		ram_block11a_2.connectivity_checking = "OFF",
		ram_block11a_2.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_2.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_2.operation_mode = "dual_port",
		ram_block11a_2.port_a_address_width = 13,
		ram_block11a_2.port_a_data_width = 1,
		ram_block11a_2.port_a_first_address = 0,
		ram_block11a_2.port_a_first_bit_number = 2,
		ram_block11a_2.port_a_last_address = 8191,
		ram_block11a_2.port_a_logical_ram_depth = 32768,
		ram_block11a_2.port_a_logical_ram_width = 8,
		ram_block11a_2.port_b_address_clear = "none",
		ram_block11a_2.port_b_address_clock = "clock1",
		ram_block11a_2.port_b_address_width = 13,
		ram_block11a_2.port_b_data_out_clear = "none",
		ram_block11a_2.port_b_data_width = 1,
		ram_block11a_2.port_b_first_address = 0,
		ram_block11a_2.port_b_first_bit_number = 2,
		ram_block11a_2.port_b_last_address = 8191,
		ram_block11a_2.port_b_logical_ram_depth = 32768,
		ram_block11a_2.port_b_logical_ram_width = 8,
		ram_block11a_2.port_b_read_enable_clock = "clock1",
		ram_block11a_2.ram_block_type = "AUTO",
		ram_block11a_2.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_3
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[0]),
	.ena1(wire_rden_decode_b_eq[0]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[3]}),
	.portadataout(),
	.portawe(wire_decode12_eq[0]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_3portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_3.clk0_core_clock_enable = "ena0",
		ram_block11a_3.clk0_input_clock_enable = "none",
		ram_block11a_3.clk1_core_clock_enable = "ena1",
		ram_block11a_3.clk1_input_clock_enable = "none",
		ram_block11a_3.connectivity_checking = "OFF",
		ram_block11a_3.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_3.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_3.operation_mode = "dual_port",
		ram_block11a_3.port_a_address_width = 13,
		ram_block11a_3.port_a_data_width = 1,
		ram_block11a_3.port_a_first_address = 0,
		ram_block11a_3.port_a_first_bit_number = 3,
		ram_block11a_3.port_a_last_address = 8191,
		ram_block11a_3.port_a_logical_ram_depth = 32768,
		ram_block11a_3.port_a_logical_ram_width = 8,
		ram_block11a_3.port_b_address_clear = "none",
		ram_block11a_3.port_b_address_clock = "clock1",
		ram_block11a_3.port_b_address_width = 13,
		ram_block11a_3.port_b_data_out_clear = "none",
		ram_block11a_3.port_b_data_width = 1,
		ram_block11a_3.port_b_first_address = 0,
		ram_block11a_3.port_b_first_bit_number = 3,
		ram_block11a_3.port_b_last_address = 8191,
		ram_block11a_3.port_b_logical_ram_depth = 32768,
		ram_block11a_3.port_b_logical_ram_width = 8,
		ram_block11a_3.port_b_read_enable_clock = "clock1",
		ram_block11a_3.ram_block_type = "AUTO",
		ram_block11a_3.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_4
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[0]),
	.ena1(wire_rden_decode_b_eq[0]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[4]}),
	.portadataout(),
	.portawe(wire_decode12_eq[0]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_4portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_4.clk0_core_clock_enable = "ena0",
		ram_block11a_4.clk0_input_clock_enable = "none",
		ram_block11a_4.clk1_core_clock_enable = "ena1",
		ram_block11a_4.clk1_input_clock_enable = "none",
		ram_block11a_4.connectivity_checking = "OFF",
		ram_block11a_4.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_4.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_4.operation_mode = "dual_port",
		ram_block11a_4.port_a_address_width = 13,
		ram_block11a_4.port_a_data_width = 1,
		ram_block11a_4.port_a_first_address = 0,
		ram_block11a_4.port_a_first_bit_number = 4,
		ram_block11a_4.port_a_last_address = 8191,
		ram_block11a_4.port_a_logical_ram_depth = 32768,
		ram_block11a_4.port_a_logical_ram_width = 8,
		ram_block11a_4.port_b_address_clear = "none",
		ram_block11a_4.port_b_address_clock = "clock1",
		ram_block11a_4.port_b_address_width = 13,
		ram_block11a_4.port_b_data_out_clear = "none",
		ram_block11a_4.port_b_data_width = 1,
		ram_block11a_4.port_b_first_address = 0,
		ram_block11a_4.port_b_first_bit_number = 4,
		ram_block11a_4.port_b_last_address = 8191,
		ram_block11a_4.port_b_logical_ram_depth = 32768,
		ram_block11a_4.port_b_logical_ram_width = 8,
		ram_block11a_4.port_b_read_enable_clock = "clock1",
		ram_block11a_4.ram_block_type = "AUTO",
		ram_block11a_4.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_5
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[0]),
	.ena1(wire_rden_decode_b_eq[0]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[5]}),
	.portadataout(),
	.portawe(wire_decode12_eq[0]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_5portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_5.clk0_core_clock_enable = "ena0",
		ram_block11a_5.clk0_input_clock_enable = "none",
		ram_block11a_5.clk1_core_clock_enable = "ena1",
		ram_block11a_5.clk1_input_clock_enable = "none",
		ram_block11a_5.connectivity_checking = "OFF",
		ram_block11a_5.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_5.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_5.operation_mode = "dual_port",
		ram_block11a_5.port_a_address_width = 13,
		ram_block11a_5.port_a_data_width = 1,
		ram_block11a_5.port_a_first_address = 0,
		ram_block11a_5.port_a_first_bit_number = 5,
		ram_block11a_5.port_a_last_address = 8191,
		ram_block11a_5.port_a_logical_ram_depth = 32768,
		ram_block11a_5.port_a_logical_ram_width = 8,
		ram_block11a_5.port_b_address_clear = "none",
		ram_block11a_5.port_b_address_clock = "clock1",
		ram_block11a_5.port_b_address_width = 13,
		ram_block11a_5.port_b_data_out_clear = "none",
		ram_block11a_5.port_b_data_width = 1,
		ram_block11a_5.port_b_first_address = 0,
		ram_block11a_5.port_b_first_bit_number = 5,
		ram_block11a_5.port_b_last_address = 8191,
		ram_block11a_5.port_b_logical_ram_depth = 32768,
		ram_block11a_5.port_b_logical_ram_width = 8,
		ram_block11a_5.port_b_read_enable_clock = "clock1",
		ram_block11a_5.ram_block_type = "AUTO",
		ram_block11a_5.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_6
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[0]),
	.ena1(wire_rden_decode_b_eq[0]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[6]}),
	.portadataout(),
	.portawe(wire_decode12_eq[0]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_6portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_6.clk0_core_clock_enable = "ena0",
		ram_block11a_6.clk0_input_clock_enable = "none",
		ram_block11a_6.clk1_core_clock_enable = "ena1",
		ram_block11a_6.clk1_input_clock_enable = "none",
		ram_block11a_6.connectivity_checking = "OFF",
		ram_block11a_6.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_6.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_6.operation_mode = "dual_port",
		ram_block11a_6.port_a_address_width = 13,
		ram_block11a_6.port_a_data_width = 1,
		ram_block11a_6.port_a_first_address = 0,
		ram_block11a_6.port_a_first_bit_number = 6,
		ram_block11a_6.port_a_last_address = 8191,
		ram_block11a_6.port_a_logical_ram_depth = 32768,
		ram_block11a_6.port_a_logical_ram_width = 8,
		ram_block11a_6.port_b_address_clear = "none",
		ram_block11a_6.port_b_address_clock = "clock1",
		ram_block11a_6.port_b_address_width = 13,
		ram_block11a_6.port_b_data_out_clear = "none",
		ram_block11a_6.port_b_data_width = 1,
		ram_block11a_6.port_b_first_address = 0,
		ram_block11a_6.port_b_first_bit_number = 6,
		ram_block11a_6.port_b_last_address = 8191,
		ram_block11a_6.port_b_logical_ram_depth = 32768,
		ram_block11a_6.port_b_logical_ram_width = 8,
		ram_block11a_6.port_b_read_enable_clock = "clock1",
		ram_block11a_6.ram_block_type = "AUTO",
		ram_block11a_6.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_7
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[0]),
	.ena1(wire_rden_decode_b_eq[0]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[7]}),
	.portadataout(),
	.portawe(wire_decode12_eq[0]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_7portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_7.clk0_core_clock_enable = "ena0",
		ram_block11a_7.clk0_input_clock_enable = "none",
		ram_block11a_7.clk1_core_clock_enable = "ena1",
		ram_block11a_7.clk1_input_clock_enable = "none",
		ram_block11a_7.connectivity_checking = "OFF",
		ram_block11a_7.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_7.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_7.operation_mode = "dual_port",
		ram_block11a_7.port_a_address_width = 13,
		ram_block11a_7.port_a_data_width = 1,
		ram_block11a_7.port_a_first_address = 0,
		ram_block11a_7.port_a_first_bit_number = 7,
		ram_block11a_7.port_a_last_address = 8191,
		ram_block11a_7.port_a_logical_ram_depth = 32768,
		ram_block11a_7.port_a_logical_ram_width = 8,
		ram_block11a_7.port_b_address_clear = "none",
		ram_block11a_7.port_b_address_clock = "clock1",
		ram_block11a_7.port_b_address_width = 13,
		ram_block11a_7.port_b_data_out_clear = "none",
		ram_block11a_7.port_b_data_width = 1,
		ram_block11a_7.port_b_first_address = 0,
		ram_block11a_7.port_b_first_bit_number = 7,
		ram_block11a_7.port_b_last_address = 8191,
		ram_block11a_7.port_b_logical_ram_depth = 32768,
		ram_block11a_7.port_b_logical_ram_width = 8,
		ram_block11a_7.port_b_read_enable_clock = "clock1",
		ram_block11a_7.ram_block_type = "AUTO",
		ram_block11a_7.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_8
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[1]),
	.ena1(wire_rden_decode_b_eq[1]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[0]}),
	.portadataout(),
	.portawe(wire_decode12_eq[1]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_8portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_8.clk0_core_clock_enable = "ena0",
		ram_block11a_8.clk0_input_clock_enable = "none",
		ram_block11a_8.clk1_core_clock_enable = "ena1",
		ram_block11a_8.clk1_input_clock_enable = "none",
		ram_block11a_8.connectivity_checking = "OFF",
		ram_block11a_8.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_8.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_8.operation_mode = "dual_port",
		ram_block11a_8.port_a_address_width = 13,
		ram_block11a_8.port_a_data_width = 1,
		ram_block11a_8.port_a_first_address = 8192,
		ram_block11a_8.port_a_first_bit_number = 0,
		ram_block11a_8.port_a_last_address = 16383,
		ram_block11a_8.port_a_logical_ram_depth = 32768,
		ram_block11a_8.port_a_logical_ram_width = 8,
		ram_block11a_8.port_b_address_clear = "none",
		ram_block11a_8.port_b_address_clock = "clock1",
		ram_block11a_8.port_b_address_width = 13,
		ram_block11a_8.port_b_data_out_clear = "none",
		ram_block11a_8.port_b_data_width = 1,
		ram_block11a_8.port_b_first_address = 8192,
		ram_block11a_8.port_b_first_bit_number = 0,
		ram_block11a_8.port_b_last_address = 16383,
		ram_block11a_8.port_b_logical_ram_depth = 32768,
		ram_block11a_8.port_b_logical_ram_width = 8,
		ram_block11a_8.port_b_read_enable_clock = "clock1",
		ram_block11a_8.ram_block_type = "AUTO",
		ram_block11a_8.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_9
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[1]),
	.ena1(wire_rden_decode_b_eq[1]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[1]}),
	.portadataout(),
	.portawe(wire_decode12_eq[1]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_9portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_9.clk0_core_clock_enable = "ena0",
		ram_block11a_9.clk0_input_clock_enable = "none",
		ram_block11a_9.clk1_core_clock_enable = "ena1",
		ram_block11a_9.clk1_input_clock_enable = "none",
		ram_block11a_9.connectivity_checking = "OFF",
		ram_block11a_9.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_9.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_9.operation_mode = "dual_port",
		ram_block11a_9.port_a_address_width = 13,
		ram_block11a_9.port_a_data_width = 1,
		ram_block11a_9.port_a_first_address = 8192,
		ram_block11a_9.port_a_first_bit_number = 1,
		ram_block11a_9.port_a_last_address = 16383,
		ram_block11a_9.port_a_logical_ram_depth = 32768,
		ram_block11a_9.port_a_logical_ram_width = 8,
		ram_block11a_9.port_b_address_clear = "none",
		ram_block11a_9.port_b_address_clock = "clock1",
		ram_block11a_9.port_b_address_width = 13,
		ram_block11a_9.port_b_data_out_clear = "none",
		ram_block11a_9.port_b_data_width = 1,
		ram_block11a_9.port_b_first_address = 8192,
		ram_block11a_9.port_b_first_bit_number = 1,
		ram_block11a_9.port_b_last_address = 16383,
		ram_block11a_9.port_b_logical_ram_depth = 32768,
		ram_block11a_9.port_b_logical_ram_width = 8,
		ram_block11a_9.port_b_read_enable_clock = "clock1",
		ram_block11a_9.ram_block_type = "AUTO",
		ram_block11a_9.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_10
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[1]),
	.ena1(wire_rden_decode_b_eq[1]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[2]}),
	.portadataout(),
	.portawe(wire_decode12_eq[1]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_10portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_10.clk0_core_clock_enable = "ena0",
		ram_block11a_10.clk0_input_clock_enable = "none",
		ram_block11a_10.clk1_core_clock_enable = "ena1",
		ram_block11a_10.clk1_input_clock_enable = "none",
		ram_block11a_10.connectivity_checking = "OFF",
		ram_block11a_10.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_10.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_10.operation_mode = "dual_port",
		ram_block11a_10.port_a_address_width = 13,
		ram_block11a_10.port_a_data_width = 1,
		ram_block11a_10.port_a_first_address = 8192,
		ram_block11a_10.port_a_first_bit_number = 2,
		ram_block11a_10.port_a_last_address = 16383,
		ram_block11a_10.port_a_logical_ram_depth = 32768,
		ram_block11a_10.port_a_logical_ram_width = 8,
		ram_block11a_10.port_b_address_clear = "none",
		ram_block11a_10.port_b_address_clock = "clock1",
		ram_block11a_10.port_b_address_width = 13,
		ram_block11a_10.port_b_data_out_clear = "none",
		ram_block11a_10.port_b_data_width = 1,
		ram_block11a_10.port_b_first_address = 8192,
		ram_block11a_10.port_b_first_bit_number = 2,
		ram_block11a_10.port_b_last_address = 16383,
		ram_block11a_10.port_b_logical_ram_depth = 32768,
		ram_block11a_10.port_b_logical_ram_width = 8,
		ram_block11a_10.port_b_read_enable_clock = "clock1",
		ram_block11a_10.ram_block_type = "AUTO",
		ram_block11a_10.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_11
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[1]),
	.ena1(wire_rden_decode_b_eq[1]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[3]}),
	.portadataout(),
	.portawe(wire_decode12_eq[1]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_11portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_11.clk0_core_clock_enable = "ena0",
		ram_block11a_11.clk0_input_clock_enable = "none",
		ram_block11a_11.clk1_core_clock_enable = "ena1",
		ram_block11a_11.clk1_input_clock_enable = "none",
		ram_block11a_11.connectivity_checking = "OFF",
		ram_block11a_11.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_11.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_11.operation_mode = "dual_port",
		ram_block11a_11.port_a_address_width = 13,
		ram_block11a_11.port_a_data_width = 1,
		ram_block11a_11.port_a_first_address = 8192,
		ram_block11a_11.port_a_first_bit_number = 3,
		ram_block11a_11.port_a_last_address = 16383,
		ram_block11a_11.port_a_logical_ram_depth = 32768,
		ram_block11a_11.port_a_logical_ram_width = 8,
		ram_block11a_11.port_b_address_clear = "none",
		ram_block11a_11.port_b_address_clock = "clock1",
		ram_block11a_11.port_b_address_width = 13,
		ram_block11a_11.port_b_data_out_clear = "none",
		ram_block11a_11.port_b_data_width = 1,
		ram_block11a_11.port_b_first_address = 8192,
		ram_block11a_11.port_b_first_bit_number = 3,
		ram_block11a_11.port_b_last_address = 16383,
		ram_block11a_11.port_b_logical_ram_depth = 32768,
		ram_block11a_11.port_b_logical_ram_width = 8,
		ram_block11a_11.port_b_read_enable_clock = "clock1",
		ram_block11a_11.ram_block_type = "AUTO",
		ram_block11a_11.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_12
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[1]),
	.ena1(wire_rden_decode_b_eq[1]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[4]}),
	.portadataout(),
	.portawe(wire_decode12_eq[1]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_12portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_12.clk0_core_clock_enable = "ena0",
		ram_block11a_12.clk0_input_clock_enable = "none",
		ram_block11a_12.clk1_core_clock_enable = "ena1",
		ram_block11a_12.clk1_input_clock_enable = "none",
		ram_block11a_12.connectivity_checking = "OFF",
		ram_block11a_12.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_12.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_12.operation_mode = "dual_port",
		ram_block11a_12.port_a_address_width = 13,
		ram_block11a_12.port_a_data_width = 1,
		ram_block11a_12.port_a_first_address = 8192,
		ram_block11a_12.port_a_first_bit_number = 4,
		ram_block11a_12.port_a_last_address = 16383,
		ram_block11a_12.port_a_logical_ram_depth = 32768,
		ram_block11a_12.port_a_logical_ram_width = 8,
		ram_block11a_12.port_b_address_clear = "none",
		ram_block11a_12.port_b_address_clock = "clock1",
		ram_block11a_12.port_b_address_width = 13,
		ram_block11a_12.port_b_data_out_clear = "none",
		ram_block11a_12.port_b_data_width = 1,
		ram_block11a_12.port_b_first_address = 8192,
		ram_block11a_12.port_b_first_bit_number = 4,
		ram_block11a_12.port_b_last_address = 16383,
		ram_block11a_12.port_b_logical_ram_depth = 32768,
		ram_block11a_12.port_b_logical_ram_width = 8,
		ram_block11a_12.port_b_read_enable_clock = "clock1",
		ram_block11a_12.ram_block_type = "AUTO",
		ram_block11a_12.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_13
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[1]),
	.ena1(wire_rden_decode_b_eq[1]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[5]}),
	.portadataout(),
	.portawe(wire_decode12_eq[1]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_13portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_13.clk0_core_clock_enable = "ena0",
		ram_block11a_13.clk0_input_clock_enable = "none",
		ram_block11a_13.clk1_core_clock_enable = "ena1",
		ram_block11a_13.clk1_input_clock_enable = "none",
		ram_block11a_13.connectivity_checking = "OFF",
		ram_block11a_13.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_13.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_13.operation_mode = "dual_port",
		ram_block11a_13.port_a_address_width = 13,
		ram_block11a_13.port_a_data_width = 1,
		ram_block11a_13.port_a_first_address = 8192,
		ram_block11a_13.port_a_first_bit_number = 5,
		ram_block11a_13.port_a_last_address = 16383,
		ram_block11a_13.port_a_logical_ram_depth = 32768,
		ram_block11a_13.port_a_logical_ram_width = 8,
		ram_block11a_13.port_b_address_clear = "none",
		ram_block11a_13.port_b_address_clock = "clock1",
		ram_block11a_13.port_b_address_width = 13,
		ram_block11a_13.port_b_data_out_clear = "none",
		ram_block11a_13.port_b_data_width = 1,
		ram_block11a_13.port_b_first_address = 8192,
		ram_block11a_13.port_b_first_bit_number = 5,
		ram_block11a_13.port_b_last_address = 16383,
		ram_block11a_13.port_b_logical_ram_depth = 32768,
		ram_block11a_13.port_b_logical_ram_width = 8,
		ram_block11a_13.port_b_read_enable_clock = "clock1",
		ram_block11a_13.ram_block_type = "AUTO",
		ram_block11a_13.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_14
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[1]),
	.ena1(wire_rden_decode_b_eq[1]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[6]}),
	.portadataout(),
	.portawe(wire_decode12_eq[1]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_14portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_14.clk0_core_clock_enable = "ena0",
		ram_block11a_14.clk0_input_clock_enable = "none",
		ram_block11a_14.clk1_core_clock_enable = "ena1",
		ram_block11a_14.clk1_input_clock_enable = "none",
		ram_block11a_14.connectivity_checking = "OFF",
		ram_block11a_14.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_14.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_14.operation_mode = "dual_port",
		ram_block11a_14.port_a_address_width = 13,
		ram_block11a_14.port_a_data_width = 1,
		ram_block11a_14.port_a_first_address = 8192,
		ram_block11a_14.port_a_first_bit_number = 6,
		ram_block11a_14.port_a_last_address = 16383,
		ram_block11a_14.port_a_logical_ram_depth = 32768,
		ram_block11a_14.port_a_logical_ram_width = 8,
		ram_block11a_14.port_b_address_clear = "none",
		ram_block11a_14.port_b_address_clock = "clock1",
		ram_block11a_14.port_b_address_width = 13,
		ram_block11a_14.port_b_data_out_clear = "none",
		ram_block11a_14.port_b_data_width = 1,
		ram_block11a_14.port_b_first_address = 8192,
		ram_block11a_14.port_b_first_bit_number = 6,
		ram_block11a_14.port_b_last_address = 16383,
		ram_block11a_14.port_b_logical_ram_depth = 32768,
		ram_block11a_14.port_b_logical_ram_width = 8,
		ram_block11a_14.port_b_read_enable_clock = "clock1",
		ram_block11a_14.ram_block_type = "AUTO",
		ram_block11a_14.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_15
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[1]),
	.ena1(wire_rden_decode_b_eq[1]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[7]}),
	.portadataout(),
	.portawe(wire_decode12_eq[1]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_15portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_15.clk0_core_clock_enable = "ena0",
		ram_block11a_15.clk0_input_clock_enable = "none",
		ram_block11a_15.clk1_core_clock_enable = "ena1",
		ram_block11a_15.clk1_input_clock_enable = "none",
		ram_block11a_15.connectivity_checking = "OFF",
		ram_block11a_15.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_15.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_15.operation_mode = "dual_port",
		ram_block11a_15.port_a_address_width = 13,
		ram_block11a_15.port_a_data_width = 1,
		ram_block11a_15.port_a_first_address = 8192,
		ram_block11a_15.port_a_first_bit_number = 7,
		ram_block11a_15.port_a_last_address = 16383,
		ram_block11a_15.port_a_logical_ram_depth = 32768,
		ram_block11a_15.port_a_logical_ram_width = 8,
		ram_block11a_15.port_b_address_clear = "none",
		ram_block11a_15.port_b_address_clock = "clock1",
		ram_block11a_15.port_b_address_width = 13,
		ram_block11a_15.port_b_data_out_clear = "none",
		ram_block11a_15.port_b_data_width = 1,
		ram_block11a_15.port_b_first_address = 8192,
		ram_block11a_15.port_b_first_bit_number = 7,
		ram_block11a_15.port_b_last_address = 16383,
		ram_block11a_15.port_b_logical_ram_depth = 32768,
		ram_block11a_15.port_b_logical_ram_width = 8,
		ram_block11a_15.port_b_read_enable_clock = "clock1",
		ram_block11a_15.ram_block_type = "AUTO",
		ram_block11a_15.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_16
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[2]),
	.ena1(wire_rden_decode_b_eq[2]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[0]}),
	.portadataout(),
	.portawe(wire_decode12_eq[2]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_16portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_16.clk0_core_clock_enable = "ena0",
		ram_block11a_16.clk0_input_clock_enable = "none",
		ram_block11a_16.clk1_core_clock_enable = "ena1",
		ram_block11a_16.clk1_input_clock_enable = "none",
		ram_block11a_16.connectivity_checking = "OFF",
		ram_block11a_16.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_16.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_16.operation_mode = "dual_port",
		ram_block11a_16.port_a_address_width = 13,
		ram_block11a_16.port_a_data_width = 1,
		ram_block11a_16.port_a_first_address = 16384,
		ram_block11a_16.port_a_first_bit_number = 0,
		ram_block11a_16.port_a_last_address = 24575,
		ram_block11a_16.port_a_logical_ram_depth = 32768,
		ram_block11a_16.port_a_logical_ram_width = 8,
		ram_block11a_16.port_b_address_clear = "none",
		ram_block11a_16.port_b_address_clock = "clock1",
		ram_block11a_16.port_b_address_width = 13,
		ram_block11a_16.port_b_data_out_clear = "none",
		ram_block11a_16.port_b_data_width = 1,
		ram_block11a_16.port_b_first_address = 16384,
		ram_block11a_16.port_b_first_bit_number = 0,
		ram_block11a_16.port_b_last_address = 24575,
		ram_block11a_16.port_b_logical_ram_depth = 32768,
		ram_block11a_16.port_b_logical_ram_width = 8,
		ram_block11a_16.port_b_read_enable_clock = "clock1",
		ram_block11a_16.ram_block_type = "AUTO",
		ram_block11a_16.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_17
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[2]),
	.ena1(wire_rden_decode_b_eq[2]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[1]}),
	.portadataout(),
	.portawe(wire_decode12_eq[2]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_17portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_17.clk0_core_clock_enable = "ena0",
		ram_block11a_17.clk0_input_clock_enable = "none",
		ram_block11a_17.clk1_core_clock_enable = "ena1",
		ram_block11a_17.clk1_input_clock_enable = "none",
		ram_block11a_17.connectivity_checking = "OFF",
		ram_block11a_17.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_17.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_17.operation_mode = "dual_port",
		ram_block11a_17.port_a_address_width = 13,
		ram_block11a_17.port_a_data_width = 1,
		ram_block11a_17.port_a_first_address = 16384,
		ram_block11a_17.port_a_first_bit_number = 1,
		ram_block11a_17.port_a_last_address = 24575,
		ram_block11a_17.port_a_logical_ram_depth = 32768,
		ram_block11a_17.port_a_logical_ram_width = 8,
		ram_block11a_17.port_b_address_clear = "none",
		ram_block11a_17.port_b_address_clock = "clock1",
		ram_block11a_17.port_b_address_width = 13,
		ram_block11a_17.port_b_data_out_clear = "none",
		ram_block11a_17.port_b_data_width = 1,
		ram_block11a_17.port_b_first_address = 16384,
		ram_block11a_17.port_b_first_bit_number = 1,
		ram_block11a_17.port_b_last_address = 24575,
		ram_block11a_17.port_b_logical_ram_depth = 32768,
		ram_block11a_17.port_b_logical_ram_width = 8,
		ram_block11a_17.port_b_read_enable_clock = "clock1",
		ram_block11a_17.ram_block_type = "AUTO",
		ram_block11a_17.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_18
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[2]),
	.ena1(wire_rden_decode_b_eq[2]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[2]}),
	.portadataout(),
	.portawe(wire_decode12_eq[2]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_18portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_18.clk0_core_clock_enable = "ena0",
		ram_block11a_18.clk0_input_clock_enable = "none",
		ram_block11a_18.clk1_core_clock_enable = "ena1",
		ram_block11a_18.clk1_input_clock_enable = "none",
		ram_block11a_18.connectivity_checking = "OFF",
		ram_block11a_18.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_18.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_18.operation_mode = "dual_port",
		ram_block11a_18.port_a_address_width = 13,
		ram_block11a_18.port_a_data_width = 1,
		ram_block11a_18.port_a_first_address = 16384,
		ram_block11a_18.port_a_first_bit_number = 2,
		ram_block11a_18.port_a_last_address = 24575,
		ram_block11a_18.port_a_logical_ram_depth = 32768,
		ram_block11a_18.port_a_logical_ram_width = 8,
		ram_block11a_18.port_b_address_clear = "none",
		ram_block11a_18.port_b_address_clock = "clock1",
		ram_block11a_18.port_b_address_width = 13,
		ram_block11a_18.port_b_data_out_clear = "none",
		ram_block11a_18.port_b_data_width = 1,
		ram_block11a_18.port_b_first_address = 16384,
		ram_block11a_18.port_b_first_bit_number = 2,
		ram_block11a_18.port_b_last_address = 24575,
		ram_block11a_18.port_b_logical_ram_depth = 32768,
		ram_block11a_18.port_b_logical_ram_width = 8,
		ram_block11a_18.port_b_read_enable_clock = "clock1",
		ram_block11a_18.ram_block_type = "AUTO",
		ram_block11a_18.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_19
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[2]),
	.ena1(wire_rden_decode_b_eq[2]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[3]}),
	.portadataout(),
	.portawe(wire_decode12_eq[2]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_19portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_19.clk0_core_clock_enable = "ena0",
		ram_block11a_19.clk0_input_clock_enable = "none",
		ram_block11a_19.clk1_core_clock_enable = "ena1",
		ram_block11a_19.clk1_input_clock_enable = "none",
		ram_block11a_19.connectivity_checking = "OFF",
		ram_block11a_19.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_19.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_19.operation_mode = "dual_port",
		ram_block11a_19.port_a_address_width = 13,
		ram_block11a_19.port_a_data_width = 1,
		ram_block11a_19.port_a_first_address = 16384,
		ram_block11a_19.port_a_first_bit_number = 3,
		ram_block11a_19.port_a_last_address = 24575,
		ram_block11a_19.port_a_logical_ram_depth = 32768,
		ram_block11a_19.port_a_logical_ram_width = 8,
		ram_block11a_19.port_b_address_clear = "none",
		ram_block11a_19.port_b_address_clock = "clock1",
		ram_block11a_19.port_b_address_width = 13,
		ram_block11a_19.port_b_data_out_clear = "none",
		ram_block11a_19.port_b_data_width = 1,
		ram_block11a_19.port_b_first_address = 16384,
		ram_block11a_19.port_b_first_bit_number = 3,
		ram_block11a_19.port_b_last_address = 24575,
		ram_block11a_19.port_b_logical_ram_depth = 32768,
		ram_block11a_19.port_b_logical_ram_width = 8,
		ram_block11a_19.port_b_read_enable_clock = "clock1",
		ram_block11a_19.ram_block_type = "AUTO",
		ram_block11a_19.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_20
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[2]),
	.ena1(wire_rden_decode_b_eq[2]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[4]}),
	.portadataout(),
	.portawe(wire_decode12_eq[2]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_20portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_20.clk0_core_clock_enable = "ena0",
		ram_block11a_20.clk0_input_clock_enable = "none",
		ram_block11a_20.clk1_core_clock_enable = "ena1",
		ram_block11a_20.clk1_input_clock_enable = "none",
		ram_block11a_20.connectivity_checking = "OFF",
		ram_block11a_20.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_20.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_20.operation_mode = "dual_port",
		ram_block11a_20.port_a_address_width = 13,
		ram_block11a_20.port_a_data_width = 1,
		ram_block11a_20.port_a_first_address = 16384,
		ram_block11a_20.port_a_first_bit_number = 4,
		ram_block11a_20.port_a_last_address = 24575,
		ram_block11a_20.port_a_logical_ram_depth = 32768,
		ram_block11a_20.port_a_logical_ram_width = 8,
		ram_block11a_20.port_b_address_clear = "none",
		ram_block11a_20.port_b_address_clock = "clock1",
		ram_block11a_20.port_b_address_width = 13,
		ram_block11a_20.port_b_data_out_clear = "none",
		ram_block11a_20.port_b_data_width = 1,
		ram_block11a_20.port_b_first_address = 16384,
		ram_block11a_20.port_b_first_bit_number = 4,
		ram_block11a_20.port_b_last_address = 24575,
		ram_block11a_20.port_b_logical_ram_depth = 32768,
		ram_block11a_20.port_b_logical_ram_width = 8,
		ram_block11a_20.port_b_read_enable_clock = "clock1",
		ram_block11a_20.ram_block_type = "AUTO",
		ram_block11a_20.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_21
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[2]),
	.ena1(wire_rden_decode_b_eq[2]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[5]}),
	.portadataout(),
	.portawe(wire_decode12_eq[2]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_21portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_21.clk0_core_clock_enable = "ena0",
		ram_block11a_21.clk0_input_clock_enable = "none",
		ram_block11a_21.clk1_core_clock_enable = "ena1",
		ram_block11a_21.clk1_input_clock_enable = "none",
		ram_block11a_21.connectivity_checking = "OFF",
		ram_block11a_21.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_21.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_21.operation_mode = "dual_port",
		ram_block11a_21.port_a_address_width = 13,
		ram_block11a_21.port_a_data_width = 1,
		ram_block11a_21.port_a_first_address = 16384,
		ram_block11a_21.port_a_first_bit_number = 5,
		ram_block11a_21.port_a_last_address = 24575,
		ram_block11a_21.port_a_logical_ram_depth = 32768,
		ram_block11a_21.port_a_logical_ram_width = 8,
		ram_block11a_21.port_b_address_clear = "none",
		ram_block11a_21.port_b_address_clock = "clock1",
		ram_block11a_21.port_b_address_width = 13,
		ram_block11a_21.port_b_data_out_clear = "none",
		ram_block11a_21.port_b_data_width = 1,
		ram_block11a_21.port_b_first_address = 16384,
		ram_block11a_21.port_b_first_bit_number = 5,
		ram_block11a_21.port_b_last_address = 24575,
		ram_block11a_21.port_b_logical_ram_depth = 32768,
		ram_block11a_21.port_b_logical_ram_width = 8,
		ram_block11a_21.port_b_read_enable_clock = "clock1",
		ram_block11a_21.ram_block_type = "AUTO",
		ram_block11a_21.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_22
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[2]),
	.ena1(wire_rden_decode_b_eq[2]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[6]}),
	.portadataout(),
	.portawe(wire_decode12_eq[2]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_22portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_22.clk0_core_clock_enable = "ena0",
		ram_block11a_22.clk0_input_clock_enable = "none",
		ram_block11a_22.clk1_core_clock_enable = "ena1",
		ram_block11a_22.clk1_input_clock_enable = "none",
		ram_block11a_22.connectivity_checking = "OFF",
		ram_block11a_22.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_22.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_22.operation_mode = "dual_port",
		ram_block11a_22.port_a_address_width = 13,
		ram_block11a_22.port_a_data_width = 1,
		ram_block11a_22.port_a_first_address = 16384,
		ram_block11a_22.port_a_first_bit_number = 6,
		ram_block11a_22.port_a_last_address = 24575,
		ram_block11a_22.port_a_logical_ram_depth = 32768,
		ram_block11a_22.port_a_logical_ram_width = 8,
		ram_block11a_22.port_b_address_clear = "none",
		ram_block11a_22.port_b_address_clock = "clock1",
		ram_block11a_22.port_b_address_width = 13,
		ram_block11a_22.port_b_data_out_clear = "none",
		ram_block11a_22.port_b_data_width = 1,
		ram_block11a_22.port_b_first_address = 16384,
		ram_block11a_22.port_b_first_bit_number = 6,
		ram_block11a_22.port_b_last_address = 24575,
		ram_block11a_22.port_b_logical_ram_depth = 32768,
		ram_block11a_22.port_b_logical_ram_width = 8,
		ram_block11a_22.port_b_read_enable_clock = "clock1",
		ram_block11a_22.ram_block_type = "AUTO",
		ram_block11a_22.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_23
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[2]),
	.ena1(wire_rden_decode_b_eq[2]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[7]}),
	.portadataout(),
	.portawe(wire_decode12_eq[2]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_23portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_23.clk0_core_clock_enable = "ena0",
		ram_block11a_23.clk0_input_clock_enable = "none",
		ram_block11a_23.clk1_core_clock_enable = "ena1",
		ram_block11a_23.clk1_input_clock_enable = "none",
		ram_block11a_23.connectivity_checking = "OFF",
		ram_block11a_23.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_23.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_23.operation_mode = "dual_port",
		ram_block11a_23.port_a_address_width = 13,
		ram_block11a_23.port_a_data_width = 1,
		ram_block11a_23.port_a_first_address = 16384,
		ram_block11a_23.port_a_first_bit_number = 7,
		ram_block11a_23.port_a_last_address = 24575,
		ram_block11a_23.port_a_logical_ram_depth = 32768,
		ram_block11a_23.port_a_logical_ram_width = 8,
		ram_block11a_23.port_b_address_clear = "none",
		ram_block11a_23.port_b_address_clock = "clock1",
		ram_block11a_23.port_b_address_width = 13,
		ram_block11a_23.port_b_data_out_clear = "none",
		ram_block11a_23.port_b_data_width = 1,
		ram_block11a_23.port_b_first_address = 16384,
		ram_block11a_23.port_b_first_bit_number = 7,
		ram_block11a_23.port_b_last_address = 24575,
		ram_block11a_23.port_b_logical_ram_depth = 32768,
		ram_block11a_23.port_b_logical_ram_width = 8,
		ram_block11a_23.port_b_read_enable_clock = "clock1",
		ram_block11a_23.ram_block_type = "AUTO",
		ram_block11a_23.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_24
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[3]),
	.ena1(wire_rden_decode_b_eq[3]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[0]}),
	.portadataout(),
	.portawe(wire_decode12_eq[3]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_24portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_24.clk0_core_clock_enable = "ena0",
		ram_block11a_24.clk0_input_clock_enable = "none",
		ram_block11a_24.clk1_core_clock_enable = "ena1",
		ram_block11a_24.clk1_input_clock_enable = "none",
		ram_block11a_24.connectivity_checking = "OFF",
		ram_block11a_24.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_24.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_24.operation_mode = "dual_port",
		ram_block11a_24.port_a_address_width = 13,
		ram_block11a_24.port_a_data_width = 1,
		ram_block11a_24.port_a_first_address = 24576,
		ram_block11a_24.port_a_first_bit_number = 0,
		ram_block11a_24.port_a_last_address = 32767,
		ram_block11a_24.port_a_logical_ram_depth = 32768,
		ram_block11a_24.port_a_logical_ram_width = 8,
		ram_block11a_24.port_b_address_clear = "none",
		ram_block11a_24.port_b_address_clock = "clock1",
		ram_block11a_24.port_b_address_width = 13,
		ram_block11a_24.port_b_data_out_clear = "none",
		ram_block11a_24.port_b_data_width = 1,
		ram_block11a_24.port_b_first_address = 24576,
		ram_block11a_24.port_b_first_bit_number = 0,
		ram_block11a_24.port_b_last_address = 32767,
		ram_block11a_24.port_b_logical_ram_depth = 32768,
		ram_block11a_24.port_b_logical_ram_width = 8,
		ram_block11a_24.port_b_read_enable_clock = "clock1",
		ram_block11a_24.ram_block_type = "AUTO",
		ram_block11a_24.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_25
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[3]),
	.ena1(wire_rden_decode_b_eq[3]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[1]}),
	.portadataout(),
	.portawe(wire_decode12_eq[3]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_25portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_25.clk0_core_clock_enable = "ena0",
		ram_block11a_25.clk0_input_clock_enable = "none",
		ram_block11a_25.clk1_core_clock_enable = "ena1",
		ram_block11a_25.clk1_input_clock_enable = "none",
		ram_block11a_25.connectivity_checking = "OFF",
		ram_block11a_25.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_25.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_25.operation_mode = "dual_port",
		ram_block11a_25.port_a_address_width = 13,
		ram_block11a_25.port_a_data_width = 1,
		ram_block11a_25.port_a_first_address = 24576,
		ram_block11a_25.port_a_first_bit_number = 1,
		ram_block11a_25.port_a_last_address = 32767,
		ram_block11a_25.port_a_logical_ram_depth = 32768,
		ram_block11a_25.port_a_logical_ram_width = 8,
		ram_block11a_25.port_b_address_clear = "none",
		ram_block11a_25.port_b_address_clock = "clock1",
		ram_block11a_25.port_b_address_width = 13,
		ram_block11a_25.port_b_data_out_clear = "none",
		ram_block11a_25.port_b_data_width = 1,
		ram_block11a_25.port_b_first_address = 24576,
		ram_block11a_25.port_b_first_bit_number = 1,
		ram_block11a_25.port_b_last_address = 32767,
		ram_block11a_25.port_b_logical_ram_depth = 32768,
		ram_block11a_25.port_b_logical_ram_width = 8,
		ram_block11a_25.port_b_read_enable_clock = "clock1",
		ram_block11a_25.ram_block_type = "AUTO",
		ram_block11a_25.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_26
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[3]),
	.ena1(wire_rden_decode_b_eq[3]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[2]}),
	.portadataout(),
	.portawe(wire_decode12_eq[3]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_26portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_26.clk0_core_clock_enable = "ena0",
		ram_block11a_26.clk0_input_clock_enable = "none",
		ram_block11a_26.clk1_core_clock_enable = "ena1",
		ram_block11a_26.clk1_input_clock_enable = "none",
		ram_block11a_26.connectivity_checking = "OFF",
		ram_block11a_26.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_26.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_26.operation_mode = "dual_port",
		ram_block11a_26.port_a_address_width = 13,
		ram_block11a_26.port_a_data_width = 1,
		ram_block11a_26.port_a_first_address = 24576,
		ram_block11a_26.port_a_first_bit_number = 2,
		ram_block11a_26.port_a_last_address = 32767,
		ram_block11a_26.port_a_logical_ram_depth = 32768,
		ram_block11a_26.port_a_logical_ram_width = 8,
		ram_block11a_26.port_b_address_clear = "none",
		ram_block11a_26.port_b_address_clock = "clock1",
		ram_block11a_26.port_b_address_width = 13,
		ram_block11a_26.port_b_data_out_clear = "none",
		ram_block11a_26.port_b_data_width = 1,
		ram_block11a_26.port_b_first_address = 24576,
		ram_block11a_26.port_b_first_bit_number = 2,
		ram_block11a_26.port_b_last_address = 32767,
		ram_block11a_26.port_b_logical_ram_depth = 32768,
		ram_block11a_26.port_b_logical_ram_width = 8,
		ram_block11a_26.port_b_read_enable_clock = "clock1",
		ram_block11a_26.ram_block_type = "AUTO",
		ram_block11a_26.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_27
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[3]),
	.ena1(wire_rden_decode_b_eq[3]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[3]}),
	.portadataout(),
	.portawe(wire_decode12_eq[3]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_27portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_27.clk0_core_clock_enable = "ena0",
		ram_block11a_27.clk0_input_clock_enable = "none",
		ram_block11a_27.clk1_core_clock_enable = "ena1",
		ram_block11a_27.clk1_input_clock_enable = "none",
		ram_block11a_27.connectivity_checking = "OFF",
		ram_block11a_27.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_27.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_27.operation_mode = "dual_port",
		ram_block11a_27.port_a_address_width = 13,
		ram_block11a_27.port_a_data_width = 1,
		ram_block11a_27.port_a_first_address = 24576,
		ram_block11a_27.port_a_first_bit_number = 3,
		ram_block11a_27.port_a_last_address = 32767,
		ram_block11a_27.port_a_logical_ram_depth = 32768,
		ram_block11a_27.port_a_logical_ram_width = 8,
		ram_block11a_27.port_b_address_clear = "none",
		ram_block11a_27.port_b_address_clock = "clock1",
		ram_block11a_27.port_b_address_width = 13,
		ram_block11a_27.port_b_data_out_clear = "none",
		ram_block11a_27.port_b_data_width = 1,
		ram_block11a_27.port_b_first_address = 24576,
		ram_block11a_27.port_b_first_bit_number = 3,
		ram_block11a_27.port_b_last_address = 32767,
		ram_block11a_27.port_b_logical_ram_depth = 32768,
		ram_block11a_27.port_b_logical_ram_width = 8,
		ram_block11a_27.port_b_read_enable_clock = "clock1",
		ram_block11a_27.ram_block_type = "AUTO",
		ram_block11a_27.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_28
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[3]),
	.ena1(wire_rden_decode_b_eq[3]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[4]}),
	.portadataout(),
	.portawe(wire_decode12_eq[3]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_28portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_28.clk0_core_clock_enable = "ena0",
		ram_block11a_28.clk0_input_clock_enable = "none",
		ram_block11a_28.clk1_core_clock_enable = "ena1",
		ram_block11a_28.clk1_input_clock_enable = "none",
		ram_block11a_28.connectivity_checking = "OFF",
		ram_block11a_28.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_28.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_28.operation_mode = "dual_port",
		ram_block11a_28.port_a_address_width = 13,
		ram_block11a_28.port_a_data_width = 1,
		ram_block11a_28.port_a_first_address = 24576,
		ram_block11a_28.port_a_first_bit_number = 4,
		ram_block11a_28.port_a_last_address = 32767,
		ram_block11a_28.port_a_logical_ram_depth = 32768,
		ram_block11a_28.port_a_logical_ram_width = 8,
		ram_block11a_28.port_b_address_clear = "none",
		ram_block11a_28.port_b_address_clock = "clock1",
		ram_block11a_28.port_b_address_width = 13,
		ram_block11a_28.port_b_data_out_clear = "none",
		ram_block11a_28.port_b_data_width = 1,
		ram_block11a_28.port_b_first_address = 24576,
		ram_block11a_28.port_b_first_bit_number = 4,
		ram_block11a_28.port_b_last_address = 32767,
		ram_block11a_28.port_b_logical_ram_depth = 32768,
		ram_block11a_28.port_b_logical_ram_width = 8,
		ram_block11a_28.port_b_read_enable_clock = "clock1",
		ram_block11a_28.ram_block_type = "AUTO",
		ram_block11a_28.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_29
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[3]),
	.ena1(wire_rden_decode_b_eq[3]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[5]}),
	.portadataout(),
	.portawe(wire_decode12_eq[3]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_29portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_29.clk0_core_clock_enable = "ena0",
		ram_block11a_29.clk0_input_clock_enable = "none",
		ram_block11a_29.clk1_core_clock_enable = "ena1",
		ram_block11a_29.clk1_input_clock_enable = "none",
		ram_block11a_29.connectivity_checking = "OFF",
		ram_block11a_29.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_29.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_29.operation_mode = "dual_port",
		ram_block11a_29.port_a_address_width = 13,
		ram_block11a_29.port_a_data_width = 1,
		ram_block11a_29.port_a_first_address = 24576,
		ram_block11a_29.port_a_first_bit_number = 5,
		ram_block11a_29.port_a_last_address = 32767,
		ram_block11a_29.port_a_logical_ram_depth = 32768,
		ram_block11a_29.port_a_logical_ram_width = 8,
		ram_block11a_29.port_b_address_clear = "none",
		ram_block11a_29.port_b_address_clock = "clock1",
		ram_block11a_29.port_b_address_width = 13,
		ram_block11a_29.port_b_data_out_clear = "none",
		ram_block11a_29.port_b_data_width = 1,
		ram_block11a_29.port_b_first_address = 24576,
		ram_block11a_29.port_b_first_bit_number = 5,
		ram_block11a_29.port_b_last_address = 32767,
		ram_block11a_29.port_b_logical_ram_depth = 32768,
		ram_block11a_29.port_b_logical_ram_width = 8,
		ram_block11a_29.port_b_read_enable_clock = "clock1",
		ram_block11a_29.ram_block_type = "AUTO",
		ram_block11a_29.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_30
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[3]),
	.ena1(wire_rden_decode_b_eq[3]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[6]}),
	.portadataout(),
	.portawe(wire_decode12_eq[3]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_30portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_30.clk0_core_clock_enable = "ena0",
		ram_block11a_30.clk0_input_clock_enable = "none",
		ram_block11a_30.clk1_core_clock_enable = "ena1",
		ram_block11a_30.clk1_input_clock_enable = "none",
		ram_block11a_30.connectivity_checking = "OFF",
		ram_block11a_30.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_30.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_30.operation_mode = "dual_port",
		ram_block11a_30.port_a_address_width = 13,
		ram_block11a_30.port_a_data_width = 1,
		ram_block11a_30.port_a_first_address = 24576,
		ram_block11a_30.port_a_first_bit_number = 6,
		ram_block11a_30.port_a_last_address = 32767,
		ram_block11a_30.port_a_logical_ram_depth = 32768,
		ram_block11a_30.port_a_logical_ram_width = 8,
		ram_block11a_30.port_b_address_clear = "none",
		ram_block11a_30.port_b_address_clock = "clock1",
		ram_block11a_30.port_b_address_width = 13,
		ram_block11a_30.port_b_data_out_clear = "none",
		ram_block11a_30.port_b_data_width = 1,
		ram_block11a_30.port_b_first_address = 24576,
		ram_block11a_30.port_b_first_bit_number = 6,
		ram_block11a_30.port_b_last_address = 32767,
		ram_block11a_30.port_b_logical_ram_depth = 32768,
		ram_block11a_30.port_b_logical_ram_width = 8,
		ram_block11a_30.port_b_read_enable_clock = "clock1",
		ram_block11a_30.ram_block_type = "AUTO",
		ram_block11a_30.lpm_type = "cyclone10lp_ram_block";
	cyclone10lp_ram_block   ram_block11a_31
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena0(wire_wren_decode_a_eq[3]),
	.ena1(wire_rden_decode_b_eq[3]),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[7]}),
	.portadataout(),
	.portawe(wire_decode12_eq[3]),
	.portbaddr({address_b_wire[12:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_31portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_31.clk0_core_clock_enable = "ena0",
		ram_block11a_31.clk0_input_clock_enable = "none",
		ram_block11a_31.clk1_core_clock_enable = "ena1",
		ram_block11a_31.clk1_input_clock_enable = "none",
		ram_block11a_31.connectivity_checking = "OFF",
		ram_block11a_31.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_31.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_31.operation_mode = "dual_port",
		ram_block11a_31.port_a_address_width = 13,
		ram_block11a_31.port_a_data_width = 1,
		ram_block11a_31.port_a_first_address = 24576,
		ram_block11a_31.port_a_first_bit_number = 7,
		ram_block11a_31.port_a_last_address = 32767,
		ram_block11a_31.port_a_logical_ram_depth = 32768,
		ram_block11a_31.port_a_logical_ram_width = 8,
		ram_block11a_31.port_b_address_clear = "none",
		ram_block11a_31.port_b_address_clock = "clock1",
		ram_block11a_31.port_b_address_width = 13,
		ram_block11a_31.port_b_data_out_clear = "none",
		ram_block11a_31.port_b_data_width = 1,
		ram_block11a_31.port_b_first_address = 24576,
		ram_block11a_31.port_b_first_bit_number = 7,
		ram_block11a_31.port_b_last_address = 32767,
		ram_block11a_31.port_b_logical_ram_depth = 32768,
		ram_block11a_31.port_b_logical_ram_width = 8,
		ram_block11a_31.port_b_read_enable_clock = "clock1",
		ram_block11a_31.ram_block_type = "AUTO",
		ram_block11a_31.lpm_type = "cyclone10lp_ram_block";
	assign
		address_a_wire = address_a,
		address_b_sel = address_b[14:13],
		address_b_wire = address_b,
		q_b = wire_mux13_result,
		rden_decode_addr_sel_b = address_b_wire[14:13],
		w_addr_val_a395w = wren_decode_addr_sel_a,
		wren_decode_addr_sel_a = address_a_wire[14:13];
endmodule //FIFO_altsyncram


//dffpipe DELAY=2 WIDTH=16 clock d q ALTERA_INTERNAL_OPTIONS=X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;DONT_MERGE_REGISTER=ON;ADV_NETLIST_OPT_ALLOWED=NEVER_ALLOW
//VERSION_BEGIN 22.1 cbx_a_gray2bin 2023:07:20:14:03:03:SC cbx_a_graycounter 2023:07:20:14:03:03:SC cbx_altdpram 2023:07:20:14:03:03:SC cbx_altera_counter 2023:07:20:14:03:03:SC cbx_altera_gray_counter 2023:07:20:14:03:03:SC cbx_altera_syncram 2023:07:20:14:03:03:SC cbx_altera_syncram_nd_impl 2023:07:20:14:03:03:SC cbx_altsyncram 2023:07:20:14:03:03:SC cbx_cycloneii 2023:07:20:14:03:03:SC cbx_dcfifo 2023:07:20:14:03:03:SC cbx_fifo_common 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_lpm_compare 2023:07:20:14:03:03:SC cbx_lpm_counter 2023:07:20:14:03:03:SC cbx_lpm_decode 2023:07:20:14:03:02:SC cbx_lpm_mux 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_scfifo 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC cbx_stratixiii 2023:07:20:14:03:03:SC cbx_stratixv 2023:07:20:14:03:03:SC cbx_util_mgl 2023:07:20:14:03:03:SC  VERSION_END


//dffpipe DELAY=2 WIDTH=16 clock d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 22.1 cbx_mgl 2023:07:20:14:14:26:SC cbx_stratixii 2023:07:20:14:03:03:SC cbx_util_mgl 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = reg 32 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  FIFO_dffpipe
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [15:0]  d;
	output   [15:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[15:0]	dffe15a;
	reg	[15:0]	dffe16a;
	wire clrn;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe15a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe15a <= {16{1'b1}};
		else if (clrn == 1'b0) dffe15a <= 16'b0;
		else if  (ena == 1'b1)   dffe15a <= (d & {16{(~ sclr)}});
	// synopsys translate_off
	initial
		dffe16a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe16a <= {16{1'b1}};
		else if (clrn == 1'b0) dffe16a <= 16'b0;
		else if  (ena == 1'b1)   dffe16a <= (dffe15a & {16{(~ sclr)}});
	assign
		clrn = 1'b1,
		ena = 1'b1,
		prn = 1'b1,
		q = dffe16a,
		sclr = 1'b0;
endmodule //FIFO_dffpipe

//synthesis_resources = reg 32 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;DONT_MERGE_REGISTER=ON;ADV_NETLIST_OPT_ALLOWED=NEVER_ALLOW"} *)
module  FIFO_alt_synch_pipe
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [15:0]  d;
	output   [15:0]  q;

	wire  [15:0]   wire_dffpipe14_q;

	FIFO_dffpipe   dffpipe14
	( 
	.clock(clock),
	.d(d),
	.q(wire_dffpipe14_q));
	assign
		q = wire_dffpipe14_q;
endmodule //FIFO_alt_synch_pipe


//dffpipe DELAY=1 WIDTH=1 clock d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 22.1 cbx_mgl 2023:07:20:14:14:26:SC cbx_stratixii 2023:07:20:14:03:03:SC cbx_util_mgl 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = reg 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  FIFO_dffpipe1
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [0:0]  d;
	output   [0:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[0:0]	dffe17a;
	wire clrn;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe17a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe17a <= {1{1'b1}};
		else if (clrn == 1'b0) dffe17a <= 1'b0;
		else if  (ena == 1'b1)   dffe17a <= (d & (~ sclr));
	assign
		clrn = 1'b1,
		ena = 1'b1,
		prn = 1'b1,
		q = dffe17a,
		sclr = 1'b0;
endmodule //FIFO_dffpipe1


//dffpipe DELAY=1 WIDTH=16 clock d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 22.1 cbx_mgl 2023:07:20:14:14:26:SC cbx_stratixii 2023:07:20:14:03:03:SC cbx_util_mgl 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = reg 16 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  FIFO_dffpipe12
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [15:0]  d;
	output   [15:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[15:0]	dffe18a;
	wire clrn;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe18a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe18a <= {16{1'b1}};
		else if (clrn == 1'b0) dffe18a <= 16'b0;
		else if  (ena == 1'b1)   dffe18a <= (d & {16{(~ sclr)}});
	assign
		clrn = 1'b1,
		ena = 1'b1,
		prn = 1'b1,
		q = dffe18a,
		sclr = 1'b0;
endmodule //FIFO_dffpipe12


//dffpipe DELAY=2 WIDTH=16 clock d q ALTERA_INTERNAL_OPTIONS=X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;DONT_MERGE_REGISTER=ON;ADV_NETLIST_OPT_ALLOWED=NEVER_ALLOW
//VERSION_BEGIN 22.1 cbx_a_gray2bin 2023:07:20:14:03:03:SC cbx_a_graycounter 2023:07:20:14:03:03:SC cbx_altdpram 2023:07:20:14:03:03:SC cbx_altera_counter 2023:07:20:14:03:03:SC cbx_altera_gray_counter 2023:07:20:14:03:03:SC cbx_altera_syncram 2023:07:20:14:03:03:SC cbx_altera_syncram_nd_impl 2023:07:20:14:03:03:SC cbx_altsyncram 2023:07:20:14:03:03:SC cbx_cycloneii 2023:07:20:14:03:03:SC cbx_dcfifo 2023:07:20:14:03:03:SC cbx_fifo_common 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_lpm_compare 2023:07:20:14:03:03:SC cbx_lpm_counter 2023:07:20:14:03:03:SC cbx_lpm_decode 2023:07:20:14:03:02:SC cbx_lpm_mux 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_scfifo 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC cbx_stratixiii 2023:07:20:14:03:03:SC cbx_stratixv 2023:07:20:14:03:03:SC cbx_util_mgl 2023:07:20:14:03:03:SC  VERSION_END


//dffpipe DELAY=2 WIDTH=16 clock d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 22.1 cbx_mgl 2023:07:20:14:14:26:SC cbx_stratixii 2023:07:20:14:03:03:SC cbx_util_mgl 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = reg 32 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  FIFO_dffpipe123
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [15:0]  d;
	output   [15:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[15:0]	dffe20a;
	reg	[15:0]	dffe21a;
	wire clrn;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe20a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe20a <= {16{1'b1}};
		else if (clrn == 1'b0) dffe20a <= 16'b0;
		else if  (ena == 1'b1)   dffe20a <= (d & {16{(~ sclr)}});
	// synopsys translate_off
	initial
		dffe21a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe21a <= {16{1'b1}};
		else if (clrn == 1'b0) dffe21a <= 16'b0;
		else if  (ena == 1'b1)   dffe21a <= (dffe20a & {16{(~ sclr)}});
	assign
		clrn = 1'b1,
		ena = 1'b1,
		prn = 1'b1,
		q = dffe21a,
		sclr = 1'b0;
endmodule //FIFO_dffpipe123

//synthesis_resources = reg 32 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;DONT_MERGE_REGISTER=ON;ADV_NETLIST_OPT_ALLOWED=NEVER_ALLOW"} *)
module  FIFO_alt_synch_pipe1
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [15:0]  d;
	output   [15:0]  q;

	wire  [15:0]   wire_dffpipe19_q;

	FIFO_dffpipe123   dffpipe19
	( 
	.clock(clock),
	.d(d),
	.q(wire_dffpipe19_q));
	assign
		q = wire_dffpipe19_q;
endmodule //FIFO_alt_synch_pipe1


//lpm_add_sub DEVICE_FAMILY="Cyclone 10 LP" LPM_DIRECTION="SUB" LPM_WIDTH=16 dataa datab result
//VERSION_BEGIN 22.1 cbx_cycloneii 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC  VERSION_END


//lpm_compare DEVICE_FAMILY="Cyclone 10 LP" LPM_WIDTH=8 aeb dataa datab
//VERSION_BEGIN 22.1 cbx_cycloneii 2023:07:20:14:03:03:SC cbx_lpm_add_sub 2023:07:20:14:03:03:SC cbx_lpm_compare 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC cbx_nadder 2023:07:20:14:03:03:SC cbx_stratix 2023:07:20:14:03:03:SC cbx_stratixii 2023:07:20:14:03:03:SC  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  FIFO_cmpr
	( 
	aeb,
	dataa,
	datab) /* synthesis synthesis_clearbox=1 */;
	output   aeb;
	input   [7:0]  dataa;
	input   [7:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [7:0]  dataa;
	tri0   [7:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  aeb_result_wire;
	wire  [0:0]  aneb_result_wire;
	wire  [19:0]  data_wire;
	wire  eq_wire;

	assign
		aeb = eq_wire,
		aeb_result_wire = (~ aneb_result_wire),
		aneb_result_wire = (((data_wire[0] | data_wire[1]) | data_wire[2]) | data_wire[3]),
		data_wire = {datab[7], dataa[7], datab[6], dataa[6], datab[5], dataa[5], datab[4], dataa[4], datab[3], dataa[3], datab[2], dataa[2], datab[1], dataa[1], datab[0], dataa[0], ((data_wire[16] ^ data_wire[17]) | (data_wire[18] ^ data_wire[19])), ((data_wire[12] ^ data_wire[13]) | (data_wire[14] ^ data_wire[15])), ((data_wire[8] ^ data_wire[9]) | (data_wire[10] ^ data_wire[11])), ((data_wire[4] ^ data_wire[5]) | (data_wire[6] ^ data_wire[7]))},
		eq_wire = aeb_result_wire;
endmodule //FIFO_cmpr


//lpm_mux DEVICE_FAMILY="Cyclone 10 LP" LPM_SIZE=2 LPM_WIDTH=1 LPM_WIDTHS=1 data result sel
//VERSION_BEGIN 22.1 cbx_lpm_mux 2023:07:20:14:03:03:SC cbx_mgl 2023:07:20:14:14:26:SC  VERSION_END

//synthesis_resources = lut 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  FIFO_mux1
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [1:0]  data;
	output   [0:0]  result;
	input   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [1:0]  data;
	tri0   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  result_node;
	wire  [0:0]  sel_node;
	wire  [1:0]  w_data1037w;

	assign
		result = result_node,
		result_node = {((sel_node & w_data1037w[1]) | ((~ sel_node) & w_data1037w[0]))},
		sel_node = {sel[0]},
		w_data1037w = {data[1:0]};
endmodule //FIFO_mux1

//synthesis_resources = lut 49 M9K 32 reg 229 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 3;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;-name CUT ON -from rdptr_g -to ws_dgrp|FIFO_dffpipe123:dffpipe19|dffe20a;-name SDC_STATEMENT \"set_false_path -from *rdptr_g* -to *ws_dgrp|FIFO_dffpipe123:dffpipe19|dffe20a* \";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|FIFO_dffpipe:dffpipe14|dffe15a;-name SDC_STATEMENT \"set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|FIFO_dffpipe:dffpipe14|dffe15a* \""} *)
module  FIFO_dcfifo
	( 
	data,
	q,
	rdclk,
	rdempty,
	rdreq,
	wrclk,
	wrfull,
	wrreq,
	wrusedw) /* synthesis synthesis_clearbox=1 */;
	input   [7:0]  data;
	output   [7:0]  q;
	input   rdclk;
	output   rdempty;
	input   rdreq;
	input   wrclk;
	output   wrfull;
	input   wrreq;
	output   [15:0]  wrusedw;

	wire  [15:0]   wire_wrptr_g_gray2bin_bin;
	wire  [15:0]   wire_ws_dgrp_gray2bin_bin;
	wire  [15:0]   wire_rdptr_g1p_q;
	wire  [15:0]   wire_wrptr_g1p_q;
	wire  [7:0]   wire_fifo_ram_q_b;
	reg	[15:0]	delayed_wrptr_g;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;POWER_UP_LEVEL=HIGH"} *)
	reg	rdemp_eq_comp_lsb_aeb;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON;POWER_UP_LEVEL=HIGH"} *)
	reg	rdemp_eq_comp_msb_aeb;
	reg	[15:0]	rdptr_g;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON"} *)
	reg	[15:0]	rs_dgwp_reg;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON"} *)
	reg	wrfull_eq_comp_lsb_mux_reg;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON"} *)
	reg	wrfull_eq_comp_msb_mux_reg;
	(* ALTERA_ATTRIBUTE = {"suppress_da_rule_internal=S102;POWER_UP_LEVEL=LOW"} *)
	reg	[15:0]	wrptr_g;
	(* ALTERA_ATTRIBUTE = {"SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;PRESERVE_REGISTER=ON"} *)
	reg	[15:0]	ws_dgrp_reg;
	wire  [15:0]   wire_rs_dgwp_q;
	wire  [0:0]   wire_wrfull_reg_q;
	wire  [15:0]   wire_ws_brp_q;
	wire  [15:0]   wire_ws_bwp_q;
	wire  [15:0]   wire_ws_dgrp_q;
	wire	[15:0]	wire_wrusedw_sub_dataa;
	wire	[15:0]	wire_wrusedw_sub_datab;
	wire	[15:0]	wire_wrusedw_sub_result;
	wire  wire_rdempty_eq_comp1_lsb_aeb;
	wire  wire_rdempty_eq_comp1_msb_aeb;
	wire  wire_rdempty_eq_comp_lsb_aeb;
	wire  wire_rdempty_eq_comp_msb_aeb;
	wire  wire_wrfull_eq_comp1_lsb_aeb;
	wire  wire_wrfull_eq_comp1_msb_aeb;
	wire  wire_wrfull_eq_comp_lsb_aeb;
	wire  wire_wrfull_eq_comp_msb_aeb;
	wire  [0:0]   wire_rdemp_eq_comp_lsb_mux_result;
	wire  [0:0]   wire_rdemp_eq_comp_msb_mux_result;
	wire  [0:0]   wire_wrfull_eq_comp_lsb_mux_result;
	wire  [0:0]   wire_wrfull_eq_comp_msb_mux_result;
	wire  int_rdempty;
	wire  int_wrfull;
	wire  [14:0]  ram_address_a;
	wire  [14:0]  ram_address_b;
	wire  valid_rdreq;
	wire  valid_wrreq;
	wire  [15:0]  wrptr_g1s;
	wire  [15:0]  wrptr_gs;

	FIFO_a_gray2bin   wrptr_g_gray2bin
	( 
	.bin(wire_wrptr_g_gray2bin_bin),
	.gray(wrptr_g[15:0]));
	FIFO_a_gray2bin   ws_dgrp_gray2bin
	( 
	.bin(wire_ws_dgrp_gray2bin_bin),
	.gray(ws_dgrp_reg[15:0]));
	FIFO_a_graycounter   rdptr_g1p
	( 
	.clock(rdclk),
	.cnt_en(valid_rdreq),
	.q(wire_rdptr_g1p_q));
	FIFO_a_graycounter1   wrptr_g1p
	( 
	.clock(wrclk),
	.cnt_en(valid_wrreq),
	.q(wire_wrptr_g1p_q));
	FIFO_altsyncram   fifo_ram
	( 
	.address_a(ram_address_a),
	.address_b(ram_address_b),
	.addressstall_b((~ valid_rdreq)),
	.clock0(wrclk),
	.clock1(rdclk),
	.data_a(data),
	.q_b(wire_fifo_ram_q_b),
	.wren_a(valid_wrreq));
	// synopsys translate_off
	initial
		delayed_wrptr_g = 0;
	// synopsys translate_on
	always @ ( posedge wrclk)
		  delayed_wrptr_g <= wrptr_g;
	// synopsys translate_off
	initial
		rdemp_eq_comp_lsb_aeb = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge rdclk)
		  rdemp_eq_comp_lsb_aeb <= wire_rdemp_eq_comp_lsb_mux_result;
	// synopsys translate_off
	initial
		rdemp_eq_comp_msb_aeb = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge rdclk)
		  rdemp_eq_comp_msb_aeb <= wire_rdemp_eq_comp_msb_mux_result;
	// synopsys translate_off
	initial
		rdptr_g = 0;
	// synopsys translate_on
	always @ ( posedge rdclk)
		if (valid_rdreq == 1'b1)   rdptr_g <= wire_rdptr_g1p_q;
	// synopsys translate_off
	initial
		rs_dgwp_reg = 0;
	// synopsys translate_on
	always @ ( posedge rdclk)
		  rs_dgwp_reg <= wire_rs_dgwp_q;
	// synopsys translate_off
	initial
		wrfull_eq_comp_lsb_mux_reg = 0;
	// synopsys translate_on
	always @ ( posedge wrclk)
		  wrfull_eq_comp_lsb_mux_reg <= wire_wrfull_eq_comp_lsb_mux_result;
	// synopsys translate_off
	initial
		wrfull_eq_comp_msb_mux_reg = 0;
	// synopsys translate_on
	always @ ( posedge wrclk)
		  wrfull_eq_comp_msb_mux_reg <= wire_wrfull_eq_comp_msb_mux_result;
	// synopsys translate_off
	initial
		wrptr_g = 0;
	// synopsys translate_on
	always @ ( posedge wrclk)
		if (valid_wrreq == 1'b1)   wrptr_g <= wire_wrptr_g1p_q;
	// synopsys translate_off
	initial
		ws_dgrp_reg = 0;
	// synopsys translate_on
	always @ ( posedge wrclk)
		  ws_dgrp_reg <= wire_ws_dgrp_q;
	FIFO_alt_synch_pipe   rs_dgwp
	( 
	.clock(rdclk),
	.d(delayed_wrptr_g),
	.q(wire_rs_dgwp_q));
	FIFO_dffpipe1   wrfull_reg
	( 
	.clock(wrclk),
	.d(int_wrfull),
	.q(wire_wrfull_reg_q));
	FIFO_dffpipe12   ws_brp
	( 
	.clock(wrclk),
	.d(wire_ws_dgrp_gray2bin_bin),
	.q(wire_ws_brp_q));
	FIFO_dffpipe12   ws_bwp
	( 
	.clock(wrclk),
	.d(wire_wrptr_g_gray2bin_bin),
	.q(wire_ws_bwp_q));
	FIFO_alt_synch_pipe1   ws_dgrp
	( 
	.clock(wrclk),
	.d(rdptr_g),
	.q(wire_ws_dgrp_q));
	assign
		wire_wrusedw_sub_result = wire_wrusedw_sub_dataa - wire_wrusedw_sub_datab;
	assign
		wire_wrusedw_sub_dataa = wire_ws_bwp_q,
		wire_wrusedw_sub_datab = wire_ws_brp_q;
	FIFO_cmpr   rdempty_eq_comp1_lsb
	( 
	.aeb(wire_rdempty_eq_comp1_lsb_aeb),
	.dataa(wire_rs_dgwp_q[7:0]),
	.datab(wire_rdptr_g1p_q[7:0]));
	FIFO_cmpr   rdempty_eq_comp1_msb
	( 
	.aeb(wire_rdempty_eq_comp1_msb_aeb),
	.dataa(wire_rs_dgwp_q[15:8]),
	.datab(wire_rdptr_g1p_q[15:8]));
	FIFO_cmpr   rdempty_eq_comp_lsb
	( 
	.aeb(wire_rdempty_eq_comp_lsb_aeb),
	.dataa(wire_rs_dgwp_q[7:0]),
	.datab(rdptr_g[7:0]));
	FIFO_cmpr   rdempty_eq_comp_msb
	( 
	.aeb(wire_rdempty_eq_comp_msb_aeb),
	.dataa(wire_rs_dgwp_q[15:8]),
	.datab(rdptr_g[15:8]));
	FIFO_cmpr   wrfull_eq_comp1_lsb
	( 
	.aeb(wire_wrfull_eq_comp1_lsb_aeb),
	.dataa(wire_ws_dgrp_q[7:0]),
	.datab(wrptr_g1s[7:0]));
	FIFO_cmpr   wrfull_eq_comp1_msb
	( 
	.aeb(wire_wrfull_eq_comp1_msb_aeb),
	.dataa(wire_ws_dgrp_q[15:8]),
	.datab(wrptr_g1s[15:8]));
	FIFO_cmpr   wrfull_eq_comp_lsb
	( 
	.aeb(wire_wrfull_eq_comp_lsb_aeb),
	.dataa(wire_ws_dgrp_q[7:0]),
	.datab(wrptr_gs[7:0]));
	FIFO_cmpr   wrfull_eq_comp_msb
	( 
	.aeb(wire_wrfull_eq_comp_msb_aeb),
	.dataa(wire_ws_dgrp_q[15:8]),
	.datab(wrptr_gs[15:8]));
	FIFO_mux1   rdemp_eq_comp_lsb_mux
	( 
	.data({wire_rdempty_eq_comp1_lsb_aeb, wire_rdempty_eq_comp_lsb_aeb}),
	.result(wire_rdemp_eq_comp_lsb_mux_result),
	.sel(valid_rdreq));
	FIFO_mux1   rdemp_eq_comp_msb_mux
	( 
	.data({wire_rdempty_eq_comp1_msb_aeb, wire_rdempty_eq_comp_msb_aeb}),
	.result(wire_rdemp_eq_comp_msb_mux_result),
	.sel(valid_rdreq));
	FIFO_mux1   wrfull_eq_comp_lsb_mux
	( 
	.data({wire_wrfull_eq_comp1_lsb_aeb, wire_wrfull_eq_comp_lsb_aeb}),
	.result(wire_wrfull_eq_comp_lsb_mux_result),
	.sel(valid_wrreq));
	FIFO_mux1   wrfull_eq_comp_msb_mux
	( 
	.data({wire_wrfull_eq_comp1_msb_aeb, wire_wrfull_eq_comp_msb_aeb}),
	.result(wire_wrfull_eq_comp_msb_mux_result),
	.sel(valid_wrreq));
	assign
		int_rdempty = (rdemp_eq_comp_lsb_aeb & rdemp_eq_comp_msb_aeb),
		int_wrfull = (wrfull_eq_comp_lsb_mux_reg & wrfull_eq_comp_msb_mux_reg),
		q = wire_fifo_ram_q_b,
		ram_address_a = {(wrptr_g[15] ^ wrptr_g[14]), wrptr_g[13:0]},
		ram_address_b = {(wire_rdptr_g1p_q[15] ^ wire_rdptr_g1p_q[14]), wire_rdptr_g1p_q[13:0]},
		rdempty = int_rdempty,
		valid_rdreq = (rdreq & (~ int_rdempty)),
		valid_wrreq = (wrreq & (~ int_wrfull)),
		wrfull = int_wrfull,
		wrptr_g1s = {(~ wire_wrptr_g1p_q[15]), (~ wire_wrptr_g1p_q[14]), wire_wrptr_g1p_q[13:0]},
		wrptr_gs = {(~ wrptr_g[15]), (~ wrptr_g[14]), wrptr_g[13:0]},
		wrusedw = {wire_wrfull_reg_q, wire_wrusedw_sub_result[14:0]};
endmodule //FIFO_dcfifo
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module FIFO (
	data,
	rdclk,
	rdreq,
	wrclk,
	wrreq,
	q,
	rdempty,
	wrfull,
	wrusedw)/* synthesis synthesis_clearbox = 1 */;

	input	[7:0]  data;
	input	  rdclk;
	input	  rdreq;
	input	  wrclk;
	input	  wrreq;
	output	[7:0]  q;
	output	  rdempty;
	output	  wrfull;
	output	[15:0]  wrusedw;

	wire [7:0] sub_wire0;
	wire  sub_wire1;
	wire  sub_wire2;
	wire [15:0] sub_wire3;
	wire [7:0] q = sub_wire0[7:0];
	wire  rdempty = sub_wire1;
	wire  wrfull = sub_wire2;
	wire [15:0] wrusedw = sub_wire3[15:0];

	FIFO_dcfifo	FIFO_dcfifo_component (
				.data (data),
				.rdclk (rdclk),
				.rdreq (rdreq),
				.wrclk (wrclk),
				.wrreq (wrreq),
				.q (sub_wire0),
				.rdempty (sub_wire1),
				.wrfull (sub_wire2),
				.wrusedw (sub_wire3));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AlmostEmpty NUMERIC "0"
// Retrieval info: PRIVATE: AlmostEmptyThr NUMERIC "-1"
// Retrieval info: PRIVATE: AlmostFull NUMERIC "0"
// Retrieval info: PRIVATE: AlmostFullThr NUMERIC "-1"
// Retrieval info: PRIVATE: CLOCKS_ARE_SYNCHRONIZED NUMERIC "0"
// Retrieval info: PRIVATE: Clock NUMERIC "4"
// Retrieval info: PRIVATE: Depth NUMERIC "32768"
// Retrieval info: PRIVATE: Empty NUMERIC "1"
// Retrieval info: PRIVATE: Full NUMERIC "1"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone 10 LP"
// Retrieval info: PRIVATE: LE_BasedFIFO NUMERIC "0"
// Retrieval info: PRIVATE: LegacyRREQ NUMERIC "0"
// Retrieval info: PRIVATE: MAX_DEPTH_BY_9 NUMERIC "0"
// Retrieval info: PRIVATE: OVERFLOW_CHECKING NUMERIC "0"
// Retrieval info: PRIVATE: Optimize NUMERIC "2"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "0"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: UNDERFLOW_CHECKING NUMERIC "0"
// Retrieval info: PRIVATE: UsedW NUMERIC "1"
// Retrieval info: PRIVATE: Width NUMERIC "8"
// Retrieval info: PRIVATE: dc_aclr NUMERIC "0"
// Retrieval info: PRIVATE: diff_widths NUMERIC "0"
// Retrieval info: PRIVATE: msb_usedw NUMERIC "1"
// Retrieval info: PRIVATE: output_width NUMERIC "8"
// Retrieval info: PRIVATE: rsEmpty NUMERIC "1"
// Retrieval info: PRIVATE: rsFull NUMERIC "0"
// Retrieval info: PRIVATE: rsUsedW NUMERIC "0"
// Retrieval info: PRIVATE: sc_aclr NUMERIC "0"
// Retrieval info: PRIVATE: sc_sclr NUMERIC "0"
// Retrieval info: PRIVATE: wsEmpty NUMERIC "0"
// Retrieval info: PRIVATE: wsFull NUMERIC "1"
// Retrieval info: PRIVATE: wsUsedW NUMERIC "1"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: ADD_USEDW_MSB_BIT STRING "ON"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone 10 LP"
// Retrieval info: CONSTANT: LPM_NUMWORDS NUMERIC "32768"
// Retrieval info: CONSTANT: LPM_SHOWAHEAD STRING "ON"
// Retrieval info: CONSTANT: LPM_TYPE STRING "dcfifo"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "8"
// Retrieval info: CONSTANT: LPM_WIDTHU NUMERIC "16"
// Retrieval info: CONSTANT: OVERFLOW_CHECKING STRING "ON"
// Retrieval info: CONSTANT: RDSYNC_DELAYPIPE NUMERIC "5"
// Retrieval info: CONSTANT: UNDERFLOW_CHECKING STRING "ON"
// Retrieval info: CONSTANT: USE_EAB STRING "ON"
// Retrieval info: CONSTANT: WRSYNC_DELAYPIPE NUMERIC "5"
// Retrieval info: USED_PORT: data 0 0 8 0 INPUT NODEFVAL "data[7..0]"
// Retrieval info: USED_PORT: q 0 0 8 0 OUTPUT NODEFVAL "q[7..0]"
// Retrieval info: USED_PORT: rdclk 0 0 0 0 INPUT NODEFVAL "rdclk"
// Retrieval info: USED_PORT: rdempty 0 0 0 0 OUTPUT NODEFVAL "rdempty"
// Retrieval info: USED_PORT: rdreq 0 0 0 0 INPUT NODEFVAL "rdreq"
// Retrieval info: USED_PORT: wrclk 0 0 0 0 INPUT NODEFVAL "wrclk"
// Retrieval info: USED_PORT: wrfull 0 0 0 0 OUTPUT NODEFVAL "wrfull"
// Retrieval info: USED_PORT: wrreq 0 0 0 0 INPUT NODEFVAL "wrreq"
// Retrieval info: USED_PORT: wrusedw 0 0 16 0 OUTPUT NODEFVAL "wrusedw[15..0]"
// Retrieval info: CONNECT: @data 0 0 8 0 data 0 0 8 0
// Retrieval info: CONNECT: @rdclk 0 0 0 0 rdclk 0 0 0 0
// Retrieval info: CONNECT: @rdreq 0 0 0 0 rdreq 0 0 0 0
// Retrieval info: CONNECT: @wrclk 0 0 0 0 wrclk 0 0 0 0
// Retrieval info: CONNECT: @wrreq 0 0 0 0 wrreq 0 0 0 0
// Retrieval info: CONNECT: q 0 0 8 0 @q 0 0 8 0
// Retrieval info: CONNECT: rdempty 0 0 0 0 @rdempty 0 0 0 0
// Retrieval info: CONNECT: wrfull 0 0 0 0 @wrfull 0 0 0 0
// Retrieval info: CONNECT: wrusedw 0 0 16 0 @wrusedw 0 0 16 0
// Retrieval info: GEN_FILE: TYPE_NORMAL FIFO.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL FIFO.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL FIFO.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL FIFO.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL FIFO_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL FIFO_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL FIFO_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
