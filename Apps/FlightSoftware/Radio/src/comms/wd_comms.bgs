# Handles simple GPIO commanding and receiving with the WD over the WD_INT
# (Radio->WD) and RADIO_KICK (WD->Radio) pins, which for some reason weren't
# chosen to be INT or CN capable pins but just plain GPIO (so we have to poll
# them).
const WD_INT_PORT = 4
const WD_INT_PIN_MASK = $0004

const RADIO_KICK_PORT = 4
const RADIO_KICK_PIN_MASK = $0008

# Tell the WD that WiFi is Connected:
export procedure WD_WIFI_CONNECTED()
    call hardware_io_port_write(WD_INT_PORT, WD_INT_PIN_MASK, $FFFF)
end

# Tell the WD that WiFi is Not Connected:
export procedure WD_WIFI_NOT_CONNECTED()
    call hardware_io_port_write(WD_INT_PORT, WD_INT_PIN_MASK, $0000)
end

# Make sure we start with the pins in the right directions:
event system_boot(major,minor,patch,build,bootloader,tcpip,hw)
    # WD_INT (RE2) is output, default latch LOW (not connected):
    call hardware_io_port_config_direction(WD_INT_PORT, WD_INT_PIN_MASK, $0000)
    # RADIO_KICK (RE3) is input:
    call hardware_io_port_config_direction(RADIO_KICK_PORT, RADIO_KICK_PIN_MASK, $FFFF)

    # Tell WD that we start disconnected:
    call WD_WIFI_NOT_CONNECTED()
end