<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_test_i_s_f_exceptions_8java" kind="file" language="Java">
    <compoundname>TestISFExceptions.java</compoundname>
    <innerclass refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions" prot="public">gov::nasa::jpl::componentaction::TestISFExceptions</innerclass>
    <innernamespace refid="namespacegov_1_1nasa_1_1jpl_1_1componentaction">gov::nasa::jpl::componentaction</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">package<sp/></highlight><highlight class="normal">gov.nasa.jpl.componentaction;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.File;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.io.IOException;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.ArrayList;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Arrays;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collection;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.List;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>junit.framework.Test;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>junit.framework.TestSuite;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.nomagic.magicdraw.core.Application;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.nomagic.magicdraw.core.Project;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.nomagic.magicdraw.tests.MagicDrawTestCase;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.nomagic.uml2.ext.jmi.helpers.StereotypesHelper;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.nomagic.uml2.ext.magicdraw.classes.mdkernel.Element;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>com.nomagic.uml2.ext.magicdraw.mdprofiles.Stereotype;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions" kindref="compound">TestISFExceptions</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>MagicDrawTestCase<sp/>{</highlight></codeline>
<codeline lineno="41" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a58398ce7adf095db93c3f742c122cebe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a58398ce7adf095db93c3f742c122cebe" kindref="member">pluginDir</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ae737cee5df4d5c6e1acfbcf6bf86640a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ae737cee5df4d5c6e1acfbcf6bf86640a" kindref="member">main</ref><sp/>(String[]<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>junit.textui.TestRunner.run(<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a7b511ad65c599eddc43801be0007dff9" kindref="member">suite</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(String<sp/>testMethodToRun,<sp/>String<sp/>testName)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(testMethodToRun,<sp/>testName);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pluginDir<sp/>=<sp/>System.getProperty(</highlight><highlight class="stringliteral">&quot;user.dir&quot;</highlight><highlight class="normal">)+<sp/></highlight><highlight class="stringliteral">&quot;/tests&quot;</highlight><highlight class="normal">;</highlight><highlight class="comment">//System.getenv(&quot;PLUGINDIR&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a1bbebe64ffc2fbc62ac0a53d81f9eff9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a1bbebe64ffc2fbc62ac0a53d81f9eff9" kindref="member">TestISFExceptions</ref>(String<sp/>testMethodToRun)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(testMethodToRun);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pluginDir<sp/>=<sp/>System.getProperty(</highlight><highlight class="stringliteral">&quot;user.dir&quot;</highlight><highlight class="normal">)+<sp/></highlight><highlight class="stringliteral">&quot;/tests&quot;</highlight><highlight class="normal">;</highlight><highlight class="comment">//System.getenv(&quot;PLUGINDIR&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="58" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ab42c13ec03ae7311cbb70aebb19f1993" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ab42c13ec03ae7311cbb70aebb19f1993" kindref="member">setUpTest</ref>()<sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.setUpTest();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setSkipMemoryTest(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a22a4b8bb0835cea595db749fe49e45f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a22a4b8bb0835cea595db749fe49e45f7" kindref="member">testComponentNoConnections</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testComponentNoConnections.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>log<sp/>=<sp/>Application.getInstance().getGUILog().getLoggedMessages();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(log.contains(</highlight><highlight class="stringliteral">&quot;has<sp/>no<sp/>connections&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a5891290589ab79246e72f2f2c11eb58f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a5891290589ab79246e72f2f2c11eb58f" kindref="member">testPortException</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testPortException.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_project" kindref="compound">ProcessISFProject</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_project_1a9d6c05277ad0eb25afc137a26f0d54af" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(RuntimeException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(e.getMessage().contains(</highlight><highlight class="stringliteral">&quot;has<sp/>no<sp/>data<sp/>type&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail(</highlight><highlight class="stringliteral">&quot;PortException<sp/>expected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a8d966ccb25f6ce68fe191fc191e74a72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a8d966ccb25f6ce68fe191fc191e74a72" kindref="member">testMismatchedType</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testMismatchedType.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(RuntimeException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(e.getMessage().contains(</highlight><highlight class="stringliteral">&quot;different<sp/>data<sp/>types&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail(</highlight><highlight class="stringliteral">&quot;ConnectorException<sp/>expected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a5de543a8448c84ff0657d86bed6e7552" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a5de543a8448c84ff0657d86bed6e7552" kindref="member">testMismatchedDirections</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testMismatchedDirections.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(RuntimeException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(e.getMessage().contains(</highlight><highlight class="stringliteral">&quot;invalid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail(</highlight><highlight class="stringliteral">&quot;ConnectorException<sp/>expected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4d619398ce17a8297fd7cd473c83f31b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4d619398ce17a8297fd7cd473c83f31b" kindref="member">testDoubleMultiplicity</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testDoubleMultiplicity.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(RuntimeException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(e.getMessage().contains(</highlight><highlight class="stringliteral">&quot;same<sp/>multiplicity&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail(</highlight><highlight class="stringliteral">&quot;ConnectorException<sp/>expected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1acc5fe00c626247904aed33ac438a8c12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1acc5fe00c626247904aed33ac438a8c12" kindref="member">testPassiveComponent</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testPassiveComponent.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_project" kindref="compound">ProcessISFProject</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_project_1a9d6c05277ad0eb25afc137a26f0d54af" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(RuntimeException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(e.getMessage().contains(</highlight><highlight class="stringliteral">&quot;Passive<sp/>component&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail(</highlight><highlight class="stringliteral">&quot;ComponentException<sp/>expected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ae1c8d7b9584b42e28ad1ca86533ce3ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component" kindref="compound">ISFComponent</ref><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ae1c8d7b9584b42e28ad1ca86533ce3ca" kindref="member">getCompForTesting</ref>(String<sp/>projectName,<sp/>String<sp/>compType){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(projectName);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Element&gt;<sp/>compList<sp/>=<sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1af35619f365ce0691932aea823b114b1b" kindref="member">getElementsOfStereotype</ref>(compType,<sp/>proj);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(!compList.isEmpty());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Element<sp/>el<sp/>=<sp/>compList.get(0);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;String&gt;<sp/>portTypeNames<sp/>=<sp/>Arrays.asList(</highlight><highlight class="stringliteral">&quot;sync_input&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;async_input&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;guarded_input&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component" kindref="compound">ISFComponent</ref><sp/>thisComp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component" kindref="compound">ISFComponent</ref>(el);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisComp.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component_1ac9317d03a2dcd968d3fa39f5a92bd350" kindref="member">setStereoType</ref>(compType);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collection&lt;Element&gt;<sp/>owned<sp/>=<sp/>el.getOwnedElement();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(Element<sp/>oe<sp/>:<sp/>owned)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>portStereotype<sp/>=<sp/>thisComp.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component_1a27979d4dedfc260f3e44655824cf3d3e" kindref="member">getPortStereotype</ref>(oe);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portTypeNames.contains(portStereotype))<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisComp.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component_1a092093642fbaab5c3cf710bef9af6e62" kindref="member">newAddPort</ref>(oe);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_port_exception" kindref="compound">PortException</ref><sp/>pe)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail(pe.getMessage());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thisComp;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a3bf516ca50c3b2cda5a56ad604b972c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a3bf516ca50c3b2cda5a56ad604b972c8" kindref="member">testActiveComponent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component" kindref="compound">ISFComponent</ref><sp/>thisComp<sp/>=<sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ae1c8d7b9584b42e28ad1ca86533ce3ca" kindref="member">getCompForTesting</ref>(</highlight><highlight class="stringliteral">&quot;tests/testActiveComponent.mdzip&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertFalse(thisComp.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component_1a73ef1f98a84fdbb1e835fcdecbccb18c" kindref="member">isValid</ref>(</highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;async_input&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ad1e116416bca3f5a487301062a0591d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ad1e116416bca3f5a487301062a0591d3" kindref="member">testQueuedComponentAsync</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component" kindref="compound">ISFComponent</ref><sp/>thisComp<sp/>=<sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ae1c8d7b9584b42e28ad1ca86533ce3ca" kindref="member">getCompForTesting</ref>(</highlight><highlight class="stringliteral">&quot;tests/testQueuedComponentAsync.mdzip&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;queued&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertFalse(thisComp.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component_1a73ef1f98a84fdbb1e835fcdecbccb18c" kindref="member">isValid</ref>(</highlight><highlight class="stringliteral">&quot;queued&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;async_input&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a9fca700d2d507710129966a5bfcc1760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a9fca700d2d507710129966a5bfcc1760" kindref="member">testQueuedComponentSync</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component" kindref="compound">ISFComponent</ref><sp/>thisComp<sp/>=<sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ae1c8d7b9584b42e28ad1ca86533ce3ca" kindref="member">getCompForTesting</ref>(</highlight><highlight class="stringliteral">&quot;tests/testQueuedComponentSync.mdzip&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;queued&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertFalse(thisComp.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_i_s_f_component_1a73ef1f98a84fdbb1e835fcdecbccb18c" kindref="member">isValid</ref>(</highlight><highlight class="stringliteral">&quot;queued&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sync_input&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ad21ccf724a4a4e771c19316fede97bbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1ad21ccf724a4a4e771c19316fede97bbc" kindref="member">testProcessTopology</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testGenerateTopology.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>File<sp/>generated<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/AutoXML/top1TopologyAppAi.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(generated.exists());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4be30f1c1add433a6e0264e4fdd52d67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4be30f1c1add433a6e0264e4fdd52d67" kindref="member">testAbout</ref>()<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_isf_about" kindref="compound">IsfAbout</ref><sp/>about<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_isf_about" kindref="compound">IsfAbout</ref>(null,</highlight><highlight class="stringliteral">&quot;About&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>about.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_isf_about_1ae970fc57832b28e4edcb23ed3387c625" kindref="member">actionPerformed</ref>(null);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a96983744e45ebb0eeb6f6b290a53143e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a96983744e45ebb0eeb6f6b290a53143e" kindref="member">testProcessProject</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testAllCorrect.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_project" kindref="compound">ProcessISFProject</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_project_1a9d6c05277ad0eb25afc137a26f0d54af" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a57458fdc1a323b3bf64a614bc56dfad4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a57458fdc1a323b3bf64a614bc56dfad4" kindref="member">testNoSource</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testNoSource.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(RuntimeException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(e.getMessage().contains(</highlight><highlight class="stringliteral">&quot;top1<sp/>has<sp/>an<sp/>end<sp/>with<sp/>a<sp/>null<sp/>role&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail(</highlight><highlight class="stringliteral">&quot;ComponentException<sp/>expected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a3084286e5b2c843cf0db1264ba153e5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a3084286e5b2c843cf0db1264ba153e5f" kindref="member">testNoTarget</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testNoTarget.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(RuntimeException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(e.getMessage().contains(</highlight><highlight class="stringliteral">&quot;top1<sp/>has<sp/>an<sp/>end<sp/>with<sp/>a<sp/>null<sp/>role&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fail(</highlight><highlight class="stringliteral">&quot;ComponentException<sp/>expected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a23d3a624a3ea242a2a483bc313c4618e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a23d3a624a3ea242a2a483bc313c4618e" kindref="member">testMultipleSubsystems</ref>()<sp/>throws<sp/>IOException<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openProject(</highlight><highlight class="stringliteral">&quot;tests/testMultipleSubsystems.mdzip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Project<sp/>proj<sp/>=<sp/>Application.getInstance().getProject();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology" kindref="compound">ProcessISFTopology</ref>.<ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_process_i_s_f_topology_1abb9202de6de6fa7eeb30b24b9a2aba3c" kindref="member">process</ref>(proj,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>File<sp/>generated<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>File(pluginDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/AutoXML/IBD2TopologyAppAi.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertTrue(generated.exists());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a011c33b8ab4a346755c7602fbc15c982" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a011c33b8ab4a346755c7602fbc15c982" kindref="member">testCommandLine</ref>()<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override</highlight></codeline>
<codeline lineno="284" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a7d2891db34efd3fb1eb0eb1b33619352" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a7d2891db34efd3fb1eb0eb1b33619352" kindref="member">tearDownTest</ref>()<sp/>throws<sp/>Exception<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super.tearDownTest();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closeAllProjects();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a7b511ad65c599eddc43801be0007dff9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Test<sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a7b511ad65c599eddc43801be0007dff9" kindref="member">suite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestSuite<sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a7b511ad65c599eddc43801be0007dff9" kindref="member">suite</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TestSuite();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testMultipleSubsystems&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testPortException&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testMismatchedType&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testMismatchedDirections&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testDoubleMultiplicity&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testPassiveComponent&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testActiveComponent&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testQueuedComponentAsync&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testQueuedComponentSync&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testProcessTopology&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testComponentNoConnections&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testAbout&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testProcessProject&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testNoSource&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a4fe843f05cda55dd287e486fa56da463" kindref="member">TestISFExceptions</ref>(</highlight><highlight class="stringliteral">&quot;testNoTarget&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1a7b511ad65c599eddc43801be0007dff9" kindref="member">suite</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316" refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1af35619f365ce0691932aea823b114b1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;Element&gt;<sp/><ref refid="classgov_1_1nasa_1_1jpl_1_1componentaction_1_1_test_i_s_f_exceptions_1af35619f365ce0691932aea823b114b1b" kindref="member">getElementsOfStereotype</ref>(String<sp/>stereotype,<sp/>Project<sp/>project)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stereotype<sp/>st;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Element&gt;<sp/>elementList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Element&gt;();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/>StereotypesHelper.getStereotype(project,<sp/>stereotype);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementList<sp/>=<sp/>StereotypesHelper.getExtendedElements(st);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementList.isEmpty())</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight><highlight class="stringliteral">&quot;Stereotype:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>stereotype</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>list<sp/>is<sp/>EMPTY?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight><highlight class="stringliteral">&quot;==&gt;<sp/>Warning<sp/>no<sp/>stereotype:&quot;</highlight><highlight class="normal"><sp/>+<sp/>stereotype);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Application.getInstance().getGUILog()</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.log(</highlight><highlight class="stringliteral">&quot;==&gt;<sp/>Warning<sp/>no<sp/>stereotype:&quot;</highlight><highlight class="normal"><sp/>+<sp/>stereotype);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elementList;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/gov/nasa/jpl/componentaction/TestISFExceptions.java"/>
  </compounddef>
</doxygen>
