<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="file:../xml/ISF_Component_Schema.rnc" type="compact"?>

<component name="GroundInterface" kind="passive" namespace="CubeRover" modeler="true">
    <import_port_type>Fw/Buffer/BufferSendPortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
    <import_port_type>Fw/Com/ComPortAi.xml</import_port_type>
    <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
    <import_port_type>Fw/Buffer/BufferGetPortAi.xml</import_port_type>
    <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
    <import_port_type>CubeRover/CubeRoverPorts/FileDownlink/FileDownlinkPortAi.xml</import_port_type>

    <comment>
        Validates inbound/outbound FSW packets and routes them to the correct endpoint. For uplinked
        packets, they are received/validated  synchronously and immediately queued on to the 
        CommandDispatcher message queue to be processed. Downlink items on the otherhand are buffered
        internally to pack multiple downlink objects in to fewer packets. This requires downlink
        handlers be guarded to ensure thread safety of the buffer. This component only checks packets
        at the FSW packet header level, all UDP framing needs to occur outside of this component.
    </comment>

    <ports>

        <!-- Input ports -->
        <port name="schedIn" data_type="Svc::Sched" kind="guarded_input" max_number="1">
            <comment>Clock from RateGroupLowFreq. Sends a name or message.
            </comment>
        </port>
        
        <port name="tlmDownlink" data_type="Fw::Com"  kind="guarded_input"    max_number="1">
            <comment>
                TlmChannel sends GroundInterface telemetry items to downlink. The GroundInterface component will serialize the
                data in to application level blocks which is sent to UDP sender to be fragmented by MTU and transport.
            </comment>
        </port>
        
        <port name="logDirectDownlink" data_type="Fw::Com"  kind="guarded_input"    max_number="1">
            <comment>
                ActiveLogger sends GroundInterface pre-serialized log items to downlink, if they pass its filter criteria.
                The GroundInterface component will serialize the data in to application level blocks which is sent to UDP sender for framing, MTU fragmentation, and transport..
            </comment>
        </port>
            
        <port name="logDownlink" data_type="Fw::Log"  kind="guarded_input"    max_number="1">
            <comment>
                ComLogger sends GroundInterface log items pulled from the filesystem to downlink. The GroundInterface component will serialize the
                data in to application level blocks which is sent to UDP sender for framing, MTU fragmentation, and transport.
            </comment>
        </port>
            
        <port name="appDownlink" data_type="CubeRover::FileDownlink"  kind="guarded_input"    max_number="2">
            <comment>
                Other application components request a buffer to hand off a downlinked packet to be downlinked.
                0: Camera   1: UWB
            </comment>
        </port>
            
        <port name="cmdUplink" data_type="Fw::BufferSend"  kind="sync_input"    max_number="2">
            <comment>
                GroundInterface validates and forwards deserialized a uplinked command to CmdDispatcher.
                0: Lander Serial (WatchDog RS422)  1: WF121 (NetworkManager)
            </comment>
        </port>
            
        <!-- Output ports -->
        <port name="cmdDispatch" data_type="Fw::Com"  kind="output"    max_number="1">
            <comment>
                GroundInterface forwards a validated uplinked command to CmdDispatcher. Commands are buffered by the CommandDispatcher's message queue.
            </comment>
        </port>
            
        <port name="downlinkBufferSend" data_type="Fw::BufferSend"  kind="output"    max_number="2">
            <comment>
                GroundInterface sends buffer of data to be downlinked to UDP sender for framing, MTU fragmentation, and transport.
                0: Lander Serial (WatchDog RS422)  1: WF121 (NetworkManager)
            </comment>
        </port>

    </ports>


    <!-- TELEMETRY -->

    <telemetry>
        <channel id="0" name="GI_UplinkSeqNum" data_type="U8">
            <comment>Increment the uplink sequence number every packet</comment>
        </channel>
        <channel id="1" name="GI_DownlinkSeqNum" data_type="U8">
            <comment>Update the downlink sequence number every packet</comment>
        </channel>
        <channel id="2" name="GI_PacketsReceived" data_type="U32">
            <comment>Number of packets received from link to F'</comment>
        </channel>
        <channel id="3" name="GI_PacketsTransmitted" data_type="U32">
            <comment>Number of packets transmitted from F' to link</comment>
        </channel>
        <channel id="4" name="GI_TlmItemsReceived" data_type="U32">
            <comment>Number of telemetry items received and queued</comment>
        </channel>
        <channel id="5" name="GI_TlmItemsDownlinked" data_type="U32">
            <comment>Number of telemetry items downlinked</comment>
        </channel>
        <channel id="6" name="GI_LogsReceived" data_type="U32">
            <comment>Number of logs received and queued</comment>
        </channel>
        <channel id="7" name="GI_LogsDownlinked" data_type="U32">
            <comment>Number of logs downlinked</comment>
        </channel>
        <channel id="8" name="GI_CmdsUplinked" data_type="U32">
            <comment>Number of commands uplinked.</comment>
        </channel>
        <channel id="9" name="GI_CmdsSent" data_type="U32">
            <comment>Commands sent to Command Dispatcher queue.</comment>
        </channel>
        <channel id="10" name="GI_UplinkPktErrs" data_type="U32">
            <comment>Number of uplinked packets with errors</comment>
        </channel>
        <channel id="11" name="GI_AppBytesReceived" data_type="U32">
            <comment>Number of bytes from packets from components not TlmChan, ComLogger received</comment>
        </channel>
        <channel id="12" name="GI_AppBytesDownlinked" data_type="U32">
            <comment>Number of bytes from packets from components not TlmChan, ComLogger downlinked</comment>
        </channel>
    </telemetry>

        
    <!-- LOGS -->

    <events>
        <event id="0" name="GI_UplinkedPacketError" severity="WARNING_HI" format_string="Error with uplinked packet: %s. Expected: %d. Got: %d.">
            <comment>
                Error validating uplinked packet. Expected field is only logged for MISMATCHED_LENGTH and OUT_OF_SEQUENCE.
            </comment>
            <args>
                <arg name="errorType" type="ENUM">
                    <enum name="uplinkedPacketError">
                        <item name="MISMATCHED_LENGTH" />
                        <item name="OUT_OF_SEQUENCE" />
                        <item name="BAD_CHECKSUM" />
                        <item name="INCORRECT_TYPE" />
                    </enum>
                </arg>
                <arg name="expected" type="U16">
                </arg>
                <arg name="got" type="U16">
                </arg>
            </args>
        </event>
        <event id="1" name="GI_UplinkedBadMagic" severity="WARNING_LO" format_string="Bad magic received: 0x%04X">
            <comment>
                Error validating uplinked packet. The first payload in the variable length payload section had an incorrect magic.
            </comment>
            <args>
            	<arg name="magicReceived" type="U32" />
        	</args>
        </event>
        <event id="2" name="GI_CommandReceived" severity="ACTIVITY_HI" format_string="Command Received with seq_num=%d, checksum=%d.">
            <comment>A command packet was received. One command per packet (and datagram) is strictly enforced</comment>
            <args>
                <arg name="seq" type="U8"></arg>
                <arg name="checksum" type="U16"></arg>
            </args>
        </event>
        <event id="3" name="GI_DownlinkedPacket" severity="ACTIVITY_LO" format_string="Downlinked Packet #%d (checksum=%d, %dB).">
            <comment>A packet sent to UDP receiver for downlink</comment>
            <args>
                <arg name="seq" type="U8"></arg>
                <arg name="checksum" type="U16"></arg>
                <arg name="length" type="U16"></arg>
            </args>
        </event>
        <event id="4" name="GI_DownlinkedItem" severity="DIAGNOSTIC" format_string="Item Downlinked with seq_num=%d from %s.">
            <comment>An item was added to the packet for downlink. This will be basically never used since using it would mean adding 1 downlink item for every item downlinked (which would run away).</comment>
            <args>
                <arg name="seq" type="U8"></arg>
                <arg name="from" type="ENUM">
                    <enum name="downlinkPacketType">
                        <item name="DownlinkTelemetry" />
                        <item name="DownlinkLog" />
                        <item name="DownlinkFile" />
                    </enum>
                </arg>
            </args>
        </event>
        <event id="0xA0" name="BroughtToYouBy" severity="ACTIVITY_LO" format_string = "Made Possible By: %s." >
           <comment>
            Thank you to an Iris member / donor stored on the Rover.
           </comment>
           <args>
                <arg name="name" type="string" size="50">
                    <comment>Name of an Iris member / donor stored on the Rover.</comment>
                </arg>
           </args>
        </event>
        <event id="0xA1" name="SpecialMessage" severity="ACTIVITY_LO" format_string = "%s says: %s" >
           <comment>
            Message from an Iris member / donor.
           </comment>
           <args>
                <arg name="name" type="string" size="50">
                    <comment>Name of an Iris member / donor stored on the Rover who sent a message.</comment>
                </arg>
                <arg name="message" type="string" size="100">
                    <comment>Their special message.</comment>
                </arg>
           </args>
        </event>
    </events>
    
    <commands>
        <command kind="sync" opcode="0x0" mnemonic="Set_Primary_Interface">
            <comment>
                Sets the primary interface. 
            </comment>
            <args>
                <arg name="primary_interface" type="ENUM">
                    <enum name="PrimaryInterface">
                        <item name="WATCHDOG" comment="Watchdog wired interface (RS422). Matches WatchdogInterface component attached to port 0." />
                        <item name="WF121" comment="WF121 wireless interface (WiFi). Matches NetworkManager component attached to port 1." />
                    </enum>
                </arg>
            </args>
        </command>
        <command kind="sync" opcode="0x1" mnemonic="Set_GroundInterface_Telemetry_Level">
            <comment>
                Sets the telemetry level of this component
            </comment>
            <args>
                <arg name="telemetry_level" type="ENUM">
                    <enum name="TelemetryLevel">
                        <item name="CRITICAL" comment="Emit CRITICAL telemetry items only." />
                        <item name="IMPORTANT" comment="Emit CRITICAL and important telemetry items only." />
                        <item name="ALL" comment="Emit all telemetry items." />
                    </enum>
                </arg>
            </args>
        </command>
        <command kind="sync" opcode="0xA0" mnemonic="RollCredits">
        	<comment>
        		Turn ON/OFF whether names and messages should be downlinked. Default is ON.
    		</comment>
    		<args>
    			<arg name="on" type="bool"></arg>
			</args>
		</command>
		<command kind="sync" opcode="0xA1" mnemonic="Set_NameAndMessage_Period">
			<comment>
				Set how many seconds (minimum) should occur between each name/message downlink. Min is 1.
			</comment>
			<args>
				<arg name="seconds" type="U16"></arg>
			</args>
		</command>
    </commands>
            
</component>
