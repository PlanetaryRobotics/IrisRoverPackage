<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="file:../xml/ISF_Component_Schema.rnc" type="compact"?>

<component name="MotorControl" kind="passive" namespace="CubeRover">
    <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
    <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>	
    <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
    <import_port_type>Svc/Ping/PingPortAi.xml</import_port_type>
    <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
    <import_port_type>CubeRover/CubeRoverPorts/MotorData/MotorDataPortAi.xml</import_port_type>
    <import_port_type>CubeRover/CubeRoverPorts/MotorCommand/MotorCommandPortAi.xml</import_port_type>
    <import_port_type>CubeRover/CubeRoverPorts/WatchdogResetRequest/WatchdogResetRequestPortAi.xml</import_port_type>

    <!-- PORTS -->
    <ports>

        <!-- Scheduler port -->
        <!-- TODO: implement state machine -->
        <!-- <port name="schedIn" data_type="Svc::Sched" kind="sync_input" max_number="1"></port> -->

        <!-- Ping ports -->
        <port name="PingIn" data_type="Svc::Ping" kind="sync_input" max_number="1"></port>

        <port name="PingOut" data_type="Svc::Ping" kind="output" max_number="1"></port>

        <!-- Motor Data port -->
        <!-- TODO: remove obsolete ? -->
        <port name="motorDataOut" data_type="CubeRoverPorts::MotorData" kind="output" max_number="1"></port>

        <!-- Motor Command port -->
        <!-- TODO: remove obsolete ? -->
        <!--        do we maybe want to keep this for if we lose WiFi we can go back 5 steps?? -->
        <port name="motorCommandIn" data_type="CubeRoverPorts::MotorCommand" kind="sync_input" max_number="1"></port>

        <!-- Watchdog Reset port -->
        <port name="watchdogResetRequest" data_type="CubeRoverPorts::WatchdogResetRequest" kind="output" max_number="1"></port>

        <port name="schedIn" data_type="Svc::Sched" kind="sync_input" max_number="1">
            <comment>Drive state machine.
            </comment>
        </port>

        <!-- Standard F prime ports -->
        <port name="Log" data_type="Fw::Log"  kind="output" role="LogEvent"    max_number="1">
        </port>

        <port name="LogText" data_type="Fw::LogText"  kind="output" role="LogTextEvent"    max_number="1">
        </port>

        <port name="Time" data_type="Time"  kind="output" role="TimeGet"    max_number="1">
        </port>

    </ports>

    <!-- COMMANDS -->
    <commands>

        <!-- READ COMMANDS                          opcodes 0x00 to 0x0F -->
        <!-- Update Telemetry -->
        <command kind="guarded" opcode="0x00" mnemonic="MC_UpdateTelemetry">
            <comment>Forces a telemetry update from the motors:
                REG_I2C_ADDRESS         = 0,    // RO - uint8   1 Byte
                REG_TARGET_POSITION     = 1,    // RW - int32   4 Bytes
                REG_TARGET_SPEED        = 2,    // RW - uint8   1 Byte
                REG_CURRENT_POSITION    = 3,    // RO - int32   4 Bytes
                REG_CURRENT_SPEED       = 4,    // RO - uint8   1 Bytes
                REG_MOTOR_CURRENT       = 5,    // RO - int32   4 Bytes
                REG_P_CURRENT           = 6,    // RW - uint16  2 Bytes
                REG_I_CURRENT           = 7,    // RW - uint16  2 Bytes
                REG_P_SPEED             = 8,    // RW - uint16  2 Bytes
                REG_I_SPEED             = 9,    // RW - uint16  2 Bytes
                REG_ACC_RATE            = 10,   // RW - uint16  2 Bytes
                REG_DEC_RATE            = 11,   // RW - uint16  2 Bytes
                REG_MC_CTRL             = 12,   // RW - uint8   1 Byte
                REG_MC_STATUS           = 13,   // RO - uint8   1 Byte
                REG_MC_FAULT            = 14,   // RO - uint8   1 Byte
            </comment>
        </command>

        <!-- SET PARAMETER COMMANDS                 opcodes 0x10 to 0x1F -->
        <!-- Set All Params -->
        <command kind="guarded" opcode="0x10" mnemonic="MC_SetAllParams">
            <comment>Sets ALL RW params for EVERY motor
                TargetDir : 0 Positive Position, 1 Negative Position
                REG_TARGET_POSITION     = 1,    // int32
                REG_TARGET_SPEED        = 2,    // uint8
                REG_P_CURRENT           = 6,    // uint16
                REG_I_CURRENT           = 7,    // uint16
                REG_P_SPEED             = 8,    // uint16
                REG_I_SPEED             = 9,    // uint16
                ( REG_MC_CTRL = MC_CMD_UPDATE_CONFIG )
            </comment>
            <args>
                <!-- Motor A Params -->
                <arg name="MotorA_TargetDir" type="U8"/>
                <arg name="MotorA_TargetPosition" type="U32"/>
                <arg name="MotorA_TargetSpeed" type="U8"/>
                <arg name="MotorA_Current_P_Val" type="U16"/>
                <arg name="MotorA_Current_I_Val" type="U16"/>
                <arg name="MotorA_Speed_P_Val" type="U16"/>
                <arg name="MotorA_Speed_I_Val" type="U16"/>
                <arg name="MotorA_Accel_Rate" type="U16"/>
                <arg name="MotorA_Decel_Rate" type="U16"/>
                <!-- Motor B Params -->
                <arg name="MotorB_TargetDir" type="U8"/>
                <arg name="MotorB_TargetPosition" type="U32"/>
                <arg name="MotorB_TargetSpeed" type="U8"/>
                <arg name="MotorB_Current_P_Val" type="U16"/>
                <arg name="MotorB_Current_I_Val" type="U16"/>
                <arg name="MotorB_Speed_P_Val" type="U16"/>
                <arg name="MotorB_Speed_I_Val" type="U16"/>
                <arg name="MotorB_Accel_Rate" type="U16"/>
                <arg name="MotorB_Decel_Rate" type="U16"/>
                <!-- Motor C Params -->
                <arg name="MotorC_TargetDir" type="U8"/>
                <arg name="MotorC_TargetPosition" type="U32"/>
                <arg name="MotorC_TargetSpeed" type="U8"/>
                <arg name="MotorC_Current_P_Val" type="U16"/>
                <arg name="MotorC_Current_I_Val" type="U16"/>
                <arg name="MotorC_Speed_P_Val" type="U16"/>
                <arg name="MotorC_Speed_I_Val" type="U16"/>
                <arg name="MotorC_Accel_Rate" type="U16"/>
                <arg name="MotorC_Decel_Rate" type="U16"/>
                <!-- Motor D Params -->
                <arg name="MotorD_TargetDir" type="U8"/>
                <arg name="MotorD_TargetPosition" type="U32"/>
                <arg name="MotorD_TargetSpeed" type="U8"/>
                <arg name="MotorD_Current_P_Val" type="U16"/>
                <arg name="MotorD_Current_I_Val" type="U16"/>
                <arg name="MotorD_Speed_P_Val" type="U16"/>
                <arg name="MotorD_Speed_I_Val" type="U16"/>
                <arg name="MotorD_Accel_Rate" type="U16"/>
                <arg name="MotorD_Decel_Rate" type="U16"/>
            </args>
        </command>
        <!-- Set Parameter -->
        <command kind="guarded" opcode="0x11" mnemonic="MC_SetParameter">
            <comment>Update single parameter of selected motor controller(s).
            </comment>
            <args>
                <arg name="Motor_ID" type="U8">
                    <comment>Bitmask of motors to update.
                        MotorA    : 0x01
                        MotorB    : 0x02
                        MotorC    : 0x04
                        MotorD    : 0x08
                        (eg. AllMotors = MotorA + MotorB + MotorC + MotorD = 0x0F)
                    </comment>
                </arg>
                <arg name="Param_RegAddr" type="U8">
                    <comment>The register address of the parameter to set.
                        Target_Dir              = 16    // bool
                        REG_TARGET_POSITION     = 1,    // int32
                        REG_TARGET_SPEED        = 2,    // uint8
                        REG_P_CURRENT           = 6,    // uint16
                        REG_I_CURRENT           = 7,    // uint16
                        REG_P_SPEED             = 8,    // uint16
                        REG_I_SPEED             = 9,    // uint16
                        REG_ACC_RATE            = 10,   // uint16
                        REG_DEC_RATE            = 11,   // uint16
                        ( REG_MC_CTRL = MC_CMD_UPDATE_CONFIG )
                    </comment>
                </arg>
                <arg name="Param_NewValue" type="U32">
                    <comment> The new value of the parameter. 
                        (Registers will be type-cast from U32)
                    </comment>
                </arg>
            </args>
        </command>
        <!-- <command kind="guarded" opcode="0x12" mnemonic="MC_StallDetection">
            <args>
                <arg name="Motor_ID" type="U8">
                    <comment>The motor id from 0 - 4 Motor 0 is all motors, Motorsss 1 - 4 are FL, FR, BL, BR </comment>
                </arg>
                <arg name="Value" type="U8">
                    <comment>0x00 is disabled, 0xFF is enabled </comment>
                </arg>
            </args>
        </command> -->

        <!-- MOVEMENT COMMANDS                      opcodes 0x20 to 0x2F -->
        <!-- Spin Motor -->
        <command kind="guarded" opcode="0x20" mnemonic="MC_Spin">
            <comment> The new value of the parameter.
            </comment>
            <args>
                <arg name="Motor_ID" type="U8">
                    <comment>Bitmask of motors to update.
                        MotorA : 0x01
                        MotorB : 0x02
                        MotorC : 0x04
                        MotorD : 0x08
                        (eg. "Left"-side motors = MotorA + MotorD = 0x09
                        and "Right"-side motors = MotorB + MotorC = 0x06)
                    </comment>
                </arg>
                <arg name="Dir" type="U8">
                    <comment>Direction motor movement
                        Positive Ticks : 0 , Negative Ticks : 1
                    </comment>
                </arg>
                <arg name="Raw_Ticks" type="U32">
                    <comment>Distance to spin in ticks.
                        (Default = 20000)
                    </comment>
                </arg>
          </args>
        </command>
        <!-- Spin Configured -->
        <command kind="guarded" opcode="0x21" mnemonic="MC_Spin_Configured">
            <comment> The new value of the parameter.
            </comment>
            <args>
                <arg name="Motor_ID" type="U8">
                    <comment>Bitmask of motors to update.
                        MotorA : 0x01
                        MotorB : 0x02
                        MotorC : 0x04
                        MotorD : 0x08
                        (eg. "Left"-side motors = MotorA + MotorD = 0x09
                        and "Right"-side motors = MotorB + MotorC = 0x06)
                    </comment>
                </arg>
                <arg name="Dir" type="U8">
                    <comment>Bitmask of direction of each motor
                        Positive Ticks : 0 , Negative Ticks : 1
                    </comment>
                </arg>
                <arg name="Raw_Ticks" type="U32">
                    <comment>Distance to spin in ticks.
                      (Default = 20000)
                    </comment>
                </arg>
                <arg name="Percent_Speed" type="U8">
                    <comment>Speed set by percent of MAX_SPEED.
                      (Default = 100)
                    </comment>
                </arg>
            </args>
        </command>
        <!-- Spin Configured -->
        <command kind="guarded" opcode="0x22" mnemonic="MC_Spin_Full_Custom">
            <comment> The new value of the parameter.
            </comment>
            <args>
                <arg name="MotorA_Dir" type="U8"/>
                <arg name="MotorA_Ticks" type="U32"/>
                <arg name="MotorA_Speed" type="U8"/>
                <arg name="MotorB_Dir" type="U8"/>
                <arg name="MotorB_Ticks" type="U32"/>
                <arg name="MotorB_Speed" type="U8"/>
                <arg name="MotorC_Dir" type="U8"/>
                <arg name="MotorC_Ticks" type="U32"/>
                <arg name="MotorC_Speed" type="U8"/>
                <arg name="MotorD_Dir" type="U8"/>
                <arg name="MotorD_Ticks" type="U32"/>
                <arg name="MotorD_Speed" type="U8"/>
            </args>
        </command>

        <!-- MOTOR CONTROLLER DIRECT COMMANDS       opcodes 0x30 to 0x3F -->
        <!-- Reset Position -->
        <!-- <command kind="guarded" opcode="0x30" mnemonic="MC_ResetPosition">
            <args>
                <arg name="Motor_ID" type="U8">
                    <comment>The motor id from 0 - 4 Motor 0 is all motors, Motorsss 1 - 4 are FL, FR, BL, BR </comment>
                </arg>
            </args>
        </command> -->
        <!-- Power Boost -->
        <!-- <command kind="guarded" opcode="0x31" mnemonic="MC_PowerBoost">
            <args>
                <arg name="Motor_ID" type="U8">
                    <comment>The motor id from 0 - 4 Motor 0 is all motors, Motorsss 1 - 4 are FL, FR, BL, BR </comment>
                </arg>
                <arg name="Value" type="U8">
                	 <comment>0x00 is On, 0xFF is Off </comment>
                </arg>
            </args>
        </command> -->
        
    </commands> 

    <!-- EVENTS -->
    <events>
        <event id="0" name="MC_moveStarted" severity="COMMAND" format_string="Move step has started">
            <comment> A notification a move sequence has started </comment>
        </event>

        <event id="1" name="MC_moveComplete" severity="COMMAND" format_string="Move step has finished">
            <comment> A notification a move sequence has finished </comment>
        </event>

        <event id="2" name="MC_MSPFaultDetected" severity="WARNING_HI" format_string="Motor controller motorId=%d has detected a fault=%d">
            <comment> A notification an MSP has thrown a fault </comment>
            <args>
                <arg name="motorID" type="U8"/>
                <arg name="faultMask" type="U8"/>
            </args>
        </event>

        <event id="3" name="MC_MSPNotResponding" severity="WARNING_HI" format_string="Motor controller motorID=%d is not responding">
            <comment> A notification an MSP is not communicating </comment>
            <args>
                <arg name="motorID" type="U8"/>
            </args>
        </event>

        <event id="4" name="MC_MSPNotReporting" severity="WARNING_HI" format_string="Motor controller motorID=%d is not communicating requested data">
            <comment> A notification an MSP is not reporting data </comment>
            <args>
                <arg name="motorID" type="U8"/>
            </args>
        </event>

        <event id="5" name="MC_ParameterChanged" severity="COMMAND" format_string="Motor Controller motorID=%d parameter regID=%d has been modified to %d">
            <comment> A notification that an MC parameter RegID has been modified </comment>
            <args>
                <arg name="motorID" type="U8"/>
                <arg name="regID" type="U8"/>
                <arg name="val" type="U32"/>
            </args>
        </event>

        <event id="6" name="MC_EncoderReset" severity="COMMAND" format_string="Motor Contorller motorID=%d encoder count has been reset">
            <comment> A notification that an MC parameter has been modified </comment>
            <args>
                <arg name="motorID" type="U8"/>
            </args>
        </event>

        <event id="0xA1" name="MC_RegTelemEvent" severity="ACTIVITY_HI" format_string="Telemetry RegID=%d : MotorA=%d MotorB=%d MotorC=%d MotorD=%d (possible errors on MotorMask=%d)">
            <comment>
                Generic Telemetry update for any register and all motors, with data cast as U32 (which may be problematic for neg numbers?)
            </comment>
            <args>
                <arg name="regID" type="U8"/>
                <arg name="motorA_Val" type="U32"/>
                <arg name="motorB_Val" type="U32"/>
                <arg name="motorC_Val" type="U32"/>
                <arg name="motorD_Val" type="U32"/>
                <arg name="motorsMask" type="U8"/>
            </args>
        </event>

        <event id="0xF1" name="MC_I2cGroupEvent" severity="WARNING_HI" format_string="Event %s with Register %d occurred %d times, involving Motors (Masked) %d.">
            <comment>
                Counting i2c communication failures during batch register writes (parameters and commands) and reads (telem).
            </comment>
            <args>
                <arg name="errorType" type="ENUM">
                    <enum name="i2cCommError">
                        <item name="i2c_READ_TELEM_ERR" />
                        <item name="i2c_WRITE_PARAM_ERR" />
                        <item name="i2c_TIMEOUT" />
                        <item name="BAD_PARAMETER" />
                    </enum>
                </arg>
                <arg name="regID" type="U8"/>
                <arg name="totalErrors" type="U16"/>
                <arg name="motorsMask" type="U16"/>
            </args>
        </event>

        <event id="0xEE" name="MC_Sched_Heartbeat" severity="ACTIVITY_LO" format_string="MotorControl Scheduler Alive.">
            <comment>
            Simple heartbeat event to make sure the scheduler tick in MotorControl is working.
            </comment>
        </event>
    </events>

    <!-- TELEMETRY -->
    <telemetry>
        <!-- Motor 0 | Front left motor -->
        <channel id="0" name="MC_FL_Encoder_Ticks" data_type="I32" update = "on_change">
            <comment>Front Left motor encoder displacement in encoder ticks</comment>
        </channel>

        <channel id="1" name="MC_FL_Current" data_type="U16" update = "on_change">
            <comment>Front Left motor current in milliAmps</comment>
        </channel>

        <!--<channel id="2" name="MC_FL_Speed" data_type="I16" update = "on_change">
            <comment>Front Left motor speed in centimeters per second (positive rotation is counter clockwise</comment>
        </channel>-->

        <!-- Motor 1 | Front right motor -->
        <channel id="3" name="MC_FR_Encoder_Ticks" data_type="I32" update = "on_change">
            <comment>Front Right motor encoder displacement in encoder ticks</comment>
        </channel>

        <channel id="4" name="MC_FR_Current" data_type="U16" update = "on_change">
            <comment>Front Right motor current in milliAmps</comment>
        </channel>

        <!--<channel id="5" name="MC_FR_Speed" data_type="I16" update = "on_change">
            <comment>Front Right motor speed in centimeters per second</comment>
        </channel>-->

        <!-- Motor 2 | Rear right motor -->
        <channel id="6" name="MC_RR_Encoder_Ticks" data_type="I32" update = "on_change">
            <comment>Rear Right motor encoder displacement in encoder ticks</comment>
        </channel>

        <channel id="7" name="MC_RR_Current" data_type="U16" update = "on_change">
            <comment>Rear Right motor current in milliAmps</comment>
        </channel>

        <!--<channel id="8" name="MC_RR_Speed" data_type="I16" update = "on_change">
            <comment>Rear Right motor speed in centimeters per second</comment>
        </channel>-->

        <!-- Motor 3 | Read right motor -->
        <channel id="9" name="MC_RL_Encoder_Ticks" data_type="I32" update = "on_change">
            <comment>Rear Left motor encoder displacement in encoder ticks</comment>
        </channel>

        <channel id="10" name="MC_RL_Current" data_type="U16" update = "on_change">
            <comment>Rear Left motor current in milliAmps</comment>
        </channel>

        <!--<channel id="11" name="MC_RL_Speed" data_type="I16" update = "on_change">
            <comment>Rear Left motor speed in centimeters per second</comment>
        </channel>-->

        <channel id="11" name="MC_FL_Status" data_type="U8" update = "on_change">
            <comment>Front left status</comment>
        </channel>

        <channel id="12" name="MC_FR_Status" data_type="U8" update = "on_change">
            <comment>Front right status</comment>
        </channel>

        <channel id="13" name="MC_RR_Status" data_type="U8" update = "on_change">
            <comment>Rear right status</comment>
        </channel>

        <channel id="14" name="MC_RL_Status" data_type="U8" update = "on_change">
            <comment>Rear left status</comment>
        </channel>
    </telemetry>

</component>
