<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="file:../xml/ISF_Component_Schema.rnc" type="compact"?>

<component name="NetworkManager" kind="passive" namespace="CubeRover" modeler="true">
    <import_port_type>Fw/Buffer/BufferSendPortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
    <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
    <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
    <import_port_type>CubeRover/CubeRoverPorts/WatchdogResetRequest/WatchdogResetRequestPortAi.xml</import_port_type>
    <ports>

        <!-- Input ports -->
        <port name="downlink" data_type="Fw::BufferSend" kind="guarded_input" max_number="1">
            <comment>GroundInterface sends packets to NM for downlink</comment>
        </port>

        <port name="schedIn" data_type="Svc::Sched" kind="guarded_input" max_number="1">
            <comment>Clock from RateGroupMedFreq. Every clock tick need to interllay check:
                RSSI, downlink queue, uplink (command) queue
            </comment>
        </port>

        <!-- Output ports -->
        <port name="uplink" data_type="Fw::BufferSend" kind="output" max_number="1">
            <comment>NM sends received packets to GroundInterface</comment>
        </port>
            
        <port name="WatchdogResetRequest" data_type="CubeRoverPorts::WatchdogResetRequest" kind="output">
            <comment>
                This allows other components to request the Watchdog interface to reset some hardware
            </comment>
        </port>


        <!-- TODO: MODE -->

        <!-- Standard F prime ports -->
        <port name="Log" data_type="Fw::Log"  kind="output" role="LogEvent"    max_number="1">
        </port>

        <port name="LogText" data_type="Fw::LogText"  kind="output" role="LogTextEvent"    max_number="1">
        </port>

        <port name="Time" data_type="Time"  kind="output" role="TimeGet"    max_number="1">
        </port>

        <!-- TODO: HEALTH -->

    </ports>


    <telemetry>
        <channel id="0" name="RSSI" data_type="I8">
            <comment>Received Signal Strength Indication abt WF121 connection to AP in dB</comment>
        </channel>
        <channel id="1" name="SNR" data_type="I8">
            <comment>Signal to noise radio</comment>
        </channel>
        <channel id="2" name="PktRecv" data_type="U32">
            <comment>Number of packets received (uplink)</comment>
        </channel>
        <channel id="3" name="PktSent" data_type="U32">
            <comment>Number of packets sent (downlink)</comment>
        </channel>
        <channel id="4" name="WIFIErrorStatus" data_type="U16">
            <comment>Returned Error code of WIFI chip</comment>
        </channel>
         <channel id="5" name="WIFIStateStatus" data_type="ENUM">
            <comment>Returned State Transition code of WIFI chip</comment>
                <enum name="WIFIState">
                    <item name="UNINITIALIZED"/>
                    <item name="INITIALIZEED"/>
                    <item name="WIFI_TURNING_ON"/>
                    <item name="WIFI_ON"/>
                    <item name="SCANNING"/>
                    <item name="SCANNED"/>
                    <item name="CONNECTING"/>
                    <item name="CONNECTED"/>
                    <item name="UDP_CONNECTED"/>
                </enum>
        </channel>
    </telemetry>

    <events>
        <event id="0" name="StateChange" severity="ACTIVITY_HI" format_string="WF121 State Changed %d -> %d">
            <comment>Emit event when ever a state transition occurs within the WF121</comment>
            <args>
                <arg name="from_state" type="ENUM">
                    <enum name="networkmanager_state_from">
                        <item name="from_UNINITIALIZED"/>
                        <item name="from_INITIALIZEED"/>
                        <item name="from_WIFI_TURNING_ON"/>
                        <item name="from_WIFI_ON"/>
                        <item name="from_SCANNING"/>
                        <item name="from_SCANNED"/>
                        <item name="from_CONNECTING"/>
                        <item name="from_CONNECTED"/>
                        <item name="from_UDP_CONNECTED"/>
                    </enum>
                </arg>
                <arg name="to_state" type="ENUM">
                    <enum name="networkmanager_state_to">
                        <item name="to_UNINITIALIZED"/>
                        <item name="to_INITIALIZEED"/>
                        <item name="to_WIFI_TURNING_ON"/>
                        <item name="to_WIFI_ON"/>
                        <item name="to_SCANNING"/>
                        <item name="to_SCANNED"/>
                        <item name="to_CONNECTING"/>
                        <item name="to_CONNECTED"/>
                        <item name="to_UDP_CONNECTED"/>
                    </enum>
                </arg>
            </args>
        </event>
        <event id="1" name="ExecuteCallbackError" severity="WARNING_HI" format_string="ExecuteCallBackError %d">
            <comment>Emit event when there is an error executing a WF121 callback</comment>
            <args>
                <arg name="ErrorCode" type="U16"/>
            </args>
        </event>
        <event id="2" name="WF121InitializationFailed" severity="FATAL" format_string="WF121 Failed to initialize">
            <comment>Emit event when there is an error executing a WF121 callback</comment>
        </event>
    </events>



</component>
