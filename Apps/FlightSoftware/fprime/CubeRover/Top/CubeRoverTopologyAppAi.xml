<assembly name="CubeRover">

<!-- Import components to project -->
<!-- Drivers -->
  <import_component_type>Drv/BlockDriver/BlockDriverComponentAi.xml</import_component_type>

<!-- Services -->
  <import_component_type>Svc/RateGroupDriver/RateGroupDriverComponentAi.xml</import_component_type>
  <import_component_type>Svc/ActiveRateGroup/ActiveRateGroupComponentAi.xml</import_component_type>
  <import_component_type>Svc/LinuxTime/CubeRoverTimeComponentAi.xml</import_component_type>
  <import_component_type>Svc/TlmChan/TlmChanComponentAi.xml</import_component_type>
  <import_component_type>Svc/CmdDispatcher/CommandDispatcherComponentAi.xml</import_component_type>
  <import_component_type>Svc/ActiveLogger/ActiveLoggerComponentAi.xml</import_component_type>
  <!--NOTE: Removed Health (we don't use it and this buys us >4kB of RAM)-->
  <!--<import_component_type>Svc/Health/HealthComponentAi.xml</import_component_type>-->
  <import_component_type>CubeRover/WatchDogInterface/WatchDogInterfaceComponentAi.xml</import_component_type>

<!-- Specifics to CubeRover -->
  <import_component_type>CubeRover/GroundInterface/GroundInterfaceComponentAi.xml</import_component_type>
  <import_component_type>CubeRover/NetworkManager/NetworkManagerComponentAi.xml</import_component_type>
  <import_component_type>CubeRover/IMU/IMUComponentAi.xml</import_component_type>
  <import_component_type>CubeRover/MotorControl/MotorControlComponentAi.xml</import_component_type>
  <import_component_type>CubeRover/Navigation/NavigationComponentAi.xml</import_component_type>
  <import_component_type>CubeRover/Camera/CameraComponentAi.xml</import_component_type>

  <instance namespace="Drv" name="blockDriver" type="BlockDriver" base_id="256" base_id_window="255" />

  <!-- Declaration of components handling synchronization of tasks -->
  <instance namespace="Svc" name="rateGroupDriver" type="RateGroupDriver" base_id="512"  base_id_window="255" />
  <instance namespace="Svc" name="rateGroupLowFreq" type="ActiveRateGroup" base_id="768" base_id_window="255" />
  <instance namespace="Svc" name="rateGroupMedFreq" type="ActiveRateGroup" base_id="1024" base_id_window="255" />
  <instance namespace="Svc" name="rateGroupHiFreq" type="ActiveRateGroup" base_id="1280" base_id_window="255" />

<!-- Declaration of time component that will be used by other module to capture time stamp -->
  <instance namespace="Svc" name="cubeRoverTime" type="CubeRoverTime" base_id="1536"  base_id_window="255" />

<!-- Declaration of telemetry chan that gathers all telemetry parameters (synchronous, synchronized by rate group low freq) -->
  <instance namespace="Svc" name="tlmChan" type="TlmChan" base_id="1792"  base_id_window="255" />

<!-- Declaration of the command dispatcher -->
  <instance namespace="Svc" name="cmdDispatcher" type="CommandDispatcher" base_id="2048" base_id_window="255" />

<!-- Declaration of the ground interface service -->
  <instance namespace="CubeRover" name="groundInterface" type="GroundInterface" base_id="2304" base_id_window="255" />

<!-- Declaration of the components that implement NetworkManager and Wifi Stack -->
  <instance namespace="CubeRover" name="networkManager" type="NetworkManager" base_id="2560" base_id_window="255" />

<!-- Declaration of the passive text logger component that logs events in non-volatile memory -->
<!-- For CubeRover - we use external FRAM memory to store data, i.e. a custom implementation of that component is necessary -->
<!-- this would be ComLogger. Need Impl. work. -->

<!-- Declaration of active component used for buffering, filtering, and serializing logs before passing them to groundinterface for downlinking and comlogger (for storage - tbd.) -->
<instance namespace="Svc" name="activeLogger" type="ActiveLogger" base_id="2816" base_id_window="255" />

<!-- Declaration of the health component -->
  <!--<instance namespace="Svc" name="health" type="Health" base_id="3072" base_id_window="255" />-->

  <!-- Declaration of the Navigation handling module -->
  <instance namespace="CubeRover" name="navigation" type="Navigation" base_id="3328" base_id_window="255" />

  <!-- Declaration of the Motor control interface module -->
  <instance namespace="CubeRover" name="motorControl" type="MotorControl" base_id="3584" base_id_window="255" />

  <!-- Declaration of the IMU interface module -->
  <instance namespace="CubeRover" name="IMU" type="IMU" base_id="3840" base_id_window="255" />

<!-- Declaration of the WatchDog Interface component -->
  <instance namespace="CubeRover" name="watchDogInterface" type="WatchDogInterface" base_id="4096" base_id_window="255" />
      
<!-- Declaration of the Camera component -->
  <instance namespace="CubeRover" name="camera" type="Camera" base_id="4352" base_id_window="255" />

<!-- *********************************************************************************************************
        CONNECTION OF CYCLE PORTS BETWEEN COMPONENTS BLOCK DRIVER AND RATE GROUP COMPONENTS
     ********************************************************************************************************* 
      -->

<!-- Connect Block Driver "CycleOut" to input "CycleIn" (sync_input) of Rate Group Driver -->
  <connection name="blockDriver_to_rgDriver">
    <source component="blockDriver" port="CycleOut" type="Cycle" num="0"/>
    <target component="rateGroupDriver" port="CycleIn" type="Cycle" num="0"/>
  </connection>

<!-- Connect Rate Group driver to Rate Group "High Frequency" (port 0) -->
<!-- Highest frequency rate group first to save a few cycles when RateGroupDriver has to iterate over
     clock divider array to find the matching RateGroup to call -->
  <connection name="rgDriver_to_rgHiFreq">
    <source component="rateGroupDriver" port="CycleOut" type="Cycle" num="0"/>
    <target component="rateGroupHiFreq" port="CycleIn" type="Cycle" num="0"/>
  </connection>  

<!-- Connect Rate Group driver to Rate Group "Medium Frequency" (port 1) -->
  <connection name="rgDriver_to_rgMedFreq">
    <source component="rateGroupDriver" port="CycleOut" type="Cycle" num="1"/>
    <target component="rateGroupMedFreq" port="CycleIn" type="Cycle" num="0"/>
  </connection>

<!-- Connect Rate Group driver to Rate Group "Low Frequency" (port 2) -->
  <connection name="rgDriver_to_rgLowFreq">
    <source component="rateGroupDriver" port="CycleOut" type="Cycle" num="2"/>
    <target component="rateGroupLowFreq" port="CycleIn" type="Cycle" num="0"/>
  </connection>

<!-- *********************************************************************************************************
        CONNECTION BETWEEN LOW FREQ RATE GROUP OUTPUT AND ALL DEPENDING COMPONENTS
     *********************************************************************************************************
     -->
  <!-- Connect output of telemetry Run input to update telemetry content (port 0) --> 
  <connection name="rgLowFreq_to_tlmChan_clk">
    <source component="rateGroupLowFreq" port="RateGroupMemberOut" type="Sched" num="0" />
    <target component="tlmChan" port="Run" type="Sched" num="0"/>
  </connection>
  
  <connection name = "rgLowFreq_to_watchDogInterface_clk">
    <source component = "rateGroupLowFreq" port = "RateGroupMemberOut" type = "Sched" num = "1" />
    <target component = "watchDogInterface" port = "Run" type = "Sched" num = "0"/>
  </connection>
  
  <!--
  <connection name = "rgHighFreq_to_health_clk">
    <source component = "rateGroupHighFreq" port = "RateGroupMemberOut" type = "Sched" num = "0" />
    <target component = "health" port = "Run" type = "Sched" num = "0"/>
  </connection>-->

<!-- *********************************************************************************************************
        CONNECTION BETWEEN MEDIUM FREQ RATE GROUP OUTPUT AND ALL DEPENDING COMPONENTS
     *********************************************************************************************************
     -->
  <connection name="rgMedFreq_to_networkManager">
    <source component="rateGroupMedFreq" port="RateGroupMemberOut" type="Sched" num="0" />
    <target component="networkManager" port="schedIn" type="sched" num="0"/>
  </connection>
  
  <connection name="rgMedFreq_to_networkManager">
    <source component="rateGroupMedFreq" port="RateGroupMemberOut" type="Sched" num="0" />
    <target component="camera" port="schedIn" type="sched" num="0"/>
  </connection>
  
  <connection name = "rgMedFreq_to_navigation_clk">
    <source component = "rateGroupMedFreq" port = "RateGroupMemberOut" type = "Sched" num = "1" />
    <target component = "navigation" port = "schedIn" type = "Sched" num = "0"/>
  </connection>

<!-- *********************************************************************************************************
        CONNECTION BETWEEN HIGH FREQ RATE GROUP OUTPUT AND ALL DEPENDING COMPONENTS
     *********************************************************************************************************
     -->
  <connection name="rgHiFreq_to_IMU">
    <source component="rateGroupHiFreq" port="RateGroupMemberOut" type="Sched" num="1" />
    <target component="IMU" port="schedIn" type="sched" num="0"/>
  </connection>

<!-- *********************************************************************************************************
        CONNECTION OF TIME PORTS BETWEEN CUBEROVER TIME ALL TIME-STAMPED COMPONENTS
     ********************************************************************************************************* 
      -->

  <connection name="rgLowFreq_to_cubeRoverTime">
    <source component="rateGroupLowFreq" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>

  <connection name="rgMedFreq_to_cubeRoverTime">
    <source component="rateGroupMedFreq" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>  

  <connection name="rgHiFreq_to_cubeRoverTime">
    <source component="rateGroupHiFreq" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>

  <connection name="blockDriver_to_cubeRoverTime">
    <source component="blockDriver" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>

  <connection name="groundInterface_to_cubeRoverTime">
    <source component="groundInterface" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>
  
  <connection name="networkManager_to_cubeRoverTime">
    <source component="networkManager" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>

  <connection name="imu_to_cubeRoverTime">
    <source component="IMU" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>

  <connection name="navigation_to_cubeRoverTime">
    <source component="navigation" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>

  <connection name="motorControl_to_cubeRoverTime">
    <source component="motorControl" port="Time" type="Time" num="0" />
    <target component="cubeRoverTime" port="timeGetPort" type="Time" num="0"/>
  </connection>
      
  <!-- Connection of time between cubeRoverTime and active logger component -->
  <connection name = "activeLogger_to_cubeRoverTime">
    <source component = "activeLogger" port = "Time" type = "Time" num = "0" />
    <target component = "cubeRoverTime" port = "timeGetPort" type = "Time" num = "0" />
  </connection>

  <!--
  <connection name = "health_to_cubeRoverTime">
    <source component = "health" port = "Time" type = "Time" num = "0" />
    <target component = "cubeRoverTime" port = "timeGetPort" type = "Time" num = "0" />
  </connection>-->

  <connection name = "watchDogInterface_to_cubeRoverTime">
    <source component = "watchDogInterface" port = "Time" type = "Time" num = "0" />
    <target component = "cubeRoverTime" port = "timeGetPort" type = "Time" num = "0" />
  </connection>
 
  <connection name = "camera_to_cubeRoverTime">
    <source component = "camera" port = "Time" type = "Time" num = "0" />
    <target component = "cubeRoverTime" port = "timeGetPort" type = "Time" num = "0" />
  </connection>

<!-- *********************************************************************************************************
        CONNECTION OF MONITORED COMPONENTS TO TELEMETRY CHAN COMPONENT
     ********************************************************************************************************* 
      -->
      <!--
      Summary of mapping of telemetry channels:
      Port # 0 : Rate Group Low Frequency
      Port # 1 : Rate Group Medium Frequency
      Port # 2 : Rate Group High Frequency
      Port # 3 : Ground Interface
      Port # 4 : ~~Depracated~~UDP Reciever
      Port # 5 : Network Manager
      Port # 6 : Navigation
      Port # 7 : Motor Control
      Port # 8 : IMU
      -->

      <!-- Rate group low Freq to telemetry channel (port 0) -->
  <connection name="rgLowFreq_to_chanTlm">
    <source component="rateGroupLowFreq" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>

      <!-- Rate group Medium Freq to telemetry channel (port 1) -->
  <connection name="rgMedFreq_to_chanTlm">
    <source component="rateGroupMedFreq" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>

      <!-- Rate group Medium Freq to telemetry channel (port 2) -->
  <connection name="rgHiFreq_to_chanTlm">
    <source component="rateGroupHiFreq" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>

  <!-- Ground Interface to telemetry channel (port 3) -->
  <connection name="groundInterface_to_chanTlm">
    <source component="groundInterface" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>

  <!-- Network Manager to telemetry channel (port 5) -->
  <connection name="networkManager_to_chanTlm">
    <source component="networkManager" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>

  <!-- Navigation to telemetry channel (port 6) -->
  <connection name="navigation_to_chanTlm">
    <source component="navigation" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>

  <!-- Motor Control to telemetry channel (port 7) -->
  <connection name="motorControl_to_chanTlm">
    <source component="motorControl" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>

  <!-- IMU to telemetry channel (port 8) -->
  <connection name="imu_to_chanTlm">
    <source component="IMU" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>
  
  <!-- WatchDogInterface to telemetry channel (port 9) -->
  <connection name="watchdog_to_chanTlm">
    <source component="watchDogInterface" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>
  
  <!-- Camera to telemetry channel (port 10) -->
  <connection name="camera_to_chanTlm">
    <source component="camera" port="Tlm" type="Tlm" num="0" />
    <target component="tlmChan" port="TlmRecv" type="Tlm" num="0" />
  </connection>
      

<!-- *********************************************************************************************************
        CONNECTION OF NAVIGATION RELATED COMPONENTS
     ********************************************************************************************************* 
      -->

  <!-- MC to Nav  -->
  <connection name="motorControl_to_navigation_motorData">
    <source component="motorControl" port="motorDataOut" type="motorData" num="0" />
    <target component="navigation" port="motorDataIn" type="motorData" num="0" />
  </connection>

  <!-- Nav to MC  -->
  <connection name="navigation_to_motorControl_motorCommand">
    <source component="navigation" port="motorCommandOut" type="motorCommand" num="0" />
    <target component="motorControl" port="motorCommandIn" type="motorCommand" num="0" />
  </connection>

  <!-- IMU to Nav  -->
  <connection name="IMU_to_navigation_IMUData">
    <source component="IMU" port="IMUDataOut" type="IMUData" num="0" />
    <target component="navigation" port="IMUDataIn" type="IMUData" num="0" />
  </connection>

  <!-- Nav to Camera -->
  <connection name="navigation_to_camera_cameraTakePicture">
    <source component="navigation" port="cameraTakePictureOut" type="cameraTakePicture" num="0" />
    <target component="camera" port="takePicture" type="cameraTakePicture" num="0" />
  </connection>

<!-- *********************************************************************************************************
        CONNECTION OF DOWNLINK COMPONENTS 
     ********************************************************************************************************* 
      -->
      
  <connection name="camera_to_groundInterface">
    <source component="camera" port="downlinkImage" type="CubeRover::FileDownlink" num="0" />
    <target component="groundInterface" port="appDownlink" type="CubeRover::FileDownlink" num="0" />
  </connection>
  
  <!-- TODO: Connect UWB to goundInterface HERE -->
      
  <connection name="chanTlm_to_groundInterface">
    <source component="tlmChan" port="PktSend" type="Com" num="0" />
    <target component="groundInterface" port="tlmDownlink" type="Com" num="0" />
  </connection>
  
  <connection name="aLogger_to_groundInterface">
    <source component="activeLogger" port="PktSend" type="Com" num="0" />
    <target component="groundInterface" port="logDirectDownlink" type="Com" num="0" />
  </connection>
    
  <!-- TODO: Connect ComLogger to groundInterface HERE -->
      
  <connection name="groundInterface_to_watchDogInterface"><!-- GROUNDINTERFACE downlinkBufferSend PORT #0 -->
    <source component="groundInterface" port="downlinkBufferSend" type="Fw::BufferSend" num="0" />
    <target component="watchDogInterface" port="downlink" type="Fw::BufferSend" num="0"/>
  </connection>
      
  <connection name="groundInterface_to_networkManager"><!-- GROUNDINTERFACE downlinkBufferSend PORT #1 -->
    <source component="groundInterface" port="downlinkBufferSend" type="Fw::BufferSend" num="1" />
    <target component="networkManager" port="downlink" type="Fw::BufferSend" num="0" />
  </connection>
  
  <connection name="watchDogInterface_to_networkManager"><!-- WatchDogInterface downlinkBufferSend PORT #0 -->
    <source component="watchDogInterface" port="downlinkBufferSend" type="Fw::BufferSend" num="0" />
    <target component="networkManager" port="downlink" type="Fw::BufferSend" num="1"/>
  </connection>
      
<!-- *********************************************************************************************************
        CONNECTION OF UPLINK COMPONENTS
     ********************************************************************************************************* 
      -->
      
  <connection name="watchDogInterface_to_groundInterface">
    <source component="watchDogInterface" port="uplink" type="Fw::BufferSend" num="0" />
    <target component="groundInterface" port="cmdUplink" type="Fw::BufferSend" num="0"/>
  </connection>

  <connection name="networkManager_to_groundInterface"><!-- GROUNDINTERFACE cmdUplink PORT #1 -->
    <source component="networkManager" port="uplink" type="Fw::BufferSend" num="0" />
    <target component="groundInterface" port="cmdUplink" type="Fw::BufferSend" num="1"/>
  </connection>

  <connection name="groundInterface_to_cmdDispatcher">
    <source component="groundInterface" port="cmdDispatch" type="Fw::Com" num="0" />
    <target component="cmdDispatcher" port="seqCmdBuff" type="Fw::Com" num="0"/>
  </connection>
      
  <!-- *********************************************************************************************************
        CONNECTION OF MONITORED COMPONENTS TO TELEMETRIC ACTIVE LOGGER COMPONENT
       ********************************************************************************************************* 
      -->

  <connection name = "rgLowFreq_to_aLogger">
    <source component = "rateGroupLowFreq" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>

  <connection name = "rgMedFreq_to_aLogger">
    <source component = "rateGroupMedFreq" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>

  <connection name = "rgHiFreq_to_aLogger">
    <source component = "rateGroupHiFreq" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>
  
  <connection name = "aLogger_to_aLogger">
    <source component = "activeLogger" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>

  <connection name = "cmdDispatcher_to_aLogger">
    <source component = "cmdDispatcher" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>

  <connection name = "groundInterface_to_aLogger">
    <source component = "groundInterface" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>
  
  <connection name = "watchDogInterface_to_aLogger">
    <source component = "watchDogInterface" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>
  
  <connection name = "networkManager_to_aLogger">
    <source component = "networkManager" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>

  <connection name = "camera_to_aLogger">
    <source component = "camera" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>
  
  <connection name = "navigation_to_aLogger">
    <source component = "navigation" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>
  
  <connection name = "motorControl_to_aLogger">
    <source component = "motorControl" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>
  
  <connection name = "imu_to_aLogger">
    <source component = "IMU" port = "Log" type = "Log" num = "0" />
    <target component = "activeLogger" port = "LogRecv" type = "Log" num = "0" />
  </connection>

  <!-- *********************************************************************************************************
        CONNECTION OF COMMAND PORTS TO COMMANDED COMPONENTS
        Port num must be unique on the command dispatch and are mapped to component opcodes by reg port num
        Port numbers are unused on command response
       ********************************************************************************************************* 
      -->

<!--
  <connection name = "HealthReg">
    <source component = "health" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "0" />
  </connection>
  <connection name = "HealthDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "0" />
    <target component = "health" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "HealthReg">
    <source component = "health" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>
-->

  <!--ActiveLogger Commands Link-->
  <connection name = "activeLoggerCmdReg_to_cmdDispatcher">
    <source component = "activeLogger" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "0" />
  </connection>
  <connection name = "cmdDispatcherSendCmd_to_activeLoggerCmdDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "0" />
    <target component = "activeLogger" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "activeLoggerCmdStatus_to_cmdDispatcher_CmdStatus">
    <source component = "activeLogger" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>

  <!--CommandDispatcher Commands Link-->
  <connection name = "cmdDispatcherCmdReg_to_cmdDispatcher">
    <source component = "cmdDispatcher" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "1" />
  </connection>
  <connection name = "cmdDispatcherSendCmd_to_cmdDispatcherCmdDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "1" />
    <target component = "cmdDispatcher" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "cmdDispatcherCmdStatus_to_cmdDispatcher_CmdStatus">
    <source component = "cmdDispatcher" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>

  <!--WatchDogInterface Commands Link-->
  <connection name = "WatchdogReg">
    <source component = "watchDogInterface" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "2" />
  </connection>
  <connection name = "WatchdogDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "2" />
    <target component = "watchDogInterface" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "WatchdogReg_to_cmdDispatcher_CmdStatus">
    <source component = "watchDogInterface" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>
  
  <!--Camera Commands Link-->
  <connection name = "cameraCmdReg_to_cmdDispatcher">
    <source component = "camera" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "3" />
  </connection>
  <connection name = "cmdDispatcherSendCmd_to_cameraCmdDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "3" />
    <target component = "camera" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "cameraCmdStatus_to_cmdDispatcher_CmdStatus">
    <source component = "camera" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>
  
  <!--Navigation Commands Link-->
  <connection name = "navigationCmdReg_to_cmdDispatcher">
    <source component = "navigation" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "4" />
  </connection>
  <connection name = "cmdDispatcherSendCmd_to_navigationCmdDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "4" />
    <target component = "navigation" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "navigationCmdStatus_to_cmdDispatcher_CmdStatus">
    <source component = "navigation" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>

  <!--IMU Commands Link-->
  <connection name = "IMUCmdReg_to_cmdDispatcher">
    <source component = "IMU" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "5" />
  </connection>
  <connection name = "cmdDispatcherSendCmd_to_IMUCmdDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "5" />
    <target component = "IMU" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "IMUCmdStatus_to_cmdDispatcher_CmdStatus">
    <source component = "IMU" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>

  <!--MotorControl Commands Link-->
  <connection name = "motorControlCmdReg_to_cmdDispatcher">
    <source component = "motorControl" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "6" />
  </connection>
  <connection name = "cmdDispatcherSendCmd_to_motorControlCmdDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "6" />
    <target component = "motorControl" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "motorControlCmdStatus_to_cmdDispatcher_CmdStatus">
    <source component = "motorControl" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>

  <!--GroundInterface Commands Link-->
  <connection name = "groundInterfaceCmdReg_to_cmdDispatcher">
    <source component = "groundInterface" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "7" />
  </connection>
  <connection name = "cmdDispatcherSendCmd_to_groundInterfaceCmdDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "7" />
    <target component = "groundInterface" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "groundInterfaceCmdStatus_to_cmdDispatcher_CmdStatus">
    <source component = "groundInterface" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>

  <!--NetworkManager Commands Link -->
  <connection name = "networkManagerCmdReg_to_cmdDispatcher">
    <source component = "networkManager" port = "CmdReg" type = "CmdReg" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdReg" type = "CmdReg" num = "8" />
  </connection>
  <connection name = "cmdDispatcherSendCmd_to_networkManagerCmdDisp">
    <source component = "cmdDispatcher" port = "compCmdSend" type = "Cmd" num = "8" />
    <target component = "networkManager" port = "CmdDisp" type = "Cmd" num = "0" />
  </connection>
  <connection name = "networkManagerCmdStatus_to_cmdDispatcher_CmdStatus">
    <source component = "networkManager" port = "CmdStatus" type = "CmdResponse" num = "0" />
    <target component = "cmdDispatcher" port = "compCmdStat" type = "CmdResponse" num = "0" />
  </connection>
  

  <!-- *********************************************************************************************************
        CONNECTION OF Health PORTS
       ********************************************************************************************************* 
      -->
  
<!--
  <connection name = "rateGroupLowFreqPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "0" />
    <target component = "rateGroupLowFreq" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "rateGroupLowFreqPingOut">
    <source component = "rateGroupLowFreq" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "0" />
  </connection>

  <connection name = "rateGroupMedFreqPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "1" />
    <target component = "rateGroupMedFreq" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "rateGroupMedFreqPingOut">
    <source component = "rateGroupMedFreq" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "1" />
  </connection>

  <connection name = "rateGroupHiFreqPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "2" />
    <target component = "rateGroupHiFreq" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "rateGroupHiFreqPingOut">
    <source component = "rateGroupHiFreq" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "2" />
  </connection>

  <connection name = "activeLoggerPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "3" />
    <target component = "activeLogger" port = "pingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "activeLoggerPingOut">
    <source component = "activeLogger" port = "pingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "3" />
  </connection>

  <connection name = "navigationPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "4" />
    <target component = "navigation" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "navigationPingOut">
    <source component = "navigation" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "4" />
  </connection>

  <connection name = "watchDogInterfacePingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "5" />
    <target component = "watchDogInterface" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "watchDogInterfacePingOut">
    <source component = "watchDogInterface" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "5" />
  </connection>

  <connection name = "blockDriverPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "6" />
    <target component = "blockDriver" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "blockDriverPingOut">
    <source component = "blockDriver" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "6" />
  </connection>
-->

  <!--	NO HEALH PORTS IN .xml FILE
  <connection name = "tlmChanPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "7" />
    <target component = "tlmChan" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "tlmChanPingOut">
    <source component = "tlmChan" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "7" />
  </connection>
  -->
  <!--	NO HEALH PORTS IN .xml FILE
  <connection name = "cmdDispatcherPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "8" />
    <target component = "cmdDispatcher" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "cmdDispatcherPingOut">
    <source component = "cmdDispatcher" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "8" />
  </connection>
  -->
  <!--	Component doesn't exist yet
  <connection name = "comLoggerPingIn">
    <source component = "health" port = "PingSend" type = "Ping" num = "9" />
    <target component = "comLogger" port = "PingIn" type = "Ping" num = "0" />
  </connection>
  <connection name = "comLoggerPingOut">
    <source component = "comLogger" port = "PingOut" type = "Ping" num = "0" />
    <target component = "health" port = "PingReturn" type = "Ping" num = "9" />
  </connection>
  -->

  <!-- *********************************************************************************************************
        CONNECTION OF COMPONENTS TO WATCHDOG RESET REQUEST PORT
       ********************************************************************************************************* 
      -->
      
  <connection name="motorControl_to_watchDogInterface_WatchdogResetRequest">
    <source component="motorControl" port="watchdogResetRequest" type="CubeRoverPorts::WatchdogResetRequest" num="0" />
    <target component="watchDogInterface" port="CompResetRequest" type="CubeRoverPorts::WatchdogResetRequest" num="0" />
  </connection>

  <connection name="networkManager_to_watchDogInterface_WatchdogResetRequest">
    <source component="networkManager" port="WatchdogResetRequest" type="CubeRoverPorts::WatchdogResetRequest" num="0" />
    <target component="watchDogInterface" port="CompResetRequest" type="CubeRoverPorts::WatchdogResetRequest" num="0" />
  </connection>


</assembly>
