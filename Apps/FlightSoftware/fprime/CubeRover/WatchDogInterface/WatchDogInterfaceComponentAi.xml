<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="file:../xml/ISF_Component_Schema.rnc" type="compact"?>

<component name="WatchDogInterface" kind="active" namespace="CubeRover">
    <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
    <import_port_type>Svc/Ping/PingPortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
    <import_port_type>Fw/Buffer/BufferSendPortAi.xml</import_port_type>
    <import_port_type>Svc/WatchDog/WatchDogPortAi.xml</import_port_type>
    <import_port_type>CubeRover/CubeRoverPorts/WatchdogResetRequest/WatchdogResetRequestPortAi.xml</import_port_type>

    <ports>
        <!-- Rate Group Port -->
        <port name="Run" data_type="Svc::Sched" kind="guarded_input" max_number="1">
            <comment>
            Run port
            </comment>
        </port>
        
        <port name="CompResetRequest" data_type="CubeRoverPorts::WatchdogResetRequest" kind="sync_input">
            <comment>
                This allows other components to request the Watchdog interface to reset some hardware
            </comment>
        </port>

        <!-- Command Ports -->
        <port name="CmdReg" data_type="Fw::CmdReg" kind="output" role="CmdRegistration" max_number="1">
            <comment>
            Command Registration Port
            </comment>
        </port>

        <port name="CmdStatus" data_type="Fw::CmdResponse" kind="output" role="CmdResponse" max_number="1">
            <comment>
            Command Response Port
            </comment>
        </port>

        <port name="CmdDisp" data_type="Fw::Cmd" kind="input" role="Cmd" max_number="1">
            <comment>
            Command Input Port
            </comment>
        </port>
        
        <!-- Network interfaces for messages exchanged via Lander RS422 -->
        <port name="downlink" data_type="Fw::BufferSend" kind="guarded_input" max_number="1">
            <comment>UDPInterface sends packets to Watchdog for downlink</comment>
        </port>
            
        <port name="uplink" data_type="Fw::BufferSend" kind="output" max_number="1">
            <comment>Watchdog sends received packets to UDPInterface</comment>
        </port>
        
        <!-- Ping ports -->
        <port name="PingIn" data_type="Svc::Ping" kind="async_input" max_number="1">
            <comment>
            Input ping port "Health"
            </comment>
        </port>
        <port name="PingOut" data_type="Svc::Ping" kind="output" max_number="1">
            <comment>
            Output ping port "Health"
            </comment>
        </port>

        <!-- Watch Dog Port -->
        <port name="WdogStroke" data_type="Svc::WatchDog" kind="sync_input" max_number="1">
            <comment>
            Input port from Health Component.
            </comment>
        </port>
    </ports>

    <commands>
        <command kind="async" opcode="0x00" mnemonic="Reset_Specific">
            <comment>
            Command to reset the specific parts of rover
            </comment>
            <args>
                <arg name="reset_value" type="ENUM">
                    <enum name="reset_values_possible">
                        <item name="No_Reset" value = "0"/>
					    <item name="Reset_Hercules" value = "1"/>
					    <item name="Hercules_Power_On" value = "2"/>
					    <item name="Hercules_Power_Off" value = "3"/>
					    <item name="Reset_Radio" value = "4"/>
					    <item name="Radio_Power_On" value = "5"/>
					    <item name="Radio_Power_Off" value = "6"/>
					    <item name="Reset_FPGA" value = "7"/>
					    <item name="FPGA_Power_On" value = "8"/>
					    <item name="FPGA_Power_Off" value = "9"/>
					    <item name="Reset_Motor1" value = "10"/>
					    <item name="Reset_Motor2" value = "11"/>
					    <item name="Reset_Motor3" value = "12"/>
					    <item name="Reset_Motor4" value = "13"/>
					    <item name="Reset_All_Motors" value = "14"/>
					    <item name="All_Motors_On" value = "15"/>
					    <item name="All_Motors_Off" value = "16"/>
					    <item name="Reset_EN_3_3" value = "17"/>
					    <item name="EN_3_3_Power_On" value = "18"/>
					    <item name="EN_3_3_Power_Off" value = "19"/>
					    <item name="Reset_24_EN" value = "20"/>
					    <item name="EN_24_On" value = "21"/>
					    <item name="EN_24_Off" value = "22"/>
					    <item name="HDRM_Off" value = "24"/>
					    <item name="FPGA_Cam_0" value = "25"/>
					    <item name="FPGA_Cam_1" value = "26"/>
					    <item name="Battery_Start_Charge" value = "27"/>
					    <item name="Battery_Stop_Charge" value = "28"/>
					    <item name="Enable_RS422_UART" value = "29"/>
					    <item name="Disable_RS422_UART" value = "30"/>
					    <item name="Enable_Heater_Control" value = "31"/>
					    <item name="Disable_Heater_Control" value = "32"/>
					</enum>
					<comment>
                    	ENUM Value that specifies which components or hardware need to be reset
                    </comment>
                </arg>
             </args>
        </command>
        <command kind="async" opcode="0x01" mnemonic="Prepare_For_Deployment">
            <comment>
            Command to send signal to MSP430 to prepare for deploying (may not be needed)
            </comment>
            <args>
                <arg name="confirm" type="ENUM">
                    <enum name="confirm_prepare_for_deploy">
                        <item name="Confirm_Prep" value = "96" />
                    </enum>
                </arg>
            </args>
        </command>
        <command kind="async" opcode="0x02" mnemonic="Disengage_From_Lander">
            <comment>
            Command to send signal to MSP430 that it should send a signal to lander to disengage, sets disengage pin high
            </comment>
            <args>
                <arg name="confirm" type="ENUM">
                    <enum name="confirm_disengage">
                        <item name="Confirm_Deploy" value = "96" />
                    </enum>
                </arg>
            </args>
        </command>
        <command kind="async" opcode="0x03" mnemonic="Switch_Connection_Mode">
            <comment>
            Command to send signal to MSP430 that we switch the current connection mode
            </comment>
        </command>
        <command kind="async" opcode="0x04" mnemonic="Engage_From_Lander">
            <comment>
            Command to send signal to MSP430 that it should send a signal to lander to engage, sets disengage pin low
            </comment>
        </command>
        <command kind="async" opcode="0xAA" mnemonic="Set_Kp_Specific">
            <comment>
            Command to send signal to MSP430 that it should set Kp to a specific value
            </comment>
            <args>
                <arg name="value" type="U16" />
            </args>
        </command>
        <!-- <command kind="async" opcode="0xAB" mnemonic="Set_Heater_On_value">
            <comment>
            Command to send signal to MSP430 that it should set the value which the heater automatically turns on
            </comment>
        </command>
        <command kind="async" opcode="0xAC" mnemonic="Set_Heater_Off_value">
            <comment>
            Command to send signal to MSP430 that it should set the value which the heater automatically turns off
            </comment>
        </command> -->
        <command kind="async" opcode="0xAD" mnemonic="Set_Heater_Duty_Cycle_Max">
            <comment>
            Command to send signal to MSP430 that it should set the max possible Duty Cycle value for the heater
            </comment>
        </command>
        <command kind="async" opcode="0xAE" mnemonic="Set_Heater_Duty_Cycle_Period">
            <comment>
            Command to send signal to MSP430 that it should set the period the Duty Cycle for the heater is at
            </comment>
            <args>
                <arg name="period" type="U16" />
            </args>
        </command>
        <command kind="async" opcode="0xAF" mnemonic="Set_Heater_Window">
            <comment>
            Set the Half-Width of the heater on/off deadband window around the setpoint (in thermistor ADC values). Between setpoint - half_width and setpoint + half_width, heater is off.
            </comment>
            <args>
                <arg name="adc_half_width" type="U16" />
            </args>
        </command>
        <command kind="async" opcode="0xDA" mnemonic="Set_Heater_Setpoint">
            <comment>
            Command to send signal to MSP430 that it should set V to a specific value
            </comment>
            <args>
                <arg name="adc_setpoint" type="U16" />
            </args>
        </command>
        <command kind="async" opcode="0xEA" mnemonic="Switch_to_Sleep_Mode">
            <comment>
            Command to send signal to MSP430 that it should go into Sleep Mode
            </comment>
            <args>
                <arg name="confirm" type="ENUM">
                    <enum name="confirm_sleep_mode">
                        <item name="Confirm_Sleep" value = "119" />
                    </enum>
                </arg>
            </args>
        </command>
        <command kind="async" opcode="0xEB" mnemonic="Switch_to_Keep_Alive_Mode">
            <comment>
            Command to send signal to MSP430 that it should go into Keep Alive Mode
            </comment>
            <args>
                <arg name="confirm" type="ENUM">
                    <enum name="confirm_alive_mode">
                        <item name="Confirm_Alive" value = "119" />
                    </enum>
                </arg>
            </args>
        </command>
        <command kind="async" opcode="0xEC" mnemonic="Switch_to_Service_Mode">
            <comment>
            Command to send signal to MSP430 that it should go into Service Mode
            </comment>
            <args>
                <arg name="confirm" type="ENUM">
                    <enum name="confirm_service_mode">
                        <item name="Confirm_Service" value = "119" />
                    </enum>
                </arg>
            </args>
        </command>
    </commands>

    <events>
        <event id="0x0" name="WatchDogIncorrectResp" severity="WARNING_HI" format_string = "Watchdog Sent back Incorrect Response: %u">
            <comment>
            Warning that the WatchDog MSP430 sent back a response different than what was sent to it
            </comment>
            <args>
                <arg name="error" type="U8">
                    <comment>The watchdog error value (reference to documentation)</comment>
                </arg>          
            </args>
        </event>

        <event id="0x1" name="WatchDogTimedOut" severity="WARNING_HI" format_string = "WatchDog Timer has timed out" >
            <comment>
            Warning that a WatchDog MSP430 watchdog timer went off 
            </comment>
        </event>

        <event id="0x2" name="WatchDogCmdReceived" severity="ACTIVITY_HI" format_string = "WatchDog Cmd to reset %s recieved" >
            <comment>
            Notification that watchdog interface recieved a command from Cmd_Dispatcher 
            </comment>
             <args>
                <arg name="Cmd" type="string" size="50">
                    <comment>The cmd that watchdog interface processed</comment>
                </arg>          
            </args>
        </event>

        <event id="0x3" name="WatchDogCommError" severity="WARNING_HI" format_string = "WatchDog Interface has error: %u" >
            <comment>
            Warning that a WatchDog MSP430 error has occured.
            </comment>
             <args>
                <arg name="error" type="U32">
                    <comment>The watchdog error value (reference to documentation)</comment>
                </arg>          
            </args>
        </event>

        <event id="0x4" name="ADCThermistorError" severity="WARNING_HI" format_string = "ADC Thermistor Conversion Error" >
            <comment>
            Warning that less than 16 thermistors had conversions or conversion never completed meaning no new tempurature values are being generated
            </comment>
        </event>

        <event id="0x5" name="WatchDogIncorrectResetValue" severity="WARNING_LO" format_string = "Incorrect Reset Value Sent" >
            <comment>
            Warning that an incorrect reset value has been sent from ground
            </comment>
        </event>
    </events>

    <telemetry>
        <!--
        <channel id="0" name="LAST_COMMAND" data_type="string" size="24">
            <comment>
                The command last sent to watchdog interface
            </comment>
        </channel>
        -->
        <channel id="2" name="VOLTAGE_2_5V" data_type="int16_t">
            <comment>
                Voltage from 2.5V line from Watchdog
            </comment>
        </channel>
        <channel id="3" name="VOLTAGE_2_8V" data_type="int16_t">
            <comment>
                Voltage from 2.8V line from Watchdog
            </comment>
        </channel>
        <channel id="4" name="VOLTAGE_24V" data_type="int16_t">
            <comment>
                Voltage from 24V line from Watchdog
            </comment>
        </channel>
        <channel id="5" name="VOLTAGE_28V" data_type="int16_t">
            <comment>
                Voltage from 28V line from Watchdog
            </comment>
        </channel>
        <channel id="16" name="BATTERY_THERMISTOR" data_type="U8">
            <comment>
                Battery Charge left in mAH
            </comment>
        </channel>
        <channel id="23" name="SYSTEM_STATUS" data_type="int8_t">
            <comment>
                Boolean for Heater On/Off from Watchdog
            </comment>
        </channel>
        <channel id="24" name="BATTERY_LEVEL" data_type="U16">
            <comment>
                Value of Charge in Battery
            </comment>
        </channel>
        <channel id="25" name="BATTERY_CURRENT" data_type="U16">
            <comment>
                Value of Current Used in Battery
            </comment>
        </channel>
        <channel id="26" name="BATTERY_VOLTAGE" data_type="U16">
            <comment>
                Value of Voltage Used in Battery
            </comment>
        </channel>
        <channel id="27" name="THERM_0" data_type="U16">
            <comment>
                12 bit Value for Thermistor value
            </comment>
        </channel>
        <channel id="28" name="THERM_1" data_type="U16">
            <comment>
                12 bit Value for Thermistor value
            </comment>
        </channel>
        <channel id="29" name="THERM_2" data_type="U16">
            <comment>
                12 bit Value for Thermistor value
            </comment>
        </channel>
        <channel id="30" name="THERM_3" data_type="U16">
            <comment>
                12 bit Value for Thermistor value
            </comment>
        </channel>
        <channel id="31" name="THERM_4" data_type="U16">
            <comment>
                12 bit Value for Thermistor value
            </comment>
        </channel>
        <channel id="32" name="THERM_5" data_type="U16">
            <comment>
                12 bit Value for Thermistor value
            </comment>
        </channel>
    </telemetry>
</component>
