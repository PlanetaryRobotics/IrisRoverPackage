@startuml Iris FPrime WF121 Message Parsing State Machine

!theme crt-amber

skinparam DefaultTextAlignment left

left header
= <b>Iris FPrime WF121 Message Parsing State Machine</b>
* Control flow diagram for passing through the states in `Wf121Parser::Mpsm`.
* Except where otherwise listed as "**immediate**", each transition between **States** is taken when the FreeRTOS RxTask notices a new byte in the RX Queue.
* Anything prefixed with **Restart_** (like Timeouts) proceeds directly back to the start (just not a cleaner way to show that with PlantUML).
endheader

(*) --> "**State:**\nWait for Valid Header"
"**State:**\nWait for Valid Header" -up->[bytes_loaded < 4] "**State:**\nWait for Valid Header"

if "bytes_loaded >= 4" then
    note left: Check Header
    if "good header" then
        -->[Valid BGAPI] "**State:**\nWait for rest of BGAPI"
        "**State:**\nWait for rest of BGAPI" -up->[bytes_loaded < len] "**State:**\nWait for rest of BGAPI"
        "**State:**\nWait for rest of BGAPI" -left->[time_since_hdr > timeout] "Restart_BGP_Timeout"
        
        "**State:**\nWait for rest of BGAPI"-->[ bytes_loaded = len] "Parse BGAPI"
        -->[Immediately:\nFire BGAPI Callback then...](*)
    else
        -->[Valid DM] "**State:**\nWait for DM len byte"
        "**State:**\nWait for DM len byte"-->[ loaded 1 B] "**State:**\nWait for rest of DM"
        "**State:**\nWait for DM len byte" -right->[\nlen > max_possible_length] "Restart_Bad_DM_Length"
        "**State:**\nWait for DM len byte" -right->[time_since_hdr > timeout] "Restart_DML_Timeout"

        "**State:**\nWait for rest of DM" -up->[bytes_loaded < len] "**State:**\nWait for rest of DM"
        "**State:**\nWait for rest of DM" -right->[time_since_hdr > timeout] "Restart_DMP_Timeout"
        "**State:**\nWait for rest of DM" -->[ bytes_loaded = len] "Parse DM"
        -->[Immediately:\nFire DM Callback then...](*)
        note right: Done. Immediately back to Start.
    endif
else
    -up->[ Bad Header] "Dequeue 1 Byte."
    -up->[Immediately] "**State:**\nWait for Valid Header"
endif

@enduml