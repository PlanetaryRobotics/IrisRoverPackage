        -:    0:Source:/home/tcanham/source/isf/Svc/PolyDb/PolyDbImpl.hpp
        -:    0:Programs:6
        -:    1:/*
        -:    2: * PolyDbImpl.hpp
        -:    3: *
        -:    4: *  Created on: February 19, 2015
        -:    5: *      Author: Timothy Canham
        -:    6: */
        -:    7:
        -:    8:#ifndef POLYDBIMPL_HPP_
        -:    9:#define POLYDBIMPL_HPP_
        -:   10:
        -:   11:#include <Svc/PolyDb/PolyDbComponentAc.hpp>
        -:   12:#include <Fw/Types/PolyType.hpp>
        -:   13:#include <Svc/PolyDb/PolyDbImplCfg.hpp>
        -:   14:
        -:   15:namespace Svc {
        -:   16:    class PolyDbImpl : public PolyDbComponentBase {
        -:   17:        public:
        -:   18:
        -:   19:#if FW_OBJECT_NAMES == 1
        -:   20:            PolyDbImpl(const char* name);
        -:   21:#else
        -:   22:            PolyDbImpl();
        -:   23:#endif
        -:   24:            void init(void);
        -:   25:            virtual ~PolyDbImpl();
        -:   26:        protected:
        -:   27:        private:
        -:   28:            void getValue_handler(NATIVE_INT_TYPE portNum, U32 entry, MeasurementStatus &status, Fw::Time &time, Fw::PolyType &val);
        -:   29:            void setValue_handler(NATIVE_INT_TYPE portNum, U32 entry, MeasurementStatus &status, Fw::Time &time, Fw::PolyType &val);
        -:   30:
      150:   31:            struct t_dbStruct {
        -:   32:                MeasurementStatus status;
        -:   33:                Fw::PolyType val;
        -:   34:                Fw::Time time;
        -:   35:            } m_db[POLYDB_NUM_DB_ENTRIES];
        -:   36:
        -:   37:    };
        -:   38:}
        -:   39:
        -:   40:#endif /* POLYDBIMPL_HPP_ */
