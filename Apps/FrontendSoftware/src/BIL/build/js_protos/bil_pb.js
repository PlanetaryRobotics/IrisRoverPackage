// source: bil.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var time_pb = require('./time_pb.js');
goog.object.extend(proto, time_pb);
var db_pb = require('./db_pb.js');
goog.object.extend(proto, db_pb);
goog.exportSymbol('proto.iris_bil.BilData', null, global);
goog.exportSymbol('proto.iris_bil.BilData.DataCase', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest.All', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest.DownlinkTimeSpan', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest.Latest', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest.LookupIdSpan', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest.QueryCase', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest.Type', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest.UlidSpan', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequest.UplinkTimeSpan', null, global);
goog.exportSymbol('proto.iris_bil.BilDataRequestResponse', null, global);
goog.exportSymbol('proto.iris_bil.BilIngest', null, global);
goog.exportSymbol('proto.iris_bil.BilIngest.DataCase', null, global);
goog.exportSymbol('proto.iris_bil.BilStatus', null, global);
goog.exportSymbol('proto.iris_bil.CommandUpdate', null, global);
goog.exportSymbol('proto.iris_bil.Image', null, global);
goog.exportSymbol('proto.iris_bil.InternalCommandAck', null, global);
goog.exportSymbol('proto.iris_bil.PingMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilIngest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iris_bil.BilIngest.oneofGroups_);
};
goog.inherits(proto.iris_bil.BilIngest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilIngest.displayName = 'proto.iris_bil.BilIngest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iris_bil.BilData.oneofGroups_);
};
goog.inherits(proto.iris_bil.BilData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilData.displayName = 'proto.iris_bil.BilData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iris_bil.BilDataRequest.oneofGroups_);
};
goog.inherits(proto.iris_bil.BilDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilDataRequest.displayName = 'proto.iris_bil.BilDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilDataRequest.All = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.BilDataRequest.All, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilDataRequest.All.displayName = 'proto.iris_bil.BilDataRequest.All';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.BilDataRequest.UplinkTimeSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilDataRequest.UplinkTimeSpan.displayName = 'proto.iris_bil.BilDataRequest.UplinkTimeSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.BilDataRequest.DownlinkTimeSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilDataRequest.DownlinkTimeSpan.displayName = 'proto.iris_bil.BilDataRequest.DownlinkTimeSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilDataRequest.UlidSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.BilDataRequest.UlidSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilDataRequest.UlidSpan.displayName = 'proto.iris_bil.BilDataRequest.UlidSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilDataRequest.LookupIdSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.BilDataRequest.LookupIdSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilDataRequest.LookupIdSpan.displayName = 'proto.iris_bil.BilDataRequest.LookupIdSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilDataRequest.Latest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.BilDataRequest.Latest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilDataRequest.Latest.displayName = 'proto.iris_bil.BilDataRequest.Latest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.BilDataRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iris_bil.BilDataRequestResponse.repeatedFields_, null);
};
goog.inherits(proto.iris_bil.BilDataRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.BilDataRequestResponse.displayName = 'proto.iris_bil.BilDataRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iris_bil.Image.repeatedFields_, null);
};
goog.inherits(proto.iris_bil.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.Image.displayName = 'proto.iris_bil.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.InternalCommandAck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iris_bil.InternalCommandAck.repeatedFields_, null);
};
goog.inherits(proto.iris_bil.InternalCommandAck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.InternalCommandAck.displayName = 'proto.iris_bil.InternalCommandAck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.CommandUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iris_bil.CommandUpdate.repeatedFields_, null);
};
goog.inherits(proto.iris_bil.CommandUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.CommandUpdate.displayName = 'proto.iris_bil.CommandUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.PingMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.PingMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.PingMessage.displayName = 'proto.iris_bil.PingMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.iris_bil.BilIngest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.iris_bil.BilIngest.DataCase = {
  DATA_NOT_SET: 0,
  DATA_REQUEST: 1,
  COMMAND: 2
};

/**
 * @return {proto.iris_bil.BilIngest.DataCase}
 */
proto.iris_bil.BilIngest.prototype.getDataCase = function() {
  return /** @type {proto.iris_bil.BilIngest.DataCase} */(jspb.Message.computeOneofCase(this, proto.iris_bil.BilIngest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilIngest.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilIngest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilIngest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilIngest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataRequest: (f = msg.getDataRequest()) && proto.iris_bil.BilDataRequest.toObject(includeInstance, f),
    command: (f = msg.getCommand()) && db_pb.Command.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilIngest}
 */
proto.iris_bil.BilIngest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilIngest;
  return proto.iris_bil.BilIngest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilIngest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilIngest}
 */
proto.iris_bil.BilIngest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iris_bil.BilDataRequest;
      reader.readMessage(value,proto.iris_bil.BilDataRequest.deserializeBinaryFromReader);
      msg.setDataRequest(value);
      break;
    case 2:
      var value = new db_pb.Command;
      reader.readMessage(value,db_pb.Command.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilIngest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilIngest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilIngest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilIngest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iris_bil.BilDataRequest.serializeBinaryToWriter
    );
  }
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      db_pb.Command.serializeBinaryToWriter
    );
  }
};


/**
 * optional BilDataRequest data_request = 1;
 * @return {?proto.iris_bil.BilDataRequest}
 */
proto.iris_bil.BilIngest.prototype.getDataRequest = function() {
  return /** @type{?proto.iris_bil.BilDataRequest} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.BilDataRequest, 1));
};


/**
 * @param {?proto.iris_bil.BilDataRequest|undefined} value
 * @return {!proto.iris_bil.BilIngest} returns this
*/
proto.iris_bil.BilIngest.prototype.setDataRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.iris_bil.BilIngest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilIngest} returns this
 */
proto.iris_bil.BilIngest.prototype.clearDataRequest = function() {
  return this.setDataRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilIngest.prototype.hasDataRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Command command = 2;
 * @return {?proto.iris_bil.Command}
 */
proto.iris_bil.BilIngest.prototype.getCommand = function() {
  return /** @type{?proto.iris_bil.Command} */ (
    jspb.Message.getWrapperField(this, db_pb.Command, 2));
};


/**
 * @param {?proto.iris_bil.Command|undefined} value
 * @return {!proto.iris_bil.BilIngest} returns this
*/
proto.iris_bil.BilIngest.prototype.setCommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.iris_bil.BilIngest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilIngest} returns this
 */
proto.iris_bil.BilIngest.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilIngest.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.iris_bil.BilData.oneofGroups_ = [[1,10,11,20,21,30]];

/**
 * @enum {number}
 */
proto.iris_bil.BilData.DataCase = {
  DATA_NOT_SET: 0,
  BIL_STATUS: 1,
  CMD_ACK: 10,
  CMD_UPDATE: 11,
  TELEM: 20,
  EVENT: 21,
  IMAGE: 30
};

/**
 * @return {proto.iris_bil.BilData.DataCase}
 */
proto.iris_bil.BilData.prototype.getDataCase = function() {
  return /** @type {proto.iris_bil.BilData.DataCase} */(jspb.Message.computeOneofCase(this, proto.iris_bil.BilData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilData.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilData.toObject = function(includeInstance, msg) {
  var f, obj = {
    bilStatus: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cmdAck: (f = msg.getCmdAck()) && proto.iris_bil.InternalCommandAck.toObject(includeInstance, f),
    cmdUpdate: (f = msg.getCmdUpdate()) && proto.iris_bil.CommandUpdate.toObject(includeInstance, f),
    telem: (f = msg.getTelem()) && db_pb.TelemItem.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && db_pb.Event.toObject(includeInstance, f),
    image: (f = msg.getImage()) && proto.iris_bil.Image.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilData}
 */
proto.iris_bil.BilData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilData;
  return proto.iris_bil.BilData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilData}
 */
proto.iris_bil.BilData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.iris_bil.BilStatus} */ (reader.readEnum());
      msg.setBilStatus(value);
      break;
    case 10:
      var value = new proto.iris_bil.InternalCommandAck;
      reader.readMessage(value,proto.iris_bil.InternalCommandAck.deserializeBinaryFromReader);
      msg.setCmdAck(value);
      break;
    case 11:
      var value = new proto.iris_bil.CommandUpdate;
      reader.readMessage(value,proto.iris_bil.CommandUpdate.deserializeBinaryFromReader);
      msg.setCmdUpdate(value);
      break;
    case 20:
      var value = new db_pb.TelemItem;
      reader.readMessage(value,db_pb.TelemItem.deserializeBinaryFromReader);
      msg.setTelem(value);
      break;
    case 21:
      var value = new db_pb.Event;
      reader.readMessage(value,db_pb.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 30:
      var value = new proto.iris_bil.Image;
      reader.readMessage(value,proto.iris_bil.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.iris_bil.BilStatus} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCmdAck();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.iris_bil.InternalCommandAck.serializeBinaryToWriter
    );
  }
  f = message.getCmdUpdate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.iris_bil.CommandUpdate.serializeBinaryToWriter
    );
  }
  f = message.getTelem();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      db_pb.TelemItem.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      db_pb.Event.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.iris_bil.Image.serializeBinaryToWriter
    );
  }
};


/**
 * optional BilStatus bil_status = 1;
 * @return {!proto.iris_bil.BilStatus}
 */
proto.iris_bil.BilData.prototype.getBilStatus = function() {
  return /** @type {!proto.iris_bil.BilStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.iris_bil.BilStatus} value
 * @return {!proto.iris_bil.BilData} returns this
 */
proto.iris_bil.BilData.prototype.setBilStatus = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.iris_bil.BilData.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.iris_bil.BilData} returns this
 */
proto.iris_bil.BilData.prototype.clearBilStatus = function() {
  return jspb.Message.setOneofField(this, 1, proto.iris_bil.BilData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilData.prototype.hasBilStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InternalCommandAck cmd_ack = 10;
 * @return {?proto.iris_bil.InternalCommandAck}
 */
proto.iris_bil.BilData.prototype.getCmdAck = function() {
  return /** @type{?proto.iris_bil.InternalCommandAck} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.InternalCommandAck, 10));
};


/**
 * @param {?proto.iris_bil.InternalCommandAck|undefined} value
 * @return {!proto.iris_bil.BilData} returns this
*/
proto.iris_bil.BilData.prototype.setCmdAck = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.iris_bil.BilData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilData} returns this
 */
proto.iris_bil.BilData.prototype.clearCmdAck = function() {
  return this.setCmdAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilData.prototype.hasCmdAck = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional CommandUpdate cmd_update = 11;
 * @return {?proto.iris_bil.CommandUpdate}
 */
proto.iris_bil.BilData.prototype.getCmdUpdate = function() {
  return /** @type{?proto.iris_bil.CommandUpdate} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.CommandUpdate, 11));
};


/**
 * @param {?proto.iris_bil.CommandUpdate|undefined} value
 * @return {!proto.iris_bil.BilData} returns this
*/
proto.iris_bil.BilData.prototype.setCmdUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.iris_bil.BilData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilData} returns this
 */
proto.iris_bil.BilData.prototype.clearCmdUpdate = function() {
  return this.setCmdUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilData.prototype.hasCmdUpdate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional TelemItem telem = 20;
 * @return {?proto.iris_bil.TelemItem}
 */
proto.iris_bil.BilData.prototype.getTelem = function() {
  return /** @type{?proto.iris_bil.TelemItem} */ (
    jspb.Message.getWrapperField(this, db_pb.TelemItem, 20));
};


/**
 * @param {?proto.iris_bil.TelemItem|undefined} value
 * @return {!proto.iris_bil.BilData} returns this
*/
proto.iris_bil.BilData.prototype.setTelem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.iris_bil.BilData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilData} returns this
 */
proto.iris_bil.BilData.prototype.clearTelem = function() {
  return this.setTelem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilData.prototype.hasTelem = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Event event = 21;
 * @return {?proto.iris_bil.Event}
 */
proto.iris_bil.BilData.prototype.getEvent = function() {
  return /** @type{?proto.iris_bil.Event} */ (
    jspb.Message.getWrapperField(this, db_pb.Event, 21));
};


/**
 * @param {?proto.iris_bil.Event|undefined} value
 * @return {!proto.iris_bil.BilData} returns this
*/
proto.iris_bil.BilData.prototype.setEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.iris_bil.BilData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilData} returns this
 */
proto.iris_bil.BilData.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilData.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional Image image = 30;
 * @return {?proto.iris_bil.Image}
 */
proto.iris_bil.BilData.prototype.getImage = function() {
  return /** @type{?proto.iris_bil.Image} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.Image, 30));
};


/**
 * @param {?proto.iris_bil.Image|undefined} value
 * @return {!proto.iris_bil.BilData} returns this
*/
proto.iris_bil.BilData.prototype.setImage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.iris_bil.BilData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilData} returns this
 */
proto.iris_bil.BilData.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilData.prototype.hasImage = function() {
  return jspb.Message.getField(this, 30) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.iris_bil.BilDataRequest.oneofGroups_ = [[3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.iris_bil.BilDataRequest.QueryCase = {
  QUERY_NOT_SET: 0,
  ALL: 3,
  UL_TIME_SPAN: 4,
  DL_TIME_SPAN: 5,
  ULID_SPAN: 6,
  LOOKUPID_SPAN: 7,
  LATEST: 8
};

/**
 * @return {proto.iris_bil.BilDataRequest.QueryCase}
 */
proto.iris_bil.BilDataRequest.prototype.getQueryCase = function() {
  return /** @type {proto.iris_bil.BilDataRequest.QueryCase} */(jspb.Message.computeOneofCase(this, proto.iris_bil.BilDataRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    streamNameFilter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    all: (f = msg.getAll()) && proto.iris_bil.BilDataRequest.All.toObject(includeInstance, f),
    ulTimeSpan: (f = msg.getUlTimeSpan()) && proto.iris_bil.BilDataRequest.UplinkTimeSpan.toObject(includeInstance, f),
    dlTimeSpan: (f = msg.getDlTimeSpan()) && proto.iris_bil.BilDataRequest.DownlinkTimeSpan.toObject(includeInstance, f),
    ulidSpan: (f = msg.getUlidSpan()) && proto.iris_bil.BilDataRequest.UlidSpan.toObject(includeInstance, f),
    lookupidSpan: (f = msg.getLookupidSpan()) && proto.iris_bil.BilDataRequest.LookupIdSpan.toObject(includeInstance, f),
    latest: (f = msg.getLatest()) && proto.iris_bil.BilDataRequest.Latest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilDataRequest}
 */
proto.iris_bil.BilDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilDataRequest;
  return proto.iris_bil.BilDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilDataRequest}
 */
proto.iris_bil.BilDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.iris_bil.BilDataRequest.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamNameFilter(value);
      break;
    case 3:
      var value = new proto.iris_bil.BilDataRequest.All;
      reader.readMessage(value,proto.iris_bil.BilDataRequest.All.deserializeBinaryFromReader);
      msg.setAll(value);
      break;
    case 4:
      var value = new proto.iris_bil.BilDataRequest.UplinkTimeSpan;
      reader.readMessage(value,proto.iris_bil.BilDataRequest.UplinkTimeSpan.deserializeBinaryFromReader);
      msg.setUlTimeSpan(value);
      break;
    case 5:
      var value = new proto.iris_bil.BilDataRequest.DownlinkTimeSpan;
      reader.readMessage(value,proto.iris_bil.BilDataRequest.DownlinkTimeSpan.deserializeBinaryFromReader);
      msg.setDlTimeSpan(value);
      break;
    case 6:
      var value = new proto.iris_bil.BilDataRequest.UlidSpan;
      reader.readMessage(value,proto.iris_bil.BilDataRequest.UlidSpan.deserializeBinaryFromReader);
      msg.setUlidSpan(value);
      break;
    case 7:
      var value = new proto.iris_bil.BilDataRequest.LookupIdSpan;
      reader.readMessage(value,proto.iris_bil.BilDataRequest.LookupIdSpan.deserializeBinaryFromReader);
      msg.setLookupidSpan(value);
      break;
    case 8:
      var value = new proto.iris_bil.BilDataRequest.Latest;
      reader.readMessage(value,proto.iris_bil.BilDataRequest.Latest.deserializeBinaryFromReader);
      msg.setLatest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAll();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iris_bil.BilDataRequest.All.serializeBinaryToWriter
    );
  }
  f = message.getUlTimeSpan();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.iris_bil.BilDataRequest.UplinkTimeSpan.serializeBinaryToWriter
    );
  }
  f = message.getDlTimeSpan();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.iris_bil.BilDataRequest.DownlinkTimeSpan.serializeBinaryToWriter
    );
  }
  f = message.getUlidSpan();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.iris_bil.BilDataRequest.UlidSpan.serializeBinaryToWriter
    );
  }
  f = message.getLookupidSpan();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.iris_bil.BilDataRequest.LookupIdSpan.serializeBinaryToWriter
    );
  }
  f = message.getLatest();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.iris_bil.BilDataRequest.Latest.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.iris_bil.BilDataRequest.Type = {
  COMMANDRECORD: 0,
  TELEMETRY: 10,
  EVENTS: 20,
  IMAGES: 30
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilDataRequest.All.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilDataRequest.All.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilDataRequest.All} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.All.toObject = function(includeInstance, msg) {
  var f, obj = {
    all: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilDataRequest.All}
 */
proto.iris_bil.BilDataRequest.All.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilDataRequest.All;
  return proto.iris_bil.BilDataRequest.All.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilDataRequest.All} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilDataRequest.All}
 */
proto.iris_bil.BilDataRequest.All.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilDataRequest.All.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilDataRequest.All.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilDataRequest.All} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.All.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAll();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool all = 1;
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.All.prototype.getAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.iris_bil.BilDataRequest.All} returns this
 */
proto.iris_bil.BilDataRequest.All.prototype.setAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilDataRequest.UplinkTimeSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilDataRequest.UplinkTimeSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && time_pb.IrisUplinkTimestamp.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && time_pb.IrisUplinkTimestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilDataRequest.UplinkTimeSpan}
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilDataRequest.UplinkTimeSpan;
  return proto.iris_bil.BilDataRequest.UplinkTimeSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilDataRequest.UplinkTimeSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilDataRequest.UplinkTimeSpan}
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new time_pb.IrisUplinkTimestamp;
      reader.readMessage(value,time_pb.IrisUplinkTimestamp.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new time_pb.IrisUplinkTimestamp;
      reader.readMessage(value,time_pb.IrisUplinkTimestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilDataRequest.UplinkTimeSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilDataRequest.UplinkTimeSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      time_pb.IrisUplinkTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      time_pb.IrisUplinkTimestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional IrisUplinkTimestamp start = 1;
 * @return {?proto.iris_bil.IrisUplinkTimestamp}
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.getStart = function() {
  return /** @type{?proto.iris_bil.IrisUplinkTimestamp} */ (
    jspb.Message.getWrapperField(this, time_pb.IrisUplinkTimestamp, 1));
};


/**
 * @param {?proto.iris_bil.IrisUplinkTimestamp|undefined} value
 * @return {!proto.iris_bil.BilDataRequest.UplinkTimeSpan} returns this
*/
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest.UplinkTimeSpan} returns this
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional IrisUplinkTimestamp end = 2;
 * @return {?proto.iris_bil.IrisUplinkTimestamp}
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.getEnd = function() {
  return /** @type{?proto.iris_bil.IrisUplinkTimestamp} */ (
    jspb.Message.getWrapperField(this, time_pb.IrisUplinkTimestamp, 2));
};


/**
 * @param {?proto.iris_bil.IrisUplinkTimestamp|undefined} value
 * @return {!proto.iris_bil.BilDataRequest.UplinkTimeSpan} returns this
*/
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.setEnd = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest.UplinkTimeSpan} returns this
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.clearEnd = function() {
  return this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.UplinkTimeSpan.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilDataRequest.DownlinkTimeSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && time_pb.IrisDownlinkTimestamp.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && time_pb.IrisDownlinkTimestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan}
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilDataRequest.DownlinkTimeSpan;
  return proto.iris_bil.BilDataRequest.DownlinkTimeSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan}
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new time_pb.IrisDownlinkTimestamp;
      reader.readMessage(value,time_pb.IrisDownlinkTimestamp.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new time_pb.IrisDownlinkTimestamp;
      reader.readMessage(value,time_pb.IrisDownlinkTimestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilDataRequest.DownlinkTimeSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      time_pb.IrisDownlinkTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      time_pb.IrisDownlinkTimestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional IrisDownlinkTimestamp start = 1;
 * @return {?proto.iris_bil.IrisDownlinkTimestamp}
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.getStart = function() {
  return /** @type{?proto.iris_bil.IrisDownlinkTimestamp} */ (
    jspb.Message.getWrapperField(this, time_pb.IrisDownlinkTimestamp, 1));
};


/**
 * @param {?proto.iris_bil.IrisDownlinkTimestamp|undefined} value
 * @return {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan} returns this
*/
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan} returns this
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional IrisDownlinkTimestamp end = 2;
 * @return {?proto.iris_bil.IrisDownlinkTimestamp}
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.getEnd = function() {
  return /** @type{?proto.iris_bil.IrisDownlinkTimestamp} */ (
    jspb.Message.getWrapperField(this, time_pb.IrisDownlinkTimestamp, 2));
};


/**
 * @param {?proto.iris_bil.IrisDownlinkTimestamp|undefined} value
 * @return {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan} returns this
*/
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.setEnd = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest.DownlinkTimeSpan} returns this
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.clearEnd = function() {
  return this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.DownlinkTimeSpan.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilDataRequest.UlidSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilDataRequest.UlidSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilDataRequest.UlidSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.UlidSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, ""),
    end: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilDataRequest.UlidSpan}
 */
proto.iris_bil.BilDataRequest.UlidSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilDataRequest.UlidSpan;
  return proto.iris_bil.BilDataRequest.UlidSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilDataRequest.UlidSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilDataRequest.UlidSpan}
 */
proto.iris_bil.BilDataRequest.UlidSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilDataRequest.UlidSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilDataRequest.UlidSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilDataRequest.UlidSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.UlidSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string start = 1;
 * @return {string}
 */
proto.iris_bil.BilDataRequest.UlidSpan.prototype.getStart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.BilDataRequest.UlidSpan} returns this
 */
proto.iris_bil.BilDataRequest.UlidSpan.prototype.setStart = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string end = 2;
 * @return {string}
 */
proto.iris_bil.BilDataRequest.UlidSpan.prototype.getEnd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.BilDataRequest.UlidSpan} returns this
 */
proto.iris_bil.BilDataRequest.UlidSpan.prototype.setEnd = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilDataRequest.LookupIdSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilDataRequest.LookupIdSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, 0),
    end: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilDataRequest.LookupIdSpan}
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilDataRequest.LookupIdSpan;
  return proto.iris_bil.BilDataRequest.LookupIdSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilDataRequest.LookupIdSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilDataRequest.LookupIdSpan}
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilDataRequest.LookupIdSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilDataRequest.LookupIdSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 start = 1;
 * @return {number}
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.iris_bil.BilDataRequest.LookupIdSpan} returns this
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 end = 2;
 * @return {number}
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iris_bil.BilDataRequest.LookupIdSpan} returns this
 */
proto.iris_bil.BilDataRequest.LookupIdSpan.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilDataRequest.Latest.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilDataRequest.Latest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilDataRequest.Latest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.Latest.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilDataRequest.Latest}
 */
proto.iris_bil.BilDataRequest.Latest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilDataRequest.Latest;
  return proto.iris_bil.BilDataRequest.Latest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilDataRequest.Latest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilDataRequest.Latest}
 */
proto.iris_bil.BilDataRequest.Latest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilDataRequest.Latest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilDataRequest.Latest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilDataRequest.Latest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequest.Latest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 num = 1;
 * @return {number}
 */
proto.iris_bil.BilDataRequest.Latest.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.iris_bil.BilDataRequest.Latest} returns this
 */
proto.iris_bil.BilDataRequest.Latest.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Type type = 1;
 * @return {!proto.iris_bil.BilDataRequest.Type}
 */
proto.iris_bil.BilDataRequest.prototype.getType = function() {
  return /** @type {!proto.iris_bil.BilDataRequest.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.iris_bil.BilDataRequest.Type} value
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string stream_name_filter = 2;
 * @return {string}
 */
proto.iris_bil.BilDataRequest.prototype.getStreamNameFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.setStreamNameFilter = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.clearStreamNameFilter = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.prototype.hasStreamNameFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional All all = 3;
 * @return {?proto.iris_bil.BilDataRequest.All}
 */
proto.iris_bil.BilDataRequest.prototype.getAll = function() {
  return /** @type{?proto.iris_bil.BilDataRequest.All} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.BilDataRequest.All, 3));
};


/**
 * @param {?proto.iris_bil.BilDataRequest.All|undefined} value
 * @return {!proto.iris_bil.BilDataRequest} returns this
*/
proto.iris_bil.BilDataRequest.prototype.setAll = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.iris_bil.BilDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.clearAll = function() {
  return this.setAll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.prototype.hasAll = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UplinkTimeSpan ul_time_span = 4;
 * @return {?proto.iris_bil.BilDataRequest.UplinkTimeSpan}
 */
proto.iris_bil.BilDataRequest.prototype.getUlTimeSpan = function() {
  return /** @type{?proto.iris_bil.BilDataRequest.UplinkTimeSpan} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.BilDataRequest.UplinkTimeSpan, 4));
};


/**
 * @param {?proto.iris_bil.BilDataRequest.UplinkTimeSpan|undefined} value
 * @return {!proto.iris_bil.BilDataRequest} returns this
*/
proto.iris_bil.BilDataRequest.prototype.setUlTimeSpan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.iris_bil.BilDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.clearUlTimeSpan = function() {
  return this.setUlTimeSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.prototype.hasUlTimeSpan = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DownlinkTimeSpan dl_time_span = 5;
 * @return {?proto.iris_bil.BilDataRequest.DownlinkTimeSpan}
 */
proto.iris_bil.BilDataRequest.prototype.getDlTimeSpan = function() {
  return /** @type{?proto.iris_bil.BilDataRequest.DownlinkTimeSpan} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.BilDataRequest.DownlinkTimeSpan, 5));
};


/**
 * @param {?proto.iris_bil.BilDataRequest.DownlinkTimeSpan|undefined} value
 * @return {!proto.iris_bil.BilDataRequest} returns this
*/
proto.iris_bil.BilDataRequest.prototype.setDlTimeSpan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.iris_bil.BilDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.clearDlTimeSpan = function() {
  return this.setDlTimeSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.prototype.hasDlTimeSpan = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional UlidSpan ulid_span = 6;
 * @return {?proto.iris_bil.BilDataRequest.UlidSpan}
 */
proto.iris_bil.BilDataRequest.prototype.getUlidSpan = function() {
  return /** @type{?proto.iris_bil.BilDataRequest.UlidSpan} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.BilDataRequest.UlidSpan, 6));
};


/**
 * @param {?proto.iris_bil.BilDataRequest.UlidSpan|undefined} value
 * @return {!proto.iris_bil.BilDataRequest} returns this
*/
proto.iris_bil.BilDataRequest.prototype.setUlidSpan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.iris_bil.BilDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.clearUlidSpan = function() {
  return this.setUlidSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.prototype.hasUlidSpan = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional LookupIdSpan lookupId_span = 7;
 * @return {?proto.iris_bil.BilDataRequest.LookupIdSpan}
 */
proto.iris_bil.BilDataRequest.prototype.getLookupidSpan = function() {
  return /** @type{?proto.iris_bil.BilDataRequest.LookupIdSpan} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.BilDataRequest.LookupIdSpan, 7));
};


/**
 * @param {?proto.iris_bil.BilDataRequest.LookupIdSpan|undefined} value
 * @return {!proto.iris_bil.BilDataRequest} returns this
*/
proto.iris_bil.BilDataRequest.prototype.setLookupidSpan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.iris_bil.BilDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.clearLookupidSpan = function() {
  return this.setLookupidSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.prototype.hasLookupidSpan = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Latest latest = 8;
 * @return {?proto.iris_bil.BilDataRequest.Latest}
 */
proto.iris_bil.BilDataRequest.prototype.getLatest = function() {
  return /** @type{?proto.iris_bil.BilDataRequest.Latest} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.BilDataRequest.Latest, 8));
};


/**
 * @param {?proto.iris_bil.BilDataRequest.Latest|undefined} value
 * @return {!proto.iris_bil.BilDataRequest} returns this
*/
proto.iris_bil.BilDataRequest.prototype.setLatest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.iris_bil.BilDataRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.BilDataRequest} returns this
 */
proto.iris_bil.BilDataRequest.prototype.clearLatest = function() {
  return this.setLatest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.BilDataRequest.prototype.hasLatest = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iris_bil.BilDataRequestResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.BilDataRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.BilDataRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.BilDataRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.iris_bil.BilData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.BilDataRequestResponse}
 */
proto.iris_bil.BilDataRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.BilDataRequestResponse;
  return proto.iris_bil.BilDataRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.BilDataRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.BilDataRequestResponse}
 */
proto.iris_bil.BilDataRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.iris_bil.BilData;
      reader.readMessage(value,proto.iris_bil.BilData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.BilDataRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.BilDataRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.BilDataRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.BilDataRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.iris_bil.BilData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.iris_bil.BilDataRequestResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.iris_bil.BilDataRequestResponse} returns this
 */
proto.iris_bil.BilDataRequestResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated BilData data = 2;
 * @return {!Array<!proto.iris_bil.BilData>}
 */
proto.iris_bil.BilDataRequestResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.iris_bil.BilData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iris_bil.BilData, 2));
};


/**
 * @param {!Array<!proto.iris_bil.BilData>} value
 * @return {!proto.iris_bil.BilDataRequestResponse} returns this
*/
proto.iris_bil.BilDataRequestResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.iris_bil.BilData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.BilData}
 */
proto.iris_bil.BilDataRequestResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.iris_bil.BilData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.BilDataRequestResponse} returns this
 */
proto.iris_bil.BilDataRequestResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iris_bil.Image.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    dbid: (f = msg.getDbid()) && db_pb.DatabaseId.toObject(includeInstance, f),
    b64Encoding: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestampsList: jspb.Message.toObjectList(msg.getTimestampsList(),
    time_pb.IrisDownlinkTimestamp.toObject, includeInstance),
    fileName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.Image}
 */
proto.iris_bil.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.Image;
  return proto.iris_bil.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.Image}
 */
proto.iris_bil.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new db_pb.DatabaseId;
      reader.readMessage(value,db_pb.DatabaseId.deserializeBinaryFromReader);
      msg.setDbid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setB64Encoding(value);
      break;
    case 3:
      var value = new time_pb.IrisDownlinkTimestamp;
      reader.readMessage(value,time_pb.IrisDownlinkTimestamp.deserializeBinaryFromReader);
      msg.addTimestamps(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDbid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      db_pb.DatabaseId.serializeBinaryToWriter
    );
  }
  f = message.getB64Encoding();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      time_pb.IrisDownlinkTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional DatabaseId dbid = 1;
 * @return {?proto.iris_bil.DatabaseId}
 */
proto.iris_bil.Image.prototype.getDbid = function() {
  return /** @type{?proto.iris_bil.DatabaseId} */ (
    jspb.Message.getWrapperField(this, db_pb.DatabaseId, 1));
};


/**
 * @param {?proto.iris_bil.DatabaseId|undefined} value
 * @return {!proto.iris_bil.Image} returns this
*/
proto.iris_bil.Image.prototype.setDbid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.Image} returns this
 */
proto.iris_bil.Image.prototype.clearDbid = function() {
  return this.setDbid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.Image.prototype.hasDbid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string b64_encoding = 2;
 * @return {string}
 */
proto.iris_bil.Image.prototype.getB64Encoding = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.Image} returns this
 */
proto.iris_bil.Image.prototype.setB64Encoding = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated IrisDownlinkTimestamp timestamps = 3;
 * @return {!Array<!proto.iris_bil.IrisDownlinkTimestamp>}
 */
proto.iris_bil.Image.prototype.getTimestampsList = function() {
  return /** @type{!Array<!proto.iris_bil.IrisDownlinkTimestamp>} */ (
    jspb.Message.getRepeatedWrapperField(this, time_pb.IrisDownlinkTimestamp, 3));
};


/**
 * @param {!Array<!proto.iris_bil.IrisDownlinkTimestamp>} value
 * @return {!proto.iris_bil.Image} returns this
*/
proto.iris_bil.Image.prototype.setTimestampsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.iris_bil.IrisDownlinkTimestamp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.IrisDownlinkTimestamp}
 */
proto.iris_bil.Image.prototype.addTimestamps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iris_bil.IrisDownlinkTimestamp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.Image} returns this
 */
proto.iris_bil.Image.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};


/**
 * optional string file_name = 4;
 * @return {string}
 */
proto.iris_bil.Image.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.Image} returns this
 */
proto.iris_bil.Image.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.iris_bil.Image.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.Image} returns this
 */
proto.iris_bil.Image.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iris_bil.InternalCommandAck.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.InternalCommandAck.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.InternalCommandAck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.InternalCommandAck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.InternalCommandAck.toObject = function(includeInstance, msg) {
  var f, obj = {
    dbid: (f = msg.getDbid()) && db_pb.DatabaseId.toObject(includeInstance, f),
    lookupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestampsList: jspb.Message.toObjectList(msg.getTimestampsList(),
    time_pb.IrisUplinkTimestamp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.InternalCommandAck}
 */
proto.iris_bil.InternalCommandAck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.InternalCommandAck;
  return proto.iris_bil.InternalCommandAck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.InternalCommandAck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.InternalCommandAck}
 */
proto.iris_bil.InternalCommandAck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new db_pb.DatabaseId;
      reader.readMessage(value,db_pb.DatabaseId.deserializeBinaryFromReader);
      msg.setDbid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLookupid(value);
      break;
    case 3:
      var value = new time_pb.IrisUplinkTimestamp;
      reader.readMessage(value,time_pb.IrisUplinkTimestamp.deserializeBinaryFromReader);
      msg.addTimestamps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.InternalCommandAck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.InternalCommandAck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.InternalCommandAck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.InternalCommandAck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDbid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      db_pb.DatabaseId.serializeBinaryToWriter
    );
  }
  f = message.getLookupid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      time_pb.IrisUplinkTimestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatabaseId dbid = 1;
 * @return {?proto.iris_bil.DatabaseId}
 */
proto.iris_bil.InternalCommandAck.prototype.getDbid = function() {
  return /** @type{?proto.iris_bil.DatabaseId} */ (
    jspb.Message.getWrapperField(this, db_pb.DatabaseId, 1));
};


/**
 * @param {?proto.iris_bil.DatabaseId|undefined} value
 * @return {!proto.iris_bil.InternalCommandAck} returns this
*/
proto.iris_bil.InternalCommandAck.prototype.setDbid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.InternalCommandAck} returns this
 */
proto.iris_bil.InternalCommandAck.prototype.clearDbid = function() {
  return this.setDbid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.InternalCommandAck.prototype.hasDbid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 lookupId = 2;
 * @return {number}
 */
proto.iris_bil.InternalCommandAck.prototype.getLookupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iris_bil.InternalCommandAck} returns this
 */
proto.iris_bil.InternalCommandAck.prototype.setLookupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated IrisUplinkTimestamp timestamps = 3;
 * @return {!Array<!proto.iris_bil.IrisUplinkTimestamp>}
 */
proto.iris_bil.InternalCommandAck.prototype.getTimestampsList = function() {
  return /** @type{!Array<!proto.iris_bil.IrisUplinkTimestamp>} */ (
    jspb.Message.getRepeatedWrapperField(this, time_pb.IrisUplinkTimestamp, 3));
};


/**
 * @param {!Array<!proto.iris_bil.IrisUplinkTimestamp>} value
 * @return {!proto.iris_bil.InternalCommandAck} returns this
*/
proto.iris_bil.InternalCommandAck.prototype.setTimestampsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.iris_bil.IrisUplinkTimestamp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.IrisUplinkTimestamp}
 */
proto.iris_bil.InternalCommandAck.prototype.addTimestamps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iris_bil.IrisUplinkTimestamp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.InternalCommandAck} returns this
 */
proto.iris_bil.InternalCommandAck.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iris_bil.CommandUpdate.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.CommandUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.CommandUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.CommandUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.CommandUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    dbid: (f = msg.getDbid()) && db_pb.DatabaseId.toObject(includeInstance, f),
    lookupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timesList: jspb.Message.toObjectList(msg.getTimesList(),
    time_pb.IrisUplinkTimestamp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.CommandUpdate}
 */
proto.iris_bil.CommandUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.CommandUpdate;
  return proto.iris_bil.CommandUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.CommandUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.CommandUpdate}
 */
proto.iris_bil.CommandUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new db_pb.DatabaseId;
      reader.readMessage(value,db_pb.DatabaseId.deserializeBinaryFromReader);
      msg.setDbid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLookupid(value);
      break;
    case 3:
      var value = new time_pb.IrisUplinkTimestamp;
      reader.readMessage(value,time_pb.IrisUplinkTimestamp.deserializeBinaryFromReader);
      msg.addTimes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.CommandUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.CommandUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.CommandUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.CommandUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDbid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      db_pb.DatabaseId.serializeBinaryToWriter
    );
  }
  f = message.getLookupid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      time_pb.IrisUplinkTimestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatabaseId dbid = 1;
 * @return {?proto.iris_bil.DatabaseId}
 */
proto.iris_bil.CommandUpdate.prototype.getDbid = function() {
  return /** @type{?proto.iris_bil.DatabaseId} */ (
    jspb.Message.getWrapperField(this, db_pb.DatabaseId, 1));
};


/**
 * @param {?proto.iris_bil.DatabaseId|undefined} value
 * @return {!proto.iris_bil.CommandUpdate} returns this
*/
proto.iris_bil.CommandUpdate.prototype.setDbid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.CommandUpdate} returns this
 */
proto.iris_bil.CommandUpdate.prototype.clearDbid = function() {
  return this.setDbid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.CommandUpdate.prototype.hasDbid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 lookupId = 2;
 * @return {number}
 */
proto.iris_bil.CommandUpdate.prototype.getLookupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iris_bil.CommandUpdate} returns this
 */
proto.iris_bil.CommandUpdate.prototype.setLookupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated IrisUplinkTimestamp times = 3;
 * @return {!Array<!proto.iris_bil.IrisUplinkTimestamp>}
 */
proto.iris_bil.CommandUpdate.prototype.getTimesList = function() {
  return /** @type{!Array<!proto.iris_bil.IrisUplinkTimestamp>} */ (
    jspb.Message.getRepeatedWrapperField(this, time_pb.IrisUplinkTimestamp, 3));
};


/**
 * @param {!Array<!proto.iris_bil.IrisUplinkTimestamp>} value
 * @return {!proto.iris_bil.CommandUpdate} returns this
*/
proto.iris_bil.CommandUpdate.prototype.setTimesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.iris_bil.IrisUplinkTimestamp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.IrisUplinkTimestamp}
 */
proto.iris_bil.CommandUpdate.prototype.addTimes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iris_bil.IrisUplinkTimestamp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.CommandUpdate} returns this
 */
proto.iris_bil.CommandUpdate.prototype.clearTimesList = function() {
  return this.setTimesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.PingMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.PingMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.PingMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.PingMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.PingMessage}
 */
proto.iris_bil.PingMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.PingMessage;
  return proto.iris_bil.PingMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.PingMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.PingMessage}
 */
proto.iris_bil.PingMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.PingMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.PingMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.PingMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.PingMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string payload = 1;
 * @return {string}
 */
proto.iris_bil.PingMessage.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.PingMessage} returns this
 */
proto.iris_bil.PingMessage.prototype.setPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.iris_bil.BilStatus = {
  CONNECTING_DB: 0,
  CONNECTED_TO_DB: 10,
  CRASHED: 20
};

goog.object.extend(exports, proto.iris_bil);
