// source: db.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var time_pb = require('./time_pb.js');
goog.object.extend(proto, time_pb);
goog.exportSymbol('proto.iris_bil.Command', null, global);
goog.exportSymbol('proto.iris_bil.Command.CommandType', null, global);
goog.exportSymbol('proto.iris_bil.CommandArg', null, global);
goog.exportSymbol('proto.iris_bil.DataUnitValue', null, global);
goog.exportSymbol('proto.iris_bil.DataUnitValue.ValCase', null, global);
goog.exportSymbol('proto.iris_bil.DatabaseId', null, global);
goog.exportSymbol('proto.iris_bil.Event', null, global);
goog.exportSymbol('proto.iris_bil.EventArg', null, global);
goog.exportSymbol('proto.iris_bil.TelemItem', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.DatabaseId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.DatabaseId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.DatabaseId.displayName = 'proto.iris_bil.DatabaseId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.DataUnitValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iris_bil.DataUnitValue.oneofGroups_);
};
goog.inherits(proto.iris_bil.DataUnitValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.DataUnitValue.displayName = 'proto.iris_bil.DataUnitValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.TelemItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iris_bil.TelemItem.repeatedFields_, null);
};
goog.inherits(proto.iris_bil.TelemItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.TelemItem.displayName = 'proto.iris_bil.TelemItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.EventArg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.EventArg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.EventArg.displayName = 'proto.iris_bil.EventArg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iris_bil.Event.repeatedFields_, null);
};
goog.inherits(proto.iris_bil.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.Event.displayName = 'proto.iris_bil.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.CommandArg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iris_bil.CommandArg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.CommandArg.displayName = 'proto.iris_bil.CommandArg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iris_bil.Command = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iris_bil.Command.repeatedFields_, null);
};
goog.inherits(proto.iris_bil.Command, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iris_bil.Command.displayName = 'proto.iris_bil.Command';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.DatabaseId.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.DatabaseId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.DatabaseId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.DatabaseId.toObject = function(includeInstance, msg) {
  var f, obj = {
    ulid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lookupid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.DatabaseId}
 */
proto.iris_bil.DatabaseId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.DatabaseId;
  return proto.iris_bil.DatabaseId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.DatabaseId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.DatabaseId}
 */
proto.iris_bil.DatabaseId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUlid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLookupid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.DatabaseId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.DatabaseId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.DatabaseId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.DatabaseId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUlid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLookupid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string ulid = 1;
 * @return {string}
 */
proto.iris_bil.DatabaseId.prototype.getUlid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.DatabaseId} returns this
 */
proto.iris_bil.DatabaseId.prototype.setUlid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 lookupId = 2;
 * @return {number}
 */
proto.iris_bil.DatabaseId.prototype.getLookupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iris_bil.DatabaseId} returns this
 */
proto.iris_bil.DatabaseId.prototype.setLookupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.iris_bil.DataUnitValue.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.iris_bil.DataUnitValue.ValCase = {
  VAL_NOT_SET: 0,
  STR_VAL: 1,
  INT_VAL: 2,
  FLOAT_VAL: 3,
  STRING_VAL: 4
};

/**
 * @return {proto.iris_bil.DataUnitValue.ValCase}
 */
proto.iris_bil.DataUnitValue.prototype.getValCase = function() {
  return /** @type {proto.iris_bil.DataUnitValue.ValCase} */(jspb.Message.computeOneofCase(this, proto.iris_bil.DataUnitValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.DataUnitValue.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.DataUnitValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.DataUnitValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.DataUnitValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    strVal: jspb.Message.getFieldWithDefault(msg, 1, ""),
    intVal: jspb.Message.getFieldWithDefault(msg, 2, 0),
    floatVal: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    stringVal: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.DataUnitValue}
 */
proto.iris_bil.DataUnitValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.DataUnitValue;
  return proto.iris_bil.DataUnitValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.DataUnitValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.DataUnitValue}
 */
proto.iris_bil.DataUnitValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrVal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntVal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloatVal(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringVal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.DataUnitValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.DataUnitValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.DataUnitValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.DataUnitValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string str_val = 1;
 * @return {string}
 */
proto.iris_bil.DataUnitValue.prototype.getStrVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.DataUnitValue} returns this
 */
proto.iris_bil.DataUnitValue.prototype.setStrVal = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.iris_bil.DataUnitValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.iris_bil.DataUnitValue} returns this
 */
proto.iris_bil.DataUnitValue.prototype.clearStrVal = function() {
  return jspb.Message.setOneofField(this, 1, proto.iris_bil.DataUnitValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.DataUnitValue.prototype.hasStrVal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 int_val = 2;
 * @return {number}
 */
proto.iris_bil.DataUnitValue.prototype.getIntVal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.iris_bil.DataUnitValue} returns this
 */
proto.iris_bil.DataUnitValue.prototype.setIntVal = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.iris_bil.DataUnitValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.iris_bil.DataUnitValue} returns this
 */
proto.iris_bil.DataUnitValue.prototype.clearIntVal = function() {
  return jspb.Message.setOneofField(this, 2, proto.iris_bil.DataUnitValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.DataUnitValue.prototype.hasIntVal = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float float_val = 3;
 * @return {number}
 */
proto.iris_bil.DataUnitValue.prototype.getFloatVal = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.iris_bil.DataUnitValue} returns this
 */
proto.iris_bil.DataUnitValue.prototype.setFloatVal = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.iris_bil.DataUnitValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.iris_bil.DataUnitValue} returns this
 */
proto.iris_bil.DataUnitValue.prototype.clearFloatVal = function() {
  return jspb.Message.setOneofField(this, 3, proto.iris_bil.DataUnitValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.DataUnitValue.prototype.hasFloatVal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string string_val = 4;
 * @return {string}
 */
proto.iris_bil.DataUnitValue.prototype.getStringVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.DataUnitValue} returns this
 */
proto.iris_bil.DataUnitValue.prototype.setStringVal = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.iris_bil.DataUnitValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.iris_bil.DataUnitValue} returns this
 */
proto.iris_bil.DataUnitValue.prototype.clearStringVal = function() {
  return jspb.Message.setOneofField(this, 4, proto.iris_bil.DataUnitValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.DataUnitValue.prototype.hasStringVal = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iris_bil.TelemItem.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.TelemItem.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.TelemItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.TelemItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.TelemItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    dbid: (f = msg.getDbid()) && proto.iris_bil.DatabaseId.toObject(includeInstance, f),
    channelName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    val: (f = msg.getVal()) && proto.iris_bil.DataUnitValue.toObject(includeInstance, f),
    timestampsList: jspb.Message.toObjectList(msg.getTimestampsList(),
    time_pb.IrisDownlinkTimestamp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.TelemItem}
 */
proto.iris_bil.TelemItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.TelemItem;
  return proto.iris_bil.TelemItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.TelemItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.TelemItem}
 */
proto.iris_bil.TelemItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iris_bil.DatabaseId;
      reader.readMessage(value,proto.iris_bil.DatabaseId.deserializeBinaryFromReader);
      msg.setDbid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 3:
      var value = new proto.iris_bil.DataUnitValue;
      reader.readMessage(value,proto.iris_bil.DataUnitValue.deserializeBinaryFromReader);
      msg.setVal(value);
      break;
    case 4:
      var value = new time_pb.IrisDownlinkTimestamp;
      reader.readMessage(value,time_pb.IrisDownlinkTimestamp.deserializeBinaryFromReader);
      msg.addTimestamps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.TelemItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.TelemItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.TelemItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.TelemItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDbid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iris_bil.DatabaseId.serializeBinaryToWriter
    );
  }
  f = message.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iris_bil.DataUnitValue.serializeBinaryToWriter
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      time_pb.IrisDownlinkTimestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatabaseId dbid = 1;
 * @return {?proto.iris_bil.DatabaseId}
 */
proto.iris_bil.TelemItem.prototype.getDbid = function() {
  return /** @type{?proto.iris_bil.DatabaseId} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.DatabaseId, 1));
};


/**
 * @param {?proto.iris_bil.DatabaseId|undefined} value
 * @return {!proto.iris_bil.TelemItem} returns this
*/
proto.iris_bil.TelemItem.prototype.setDbid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.TelemItem} returns this
 */
proto.iris_bil.TelemItem.prototype.clearDbid = function() {
  return this.setDbid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.TelemItem.prototype.hasDbid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string channel_name = 2;
 * @return {string}
 */
proto.iris_bil.TelemItem.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.TelemItem} returns this
 */
proto.iris_bil.TelemItem.prototype.setChannelName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional DataUnitValue val = 3;
 * @return {?proto.iris_bil.DataUnitValue}
 */
proto.iris_bil.TelemItem.prototype.getVal = function() {
  return /** @type{?proto.iris_bil.DataUnitValue} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.DataUnitValue, 3));
};


/**
 * @param {?proto.iris_bil.DataUnitValue|undefined} value
 * @return {!proto.iris_bil.TelemItem} returns this
*/
proto.iris_bil.TelemItem.prototype.setVal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.TelemItem} returns this
 */
proto.iris_bil.TelemItem.prototype.clearVal = function() {
  return this.setVal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.TelemItem.prototype.hasVal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated IrisDownlinkTimestamp timestamps = 4;
 * @return {!Array<!proto.iris_bil.IrisDownlinkTimestamp>}
 */
proto.iris_bil.TelemItem.prototype.getTimestampsList = function() {
  return /** @type{!Array<!proto.iris_bil.IrisDownlinkTimestamp>} */ (
    jspb.Message.getRepeatedWrapperField(this, time_pb.IrisDownlinkTimestamp, 4));
};


/**
 * @param {!Array<!proto.iris_bil.IrisDownlinkTimestamp>} value
 * @return {!proto.iris_bil.TelemItem} returns this
*/
proto.iris_bil.TelemItem.prototype.setTimestampsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.iris_bil.IrisDownlinkTimestamp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.IrisDownlinkTimestamp}
 */
proto.iris_bil.TelemItem.prototype.addTimestamps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.iris_bil.IrisDownlinkTimestamp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.TelemItem} returns this
 */
proto.iris_bil.TelemItem.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.EventArg.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.EventArg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.EventArg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.EventArg.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    val: (f = msg.getVal()) && proto.iris_bil.DataUnitValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.EventArg}
 */
proto.iris_bil.EventArg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.EventArg;
  return proto.iris_bil.EventArg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.EventArg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.EventArg}
 */
proto.iris_bil.EventArg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.iris_bil.DataUnitValue;
      reader.readMessage(value,proto.iris_bil.DataUnitValue.deserializeBinaryFromReader);
      msg.setVal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.EventArg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.EventArg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.EventArg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.EventArg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVal();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iris_bil.DataUnitValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.iris_bil.EventArg.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.EventArg} returns this
 */
proto.iris_bil.EventArg.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DataUnitValue val = 2;
 * @return {?proto.iris_bil.DataUnitValue}
 */
proto.iris_bil.EventArg.prototype.getVal = function() {
  return /** @type{?proto.iris_bil.DataUnitValue} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.DataUnitValue, 2));
};


/**
 * @param {?proto.iris_bil.DataUnitValue|undefined} value
 * @return {!proto.iris_bil.EventArg} returns this
*/
proto.iris_bil.EventArg.prototype.setVal = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.EventArg} returns this
 */
proto.iris_bil.EventArg.prototype.clearVal = function() {
  return this.setVal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.EventArg.prototype.hasVal = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iris_bil.Event.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    dbid: (f = msg.getDbid()) && proto.iris_bil.DatabaseId.toObject(includeInstance, f),
    eventName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    argsList: jspb.Message.toObjectList(msg.getArgsList(),
    proto.iris_bil.EventArg.toObject, includeInstance),
    timestampsList: jspb.Message.toObjectList(msg.getTimestampsList(),
    time_pb.IrisDownlinkTimestamp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.Event}
 */
proto.iris_bil.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.Event;
  return proto.iris_bil.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.Event}
 */
proto.iris_bil.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iris_bil.DatabaseId;
      reader.readMessage(value,proto.iris_bil.DatabaseId.deserializeBinaryFromReader);
      msg.setDbid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventName(value);
      break;
    case 3:
      var value = new proto.iris_bil.EventArg;
      reader.readMessage(value,proto.iris_bil.EventArg.deserializeBinaryFromReader);
      msg.addArgs(value);
      break;
    case 4:
      var value = new time_pb.IrisDownlinkTimestamp;
      reader.readMessage(value,time_pb.IrisDownlinkTimestamp.deserializeBinaryFromReader);
      msg.addTimestamps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDbid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iris_bil.DatabaseId.serializeBinaryToWriter
    );
  }
  f = message.getEventName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.iris_bil.EventArg.serializeBinaryToWriter
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      time_pb.IrisDownlinkTimestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatabaseId dbid = 1;
 * @return {?proto.iris_bil.DatabaseId}
 */
proto.iris_bil.Event.prototype.getDbid = function() {
  return /** @type{?proto.iris_bil.DatabaseId} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.DatabaseId, 1));
};


/**
 * @param {?proto.iris_bil.DatabaseId|undefined} value
 * @return {!proto.iris_bil.Event} returns this
*/
proto.iris_bil.Event.prototype.setDbid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.Event} returns this
 */
proto.iris_bil.Event.prototype.clearDbid = function() {
  return this.setDbid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.Event.prototype.hasDbid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string event_name = 2;
 * @return {string}
 */
proto.iris_bil.Event.prototype.getEventName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.Event} returns this
 */
proto.iris_bil.Event.prototype.setEventName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated EventArg args = 3;
 * @return {!Array<!proto.iris_bil.EventArg>}
 */
proto.iris_bil.Event.prototype.getArgsList = function() {
  return /** @type{!Array<!proto.iris_bil.EventArg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iris_bil.EventArg, 3));
};


/**
 * @param {!Array<!proto.iris_bil.EventArg>} value
 * @return {!proto.iris_bil.Event} returns this
*/
proto.iris_bil.Event.prototype.setArgsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.iris_bil.EventArg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.EventArg}
 */
proto.iris_bil.Event.prototype.addArgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iris_bil.EventArg, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.Event} returns this
 */
proto.iris_bil.Event.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};


/**
 * repeated IrisDownlinkTimestamp timestamps = 4;
 * @return {!Array<!proto.iris_bil.IrisDownlinkTimestamp>}
 */
proto.iris_bil.Event.prototype.getTimestampsList = function() {
  return /** @type{!Array<!proto.iris_bil.IrisDownlinkTimestamp>} */ (
    jspb.Message.getRepeatedWrapperField(this, time_pb.IrisDownlinkTimestamp, 4));
};


/**
 * @param {!Array<!proto.iris_bil.IrisDownlinkTimestamp>} value
 * @return {!proto.iris_bil.Event} returns this
*/
proto.iris_bil.Event.prototype.setTimestampsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.iris_bil.IrisDownlinkTimestamp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.IrisDownlinkTimestamp}
 */
proto.iris_bil.Event.prototype.addTimestamps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.iris_bil.IrisDownlinkTimestamp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.Event} returns this
 */
proto.iris_bil.Event.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.CommandArg.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.CommandArg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.CommandArg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.CommandArg.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    val: (f = msg.getVal()) && proto.iris_bil.DataUnitValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.CommandArg}
 */
proto.iris_bil.CommandArg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.CommandArg;
  return proto.iris_bil.CommandArg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.CommandArg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.CommandArg}
 */
proto.iris_bil.CommandArg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.iris_bil.DataUnitValue;
      reader.readMessage(value,proto.iris_bil.DataUnitValue.deserializeBinaryFromReader);
      msg.setVal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.CommandArg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.CommandArg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.CommandArg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.CommandArg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVal();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iris_bil.DataUnitValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.iris_bil.CommandArg.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.CommandArg} returns this
 */
proto.iris_bil.CommandArg.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DataUnitValue val = 2;
 * @return {?proto.iris_bil.DataUnitValue}
 */
proto.iris_bil.CommandArg.prototype.getVal = function() {
  return /** @type{?proto.iris_bil.DataUnitValue} */ (
    jspb.Message.getWrapperField(this, proto.iris_bil.DataUnitValue, 2));
};


/**
 * @param {?proto.iris_bil.DataUnitValue|undefined} value
 * @return {!proto.iris_bil.CommandArg} returns this
*/
proto.iris_bil.CommandArg.prototype.setVal = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iris_bil.CommandArg} returns this
 */
proto.iris_bil.CommandArg.prototype.clearVal = function() {
  return this.setVal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iris_bil.CommandArg.prototype.hasVal = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iris_bil.Command.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iris_bil.Command.prototype.toObject = function(opt_includeInstance) {
  return proto.iris_bil.Command.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iris_bil.Command} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.Command.toObject = function(includeInstance, msg) {
  var f, obj = {
    ulid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    argsList: jspb.Message.toObjectList(msg.getArgsList(),
    proto.iris_bil.CommandArg.toObject, includeInstance),
    timestampsList: jspb.Message.toObjectList(msg.getTimestampsList(),
    time_pb.IrisUplinkTimestamp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iris_bil.Command}
 */
proto.iris_bil.Command.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iris_bil.Command;
  return proto.iris_bil.Command.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iris_bil.Command} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iris_bil.Command}
 */
proto.iris_bil.Command.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUlid(value);
      break;
    case 2:
      var value = /** @type {!proto.iris_bil.Command.CommandType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.iris_bil.CommandArg;
      reader.readMessage(value,proto.iris_bil.CommandArg.deserializeBinaryFromReader);
      msg.addArgs(value);
      break;
    case 5:
      var value = new time_pb.IrisUplinkTimestamp;
      reader.readMessage(value,time_pb.IrisUplinkTimestamp.deserializeBinaryFromReader);
      msg.addTimestamps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iris_bil.Command.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iris_bil.Command.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iris_bil.Command} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iris_bil.Command.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUlid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.iris_bil.CommandArg.serializeBinaryToWriter
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      time_pb.IrisUplinkTimestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.iris_bil.Command.CommandType = {
  FSW_COMMAND: 0,
  META_COMMAND: 1,
  ALIAS_COMMAND: 2
};

/**
 * optional string ulid = 1;
 * @return {string}
 */
proto.iris_bil.Command.prototype.getUlid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.Command} returns this
 */
proto.iris_bil.Command.prototype.setUlid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CommandType type = 2;
 * @return {!proto.iris_bil.Command.CommandType}
 */
proto.iris_bil.Command.prototype.getType = function() {
  return /** @type {!proto.iris_bil.Command.CommandType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.iris_bil.Command.CommandType} value
 * @return {!proto.iris_bil.Command} returns this
 */
proto.iris_bil.Command.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.iris_bil.Command.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.iris_bil.Command} returns this
 */
proto.iris_bil.Command.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated CommandArg args = 4;
 * @return {!Array<!proto.iris_bil.CommandArg>}
 */
proto.iris_bil.Command.prototype.getArgsList = function() {
  return /** @type{!Array<!proto.iris_bil.CommandArg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iris_bil.CommandArg, 4));
};


/**
 * @param {!Array<!proto.iris_bil.CommandArg>} value
 * @return {!proto.iris_bil.Command} returns this
*/
proto.iris_bil.Command.prototype.setArgsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.iris_bil.CommandArg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.CommandArg}
 */
proto.iris_bil.Command.prototype.addArgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.iris_bil.CommandArg, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.Command} returns this
 */
proto.iris_bil.Command.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};


/**
 * repeated IrisUplinkTimestamp timestamps = 5;
 * @return {!Array<!proto.iris_bil.IrisUplinkTimestamp>}
 */
proto.iris_bil.Command.prototype.getTimestampsList = function() {
  return /** @type{!Array<!proto.iris_bil.IrisUplinkTimestamp>} */ (
    jspb.Message.getRepeatedWrapperField(this, time_pb.IrisUplinkTimestamp, 5));
};


/**
 * @param {!Array<!proto.iris_bil.IrisUplinkTimestamp>} value
 * @return {!proto.iris_bil.Command} returns this
*/
proto.iris_bil.Command.prototype.setTimestampsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.iris_bil.IrisUplinkTimestamp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iris_bil.IrisUplinkTimestamp}
 */
proto.iris_bil.Command.prototype.addTimestamps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.iris_bil.IrisUplinkTimestamp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iris_bil.Command} returns this
 */
proto.iris_bil.Command.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};


goog.object.extend(exports, proto.iris_bil);
