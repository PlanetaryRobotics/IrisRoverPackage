# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import artemis_bil_pb2 as artemis__bil__pb2
from . import db_pb2 as db__pb2


class ArtemisBilStub(object):
    """Service running in the BIL (Python).
    In the prototype, it basically just handles data send requests from the
    client (Unity). In the future, this will also handle streaming uplink data
    into Unity.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendTelem = channel.unary_unary(
                '/iris_artemis_bil.ArtemisBil/SendTelem',
                request_serializer=db__pb2.TelemItem.SerializeToString,
                response_deserializer=artemis__bil__pb2.SendTelemAck.FromString,
                )


class ArtemisBilServicer(object):
    """Service running in the BIL (Python).
    In the prototype, it basically just handles data send requests from the
    client (Unity). In the future, this will also handle streaming uplink data
    into Unity.
    """

    def SendTelem(self, request, context):
        """Asks the BIL to send telem to the rest of the stack:
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ArtemisBilServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendTelem': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTelem,
                    request_deserializer=db__pb2.TelemItem.FromString,
                    response_serializer=artemis__bil__pb2.SendTelemAck.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'iris_artemis_bil.ArtemisBil', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ArtemisBil(object):
    """Service running in the BIL (Python).
    In the prototype, it basically just handles data send requests from the
    client (Unity). In the future, this will also handle streaming uplink data
    into Unity.
    """

    @staticmethod
    def SendTelem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/iris_artemis_bil.ArtemisBil/SendTelem',
            db__pb2.TelemItem.SerializeToString,
            artemis__bil__pb2.SendTelemAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
